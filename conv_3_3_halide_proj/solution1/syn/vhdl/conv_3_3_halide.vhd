-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_3_3_halide is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hw_input_stencil_values_V_val_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    hw_input_stencil_values_V_val_V_empty_n : IN STD_LOGIC;
    hw_input_stencil_values_V_val_V_read : OUT STD_LOGIC;
    hw_output_stencil_values_V_val_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    hw_output_stencil_values_V_val_V_full_n : IN STD_LOGIC;
    hw_output_stencil_values_V_val_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_3_3_halide is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv_3_3_halide,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.375000,HLS_SYN_LAT=4225,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=25,HLS_SYN_LUT=133,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal hw_input_stencil_values_V_val_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln320_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hw_output_stencil_values_V_val_V_blk_n : STD_LOGIC;
    signal and_ln321_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c0_fu_80_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal c0_reg_118 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln321_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_reg_123 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln319_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c1_fu_98_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_predicate_op27_write_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal c0_0_reg_52 : STD_LOGIC_VECTOR (6 downto 0);
    signal c1_0_reg_63 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln321_1_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c0_0_reg_52_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)))) and (icmp_ln320_fu_92_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c0_0_reg_52 <= c0_reg_118;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c0_0_reg_52 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    c1_0_reg_63_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)))) and (icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c1_0_reg_63 <= c1_fu_98_p2;
            elsif (((icmp_ln319_fu_74_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c1_0_reg_63 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                c0_reg_118 <= c0_fu_80_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln319_fu_74_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln321_reg_123 <= icmp_ln321_fu_86_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, hw_input_stencil_values_V_val_V_empty_n, hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state3, icmp_ln320_fu_92_p2, ap_CS_fsm_state2, icmp_ln319_fu_74_p2, ap_predicate_op27_write_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln319_fu_74_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)))) and (icmp_ln320_fu_92_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)))) and (icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    and_ln321_fu_110_p2 <= (icmp_ln321_reg_123 and icmp_ln321_1_fu_104_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state3_assign_proc : process(hw_input_stencil_values_V_val_V_empty_n, hw_output_stencil_values_V_val_V_full_n, icmp_ln320_fu_92_p2, ap_predicate_op27_write_state3)
    begin
                ap_block_state3 <= (((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln319_fu_74_p2)
    begin
        if (((icmp_ln319_fu_74_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op27_write_state3_assign_proc : process(icmp_ln320_fu_92_p2, and_ln321_fu_110_p2)
    begin
                ap_predicate_op27_write_state3 <= ((ap_const_lv1_1 = and_ln321_fu_110_p2) and (icmp_ln320_fu_92_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln319_fu_74_p2)
    begin
        if (((icmp_ln319_fu_74_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c0_fu_80_p2 <= std_logic_vector(unsigned(c0_0_reg_52) + unsigned(ap_const_lv7_1));
    c1_fu_98_p2 <= std_logic_vector(unsigned(c1_0_reg_63) + unsigned(ap_const_lv7_1));

    hw_input_stencil_values_V_val_V_blk_n_assign_proc : process(hw_input_stencil_values_V_val_V_empty_n, ap_CS_fsm_state3, icmp_ln320_fu_92_p2)
    begin
        if (((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            hw_input_stencil_values_V_val_V_blk_n <= hw_input_stencil_values_V_val_V_empty_n;
        else 
            hw_input_stencil_values_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hw_input_stencil_values_V_val_V_read_assign_proc : process(hw_input_stencil_values_V_val_V_empty_n, hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state3, icmp_ln320_fu_92_p2, ap_predicate_op27_write_state3)
    begin
        if ((not((((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)))) and (icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            hw_input_stencil_values_V_val_V_read <= ap_const_logic_1;
        else 
            hw_input_stencil_values_V_val_V_read <= ap_const_logic_0;
        end if; 
    end process;


    hw_output_stencil_values_V_val_V_blk_n_assign_proc : process(hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state3, icmp_ln320_fu_92_p2, and_ln321_fu_110_p2)
    begin
        if (((ap_const_lv1_1 = and_ln321_fu_110_p2) and (icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            hw_output_stencil_values_V_val_V_blk_n <= hw_output_stencil_values_V_val_V_full_n;
        else 
            hw_output_stencil_values_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hw_output_stencil_values_V_val_V_din <= hw_input_stencil_values_V_val_V_dout;

    hw_output_stencil_values_V_val_V_write_assign_proc : process(hw_input_stencil_values_V_val_V_empty_n, hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state3, icmp_ln320_fu_92_p2, ap_predicate_op27_write_state3)
    begin
        if ((not((((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_0) and (ap_predicate_op27_write_state3 = ap_const_boolean_1)) or ((icmp_ln320_fu_92_p2 = ap_const_lv1_0) and (hw_input_stencil_values_V_val_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op27_write_state3 = ap_const_boolean_1))) then 
            hw_output_stencil_values_V_val_V_write <= ap_const_logic_1;
        else 
            hw_output_stencil_values_V_val_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln319_fu_74_p2 <= "1" when (c0_0_reg_52 = ap_const_lv7_40) else "0";
    icmp_ln320_fu_92_p2 <= "1" when (c1_0_reg_63 = ap_const_lv7_40) else "0";
    icmp_ln321_1_fu_104_p2 <= "1" when (unsigned(c1_0_reg_63) < unsigned(ap_const_lv7_3E)) else "0";
    icmp_ln321_fu_86_p2 <= "1" when (unsigned(c0_0_reg_52) < unsigned(ap_const_lv7_3E)) else "0";
end behav;
