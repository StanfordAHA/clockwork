#ifndef __VIVADO_SYNTH__
#include <fstream>
using namespace std;

  // Debug utility
  ofstream* global_debug_handle;

#endif //__VIVADO_SYNTH__
// compute file: ef_8_opt_compute_units.h
#include "ef_8_opt_compute_units.h"

struct bright_bright_update_0_write0_to_bright_laplace_diff_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write1_to_bright_laplace_diff_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write2_to_bright_laplace_diff_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write3_to_bright_laplace_diff_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write4_to_bright_laplace_diff_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write5_to_bright_laplace_diff_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write6_to_bright_laplace_diff_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write7_to_bright_laplace_diff_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_bright_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[-24, 1096], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 6
  // 0, 1, 141, 142, 282, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 139> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 139> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_140() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_141() {
		return f4;
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_281() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_282() {
		return f8;
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[-23, 1097], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[-22, 1098], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[-21, 1099], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[-20, 1100], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[-19, 1101], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[-18, 1102], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_bright_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[-17, 1103], [-7, 1919]}
	// Capacity: 285
	// # of read delays: 7
  // 0, 1, 2, 142, 143, 283, 284
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 139> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 139> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_143() {
		return f8;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}

	inline hw_uint<16> peek_284() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_cache {
  // Reader addrs...
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_update_0[d0, d1] -> bright[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // # of banks: 16
  bright_bright_update_0_write0_to_bright_laplace_diff_0_rd0_cache bright_bright_update_0_write0_to_bright_laplace_diff_0_rd0;
  bright_bright_update_0_write1_to_bright_laplace_diff_0_rd1_cache bright_bright_update_0_write1_to_bright_laplace_diff_0_rd1;
  bright_bright_update_0_write2_to_bright_laplace_diff_0_rd2_cache bright_bright_update_0_write2_to_bright_laplace_diff_0_rd2;
  bright_bright_update_0_write3_to_bright_laplace_diff_0_rd3_cache bright_bright_update_0_write3_to_bright_laplace_diff_0_rd3;
  bright_bright_update_0_write4_to_bright_laplace_diff_0_rd4_cache bright_bright_update_0_write4_to_bright_laplace_diff_0_rd4;
  bright_bright_update_0_write5_to_bright_laplace_diff_0_rd5_cache bright_bright_update_0_write5_to_bright_laplace_diff_0_rd5;
  bright_bright_update_0_write6_to_bright_laplace_diff_0_rd6_cache bright_bright_update_0_write6_to_bright_laplace_diff_0_rd6;
  bright_bright_update_0_write7_to_bright_laplace_diff_0_rd7_cache bright_bright_update_0_write7_to_bright_laplace_diff_0_rd7;
  bright_bright_update_0_write0_merged_banks_10_cache bright_bright_update_0_write0_merged_banks_10;
  bright_bright_update_0_write1_merged_banks_10_cache bright_bright_update_0_write1_merged_banks_10;
  bright_bright_update_0_write2_merged_banks_10_cache bright_bright_update_0_write2_merged_banks_10;
  bright_bright_update_0_write3_merged_banks_10_cache bright_bright_update_0_write3_merged_banks_10;
  bright_bright_update_0_write4_merged_banks_10_cache bright_bright_update_0_write4_merged_banks_10;
  bright_bright_update_0_write5_merged_banks_10_cache bright_bright_update_0_write5_merged_banks_10;
  bright_bright_update_0_write6_merged_banks_10_cache bright_bright_update_0_write6_merged_banks_10;
  bright_bright_update_0_write7_merged_banks_10_cache bright_bright_update_0_write7_merged_banks_10;
};



inline void bright_bright_update_0_write0_write(hw_uint<16>& bright_bright_update_0_write0, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write0_to_bright_laplace_diff_0_rd0.push(bright_bright_update_0_write0);
  bright.bright_bright_update_0_write0_merged_banks_10.push(bright_bright_update_0_write0);
}

inline void bright_bright_update_0_write1_write(hw_uint<16>& bright_bright_update_0_write1, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write1_to_bright_laplace_diff_0_rd1.push(bright_bright_update_0_write1);
  bright.bright_bright_update_0_write1_merged_banks_10.push(bright_bright_update_0_write1);
}

inline void bright_bright_update_0_write2_write(hw_uint<16>& bright_bright_update_0_write2, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write2_to_bright_laplace_diff_0_rd2.push(bright_bright_update_0_write2);
  bright.bright_bright_update_0_write2_merged_banks_10.push(bright_bright_update_0_write2);
}

inline void bright_bright_update_0_write3_write(hw_uint<16>& bright_bright_update_0_write3, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write3_to_bright_laplace_diff_0_rd3.push(bright_bright_update_0_write3);
  bright.bright_bright_update_0_write3_merged_banks_10.push(bright_bright_update_0_write3);
}

inline void bright_bright_update_0_write4_write(hw_uint<16>& bright_bright_update_0_write4, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write4_to_bright_laplace_diff_0_rd4.push(bright_bright_update_0_write4);
  bright.bright_bright_update_0_write4_merged_banks_10.push(bright_bright_update_0_write4);
}

inline void bright_bright_update_0_write5_write(hw_uint<16>& bright_bright_update_0_write5, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write5_to_bright_laplace_diff_0_rd5.push(bright_bright_update_0_write5);
  bright.bright_bright_update_0_write5_merged_banks_10.push(bright_bright_update_0_write5);
}

inline void bright_bright_update_0_write6_write(hw_uint<16>& bright_bright_update_0_write6, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write6_to_bright_laplace_diff_0_rd6.push(bright_bright_update_0_write6);
  bright.bright_bright_update_0_write6_merged_banks_10.push(bright_bright_update_0_write6);
}

inline void bright_bright_update_0_write7_write(hw_uint<16>& bright_bright_update_0_write7, bright_cache& bright, int d0, int d1, int dynamic_address) {
  bright.bright_bright_update_0_write7_to_bright_laplace_diff_0_rd7.push(bright_bright_update_0_write7);
  bright.bright_bright_update_0_write7_merged_banks_10.push(bright_bright_update_0_write7);
}

inline hw_uint<16> bright_gauss_blur_1_rd0_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd0 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_284();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd1_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd1 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_143();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd10_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd10 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd11_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd11 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd12_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd12 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd13_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd13 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd14_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd14 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd15_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd15 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd16_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd16 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd17_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd17 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd18_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd18 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd19_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd19 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd2_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd2 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_2();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd20_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd20 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd21_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd21 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd22_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd22 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd23_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd23 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd24_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd24 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd25_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd25 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd26_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd26 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd27_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd27 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd28_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd28 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd29_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd29 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd3_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd3 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd30_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd30 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd31_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd31 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd32_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd32 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd33_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd33 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd34_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd34 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd35_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd35 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd36_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd36 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd37_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd37 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd38_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd38 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd39_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd39 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd4_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd4 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd40_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd40 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd41_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd41 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd42_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd42 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd43_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd43 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd44_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd44 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd45_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd45 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd46_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd46 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd47_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd47 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd48_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd48 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd49_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd49 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd5_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd5 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd50_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd50 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd51_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd51 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd52_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd52 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd53_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd53 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd54_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd54 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd55_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd55 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd56_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd56 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd57_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd57 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd58_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd58 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd59_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd59 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd6_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd6 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd60_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd60 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd61_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd61 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd62_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd62 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd63_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd63 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd64_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd64 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd65_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd65 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd66_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd66 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd67_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd67 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd68_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd68 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd69_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd69 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_282();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd7_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd7 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_142();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd70_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd70 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_141();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd71_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd71 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd8_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd8 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_1();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_1_rd9_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_1_rd9 read pattern: { bright_gauss_blur_1_update_0[d0, d1] -> bright[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_283();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd0_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd0 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_to_bright_laplace_diff_0_rd0.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd1_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd1 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_to_bright_laplace_diff_0_rd1.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd2_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd2 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_to_bright_laplace_diff_0_rd2.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd3_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd3 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_to_bright_laplace_diff_0_rd3.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd4_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd4 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_to_bright_laplace_diff_0_rd4.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd5_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd5 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_to_bright_laplace_diff_0_rd5.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd6_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd6 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_to_bright_laplace_diff_0_rd6.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd7_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd7 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_to_bright_laplace_diff_0_rd7.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_bright_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_rd0_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd0 read pattern: { bright_weights_update_0[d0, d1] -> bright[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write0 = bright.bright_bright_update_0_write0_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_rd1_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd1 read pattern: { bright_weights_update_0[d0, d1] -> bright[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write1 = bright.bright_bright_update_0_write1_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_rd2_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd2 read pattern: { bright_weights_update_0[d0, d1] -> bright[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write2 = bright.bright_bright_update_0_write2_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_rd3_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd3 read pattern: { bright_weights_update_0[d0, d1] -> bright[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write3 = bright.bright_bright_update_0_write3_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_rd4_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd4 read pattern: { bright_weights_update_0[d0, d1] -> bright[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write4 = bright.bright_bright_update_0_write4_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_rd5_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd5 read pattern: { bright_weights_update_0[d0, d1] -> bright[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write5 = bright.bright_bright_update_0_write5_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_rd6_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd6 read pattern: { bright_weights_update_0[d0, d1] -> bright[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write6 = bright.bright_bright_update_0_write6_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_rd7_select(bright_cache& bright, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_rd7 read pattern: { bright_weights_update_0[d0, d1] -> bright[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_bright_update_0_write7 = bright.bright_bright_update_0_write7_merged_banks_10.peek_0();
  return value_bright_bright_update_0_write7;
  return 0;
}

// # of bundles = 4
// bright_gauss_blur_1_update_0_read
//	bright_gauss_blur_1_rd0
//	bright_gauss_blur_1_rd1
//	bright_gauss_blur_1_rd2
//	bright_gauss_blur_1_rd3
//	bright_gauss_blur_1_rd4
//	bright_gauss_blur_1_rd5
//	bright_gauss_blur_1_rd6
//	bright_gauss_blur_1_rd7
//	bright_gauss_blur_1_rd8
//	bright_gauss_blur_1_rd9
//	bright_gauss_blur_1_rd10
//	bright_gauss_blur_1_rd11
//	bright_gauss_blur_1_rd12
//	bright_gauss_blur_1_rd13
//	bright_gauss_blur_1_rd14
//	bright_gauss_blur_1_rd15
//	bright_gauss_blur_1_rd16
//	bright_gauss_blur_1_rd17
//	bright_gauss_blur_1_rd18
//	bright_gauss_blur_1_rd19
//	bright_gauss_blur_1_rd20
//	bright_gauss_blur_1_rd21
//	bright_gauss_blur_1_rd22
//	bright_gauss_blur_1_rd23
//	bright_gauss_blur_1_rd24
//	bright_gauss_blur_1_rd25
//	bright_gauss_blur_1_rd26
//	bright_gauss_blur_1_rd27
//	bright_gauss_blur_1_rd28
//	bright_gauss_blur_1_rd29
//	bright_gauss_blur_1_rd30
//	bright_gauss_blur_1_rd31
//	bright_gauss_blur_1_rd32
//	bright_gauss_blur_1_rd33
//	bright_gauss_blur_1_rd34
//	bright_gauss_blur_1_rd35
//	bright_gauss_blur_1_rd36
//	bright_gauss_blur_1_rd37
//	bright_gauss_blur_1_rd38
//	bright_gauss_blur_1_rd39
//	bright_gauss_blur_1_rd40
//	bright_gauss_blur_1_rd41
//	bright_gauss_blur_1_rd42
//	bright_gauss_blur_1_rd43
//	bright_gauss_blur_1_rd44
//	bright_gauss_blur_1_rd45
//	bright_gauss_blur_1_rd46
//	bright_gauss_blur_1_rd47
//	bright_gauss_blur_1_rd48
//	bright_gauss_blur_1_rd49
//	bright_gauss_blur_1_rd50
//	bright_gauss_blur_1_rd51
//	bright_gauss_blur_1_rd52
//	bright_gauss_blur_1_rd53
//	bright_gauss_blur_1_rd54
//	bright_gauss_blur_1_rd55
//	bright_gauss_blur_1_rd56
//	bright_gauss_blur_1_rd57
//	bright_gauss_blur_1_rd58
//	bright_gauss_blur_1_rd59
//	bright_gauss_blur_1_rd60
//	bright_gauss_blur_1_rd61
//	bright_gauss_blur_1_rd62
//	bright_gauss_blur_1_rd63
//	bright_gauss_blur_1_rd64
//	bright_gauss_blur_1_rd65
//	bright_gauss_blur_1_rd66
//	bright_gauss_blur_1_rd67
//	bright_gauss_blur_1_rd68
//	bright_gauss_blur_1_rd69
//	bright_gauss_blur_1_rd70
//	bright_gauss_blur_1_rd71
inline hw_uint<1152> bright_bright_gauss_blur_1_update_0_read_bundle_read(bright_cache& bright, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // bright_gauss_blur_1_rd0
    // bright_gauss_blur_1_rd1
    // bright_gauss_blur_1_rd2
    // bright_gauss_blur_1_rd3
    // bright_gauss_blur_1_rd4
    // bright_gauss_blur_1_rd5
    // bright_gauss_blur_1_rd6
    // bright_gauss_blur_1_rd7
    // bright_gauss_blur_1_rd8
    // bright_gauss_blur_1_rd9
    // bright_gauss_blur_1_rd10
    // bright_gauss_blur_1_rd11
    // bright_gauss_blur_1_rd12
    // bright_gauss_blur_1_rd13
    // bright_gauss_blur_1_rd14
    // bright_gauss_blur_1_rd15
    // bright_gauss_blur_1_rd16
    // bright_gauss_blur_1_rd17
    // bright_gauss_blur_1_rd18
    // bright_gauss_blur_1_rd19
    // bright_gauss_blur_1_rd20
    // bright_gauss_blur_1_rd21
    // bright_gauss_blur_1_rd22
    // bright_gauss_blur_1_rd23
    // bright_gauss_blur_1_rd24
    // bright_gauss_blur_1_rd25
    // bright_gauss_blur_1_rd26
    // bright_gauss_blur_1_rd27
    // bright_gauss_blur_1_rd28
    // bright_gauss_blur_1_rd29
    // bright_gauss_blur_1_rd30
    // bright_gauss_blur_1_rd31
    // bright_gauss_blur_1_rd32
    // bright_gauss_blur_1_rd33
    // bright_gauss_blur_1_rd34
    // bright_gauss_blur_1_rd35
    // bright_gauss_blur_1_rd36
    // bright_gauss_blur_1_rd37
    // bright_gauss_blur_1_rd38
    // bright_gauss_blur_1_rd39
    // bright_gauss_blur_1_rd40
    // bright_gauss_blur_1_rd41
    // bright_gauss_blur_1_rd42
    // bright_gauss_blur_1_rd43
    // bright_gauss_blur_1_rd44
    // bright_gauss_blur_1_rd45
    // bright_gauss_blur_1_rd46
    // bright_gauss_blur_1_rd47
    // bright_gauss_blur_1_rd48
    // bright_gauss_blur_1_rd49
    // bright_gauss_blur_1_rd50
    // bright_gauss_blur_1_rd51
    // bright_gauss_blur_1_rd52
    // bright_gauss_blur_1_rd53
    // bright_gauss_blur_1_rd54
    // bright_gauss_blur_1_rd55
    // bright_gauss_blur_1_rd56
    // bright_gauss_blur_1_rd57
    // bright_gauss_blur_1_rd58
    // bright_gauss_blur_1_rd59
    // bright_gauss_blur_1_rd60
    // bright_gauss_blur_1_rd61
    // bright_gauss_blur_1_rd62
    // bright_gauss_blur_1_rd63
    // bright_gauss_blur_1_rd64
    // bright_gauss_blur_1_rd65
    // bright_gauss_blur_1_rd66
    // bright_gauss_blur_1_rd67
    // bright_gauss_blur_1_rd68
    // bright_gauss_blur_1_rd69
    // bright_gauss_blur_1_rd70
    // bright_gauss_blur_1_rd71

	hw_uint<1152> result;
	hw_uint<16> bright_gauss_blur_1_rd0_res = bright_gauss_blur_1_rd0_select(bright, d0, d1, dynamic_address);
	set_at<0, 1152>(result, bright_gauss_blur_1_rd0_res);
	hw_uint<16> bright_gauss_blur_1_rd1_res = bright_gauss_blur_1_rd1_select(bright, d0, d1, dynamic_address);
	set_at<16, 1152>(result, bright_gauss_blur_1_rd1_res);
	hw_uint<16> bright_gauss_blur_1_rd2_res = bright_gauss_blur_1_rd2_select(bright, d0, d1, dynamic_address);
	set_at<32, 1152>(result, bright_gauss_blur_1_rd2_res);
	hw_uint<16> bright_gauss_blur_1_rd3_res = bright_gauss_blur_1_rd3_select(bright, d0, d1, dynamic_address);
	set_at<48, 1152>(result, bright_gauss_blur_1_rd3_res);
	hw_uint<16> bright_gauss_blur_1_rd4_res = bright_gauss_blur_1_rd4_select(bright, d0, d1, dynamic_address);
	set_at<64, 1152>(result, bright_gauss_blur_1_rd4_res);
	hw_uint<16> bright_gauss_blur_1_rd5_res = bright_gauss_blur_1_rd5_select(bright, d0, d1, dynamic_address);
	set_at<80, 1152>(result, bright_gauss_blur_1_rd5_res);
	hw_uint<16> bright_gauss_blur_1_rd6_res = bright_gauss_blur_1_rd6_select(bright, d0, d1, dynamic_address);
	set_at<96, 1152>(result, bright_gauss_blur_1_rd6_res);
	hw_uint<16> bright_gauss_blur_1_rd7_res = bright_gauss_blur_1_rd7_select(bright, d0, d1, dynamic_address);
	set_at<112, 1152>(result, bright_gauss_blur_1_rd7_res);
	hw_uint<16> bright_gauss_blur_1_rd8_res = bright_gauss_blur_1_rd8_select(bright, d0, d1, dynamic_address);
	set_at<128, 1152>(result, bright_gauss_blur_1_rd8_res);
	hw_uint<16> bright_gauss_blur_1_rd9_res = bright_gauss_blur_1_rd9_select(bright, d0, d1, dynamic_address);
	set_at<144, 1152>(result, bright_gauss_blur_1_rd9_res);
	hw_uint<16> bright_gauss_blur_1_rd10_res = bright_gauss_blur_1_rd10_select(bright, d0, d1, dynamic_address);
	set_at<160, 1152>(result, bright_gauss_blur_1_rd10_res);
	hw_uint<16> bright_gauss_blur_1_rd11_res = bright_gauss_blur_1_rd11_select(bright, d0, d1, dynamic_address);
	set_at<176, 1152>(result, bright_gauss_blur_1_rd11_res);
	hw_uint<16> bright_gauss_blur_1_rd12_res = bright_gauss_blur_1_rd12_select(bright, d0, d1, dynamic_address);
	set_at<192, 1152>(result, bright_gauss_blur_1_rd12_res);
	hw_uint<16> bright_gauss_blur_1_rd13_res = bright_gauss_blur_1_rd13_select(bright, d0, d1, dynamic_address);
	set_at<208, 1152>(result, bright_gauss_blur_1_rd13_res);
	hw_uint<16> bright_gauss_blur_1_rd14_res = bright_gauss_blur_1_rd14_select(bright, d0, d1, dynamic_address);
	set_at<224, 1152>(result, bright_gauss_blur_1_rd14_res);
	hw_uint<16> bright_gauss_blur_1_rd15_res = bright_gauss_blur_1_rd15_select(bright, d0, d1, dynamic_address);
	set_at<240, 1152>(result, bright_gauss_blur_1_rd15_res);
	hw_uint<16> bright_gauss_blur_1_rd16_res = bright_gauss_blur_1_rd16_select(bright, d0, d1, dynamic_address);
	set_at<256, 1152>(result, bright_gauss_blur_1_rd16_res);
	hw_uint<16> bright_gauss_blur_1_rd17_res = bright_gauss_blur_1_rd17_select(bright, d0, d1, dynamic_address);
	set_at<272, 1152>(result, bright_gauss_blur_1_rd17_res);
	hw_uint<16> bright_gauss_blur_1_rd18_res = bright_gauss_blur_1_rd18_select(bright, d0, d1, dynamic_address);
	set_at<288, 1152>(result, bright_gauss_blur_1_rd18_res);
	hw_uint<16> bright_gauss_blur_1_rd19_res = bright_gauss_blur_1_rd19_select(bright, d0, d1, dynamic_address);
	set_at<304, 1152>(result, bright_gauss_blur_1_rd19_res);
	hw_uint<16> bright_gauss_blur_1_rd20_res = bright_gauss_blur_1_rd20_select(bright, d0, d1, dynamic_address);
	set_at<320, 1152>(result, bright_gauss_blur_1_rd20_res);
	hw_uint<16> bright_gauss_blur_1_rd21_res = bright_gauss_blur_1_rd21_select(bright, d0, d1, dynamic_address);
	set_at<336, 1152>(result, bright_gauss_blur_1_rd21_res);
	hw_uint<16> bright_gauss_blur_1_rd22_res = bright_gauss_blur_1_rd22_select(bright, d0, d1, dynamic_address);
	set_at<352, 1152>(result, bright_gauss_blur_1_rd22_res);
	hw_uint<16> bright_gauss_blur_1_rd23_res = bright_gauss_blur_1_rd23_select(bright, d0, d1, dynamic_address);
	set_at<368, 1152>(result, bright_gauss_blur_1_rd23_res);
	hw_uint<16> bright_gauss_blur_1_rd24_res = bright_gauss_blur_1_rd24_select(bright, d0, d1, dynamic_address);
	set_at<384, 1152>(result, bright_gauss_blur_1_rd24_res);
	hw_uint<16> bright_gauss_blur_1_rd25_res = bright_gauss_blur_1_rd25_select(bright, d0, d1, dynamic_address);
	set_at<400, 1152>(result, bright_gauss_blur_1_rd25_res);
	hw_uint<16> bright_gauss_blur_1_rd26_res = bright_gauss_blur_1_rd26_select(bright, d0, d1, dynamic_address);
	set_at<416, 1152>(result, bright_gauss_blur_1_rd26_res);
	hw_uint<16> bright_gauss_blur_1_rd27_res = bright_gauss_blur_1_rd27_select(bright, d0, d1, dynamic_address);
	set_at<432, 1152>(result, bright_gauss_blur_1_rd27_res);
	hw_uint<16> bright_gauss_blur_1_rd28_res = bright_gauss_blur_1_rd28_select(bright, d0, d1, dynamic_address);
	set_at<448, 1152>(result, bright_gauss_blur_1_rd28_res);
	hw_uint<16> bright_gauss_blur_1_rd29_res = bright_gauss_blur_1_rd29_select(bright, d0, d1, dynamic_address);
	set_at<464, 1152>(result, bright_gauss_blur_1_rd29_res);
	hw_uint<16> bright_gauss_blur_1_rd30_res = bright_gauss_blur_1_rd30_select(bright, d0, d1, dynamic_address);
	set_at<480, 1152>(result, bright_gauss_blur_1_rd30_res);
	hw_uint<16> bright_gauss_blur_1_rd31_res = bright_gauss_blur_1_rd31_select(bright, d0, d1, dynamic_address);
	set_at<496, 1152>(result, bright_gauss_blur_1_rd31_res);
	hw_uint<16> bright_gauss_blur_1_rd32_res = bright_gauss_blur_1_rd32_select(bright, d0, d1, dynamic_address);
	set_at<512, 1152>(result, bright_gauss_blur_1_rd32_res);
	hw_uint<16> bright_gauss_blur_1_rd33_res = bright_gauss_blur_1_rd33_select(bright, d0, d1, dynamic_address);
	set_at<528, 1152>(result, bright_gauss_blur_1_rd33_res);
	hw_uint<16> bright_gauss_blur_1_rd34_res = bright_gauss_blur_1_rd34_select(bright, d0, d1, dynamic_address);
	set_at<544, 1152>(result, bright_gauss_blur_1_rd34_res);
	hw_uint<16> bright_gauss_blur_1_rd35_res = bright_gauss_blur_1_rd35_select(bright, d0, d1, dynamic_address);
	set_at<560, 1152>(result, bright_gauss_blur_1_rd35_res);
	hw_uint<16> bright_gauss_blur_1_rd36_res = bright_gauss_blur_1_rd36_select(bright, d0, d1, dynamic_address);
	set_at<576, 1152>(result, bright_gauss_blur_1_rd36_res);
	hw_uint<16> bright_gauss_blur_1_rd37_res = bright_gauss_blur_1_rd37_select(bright, d0, d1, dynamic_address);
	set_at<592, 1152>(result, bright_gauss_blur_1_rd37_res);
	hw_uint<16> bright_gauss_blur_1_rd38_res = bright_gauss_blur_1_rd38_select(bright, d0, d1, dynamic_address);
	set_at<608, 1152>(result, bright_gauss_blur_1_rd38_res);
	hw_uint<16> bright_gauss_blur_1_rd39_res = bright_gauss_blur_1_rd39_select(bright, d0, d1, dynamic_address);
	set_at<624, 1152>(result, bright_gauss_blur_1_rd39_res);
	hw_uint<16> bright_gauss_blur_1_rd40_res = bright_gauss_blur_1_rd40_select(bright, d0, d1, dynamic_address);
	set_at<640, 1152>(result, bright_gauss_blur_1_rd40_res);
	hw_uint<16> bright_gauss_blur_1_rd41_res = bright_gauss_blur_1_rd41_select(bright, d0, d1, dynamic_address);
	set_at<656, 1152>(result, bright_gauss_blur_1_rd41_res);
	hw_uint<16> bright_gauss_blur_1_rd42_res = bright_gauss_blur_1_rd42_select(bright, d0, d1, dynamic_address);
	set_at<672, 1152>(result, bright_gauss_blur_1_rd42_res);
	hw_uint<16> bright_gauss_blur_1_rd43_res = bright_gauss_blur_1_rd43_select(bright, d0, d1, dynamic_address);
	set_at<688, 1152>(result, bright_gauss_blur_1_rd43_res);
	hw_uint<16> bright_gauss_blur_1_rd44_res = bright_gauss_blur_1_rd44_select(bright, d0, d1, dynamic_address);
	set_at<704, 1152>(result, bright_gauss_blur_1_rd44_res);
	hw_uint<16> bright_gauss_blur_1_rd45_res = bright_gauss_blur_1_rd45_select(bright, d0, d1, dynamic_address);
	set_at<720, 1152>(result, bright_gauss_blur_1_rd45_res);
	hw_uint<16> bright_gauss_blur_1_rd46_res = bright_gauss_blur_1_rd46_select(bright, d0, d1, dynamic_address);
	set_at<736, 1152>(result, bright_gauss_blur_1_rd46_res);
	hw_uint<16> bright_gauss_blur_1_rd47_res = bright_gauss_blur_1_rd47_select(bright, d0, d1, dynamic_address);
	set_at<752, 1152>(result, bright_gauss_blur_1_rd47_res);
	hw_uint<16> bright_gauss_blur_1_rd48_res = bright_gauss_blur_1_rd48_select(bright, d0, d1, dynamic_address);
	set_at<768, 1152>(result, bright_gauss_blur_1_rd48_res);
	hw_uint<16> bright_gauss_blur_1_rd49_res = bright_gauss_blur_1_rd49_select(bright, d0, d1, dynamic_address);
	set_at<784, 1152>(result, bright_gauss_blur_1_rd49_res);
	hw_uint<16> bright_gauss_blur_1_rd50_res = bright_gauss_blur_1_rd50_select(bright, d0, d1, dynamic_address);
	set_at<800, 1152>(result, bright_gauss_blur_1_rd50_res);
	hw_uint<16> bright_gauss_blur_1_rd51_res = bright_gauss_blur_1_rd51_select(bright, d0, d1, dynamic_address);
	set_at<816, 1152>(result, bright_gauss_blur_1_rd51_res);
	hw_uint<16> bright_gauss_blur_1_rd52_res = bright_gauss_blur_1_rd52_select(bright, d0, d1, dynamic_address);
	set_at<832, 1152>(result, bright_gauss_blur_1_rd52_res);
	hw_uint<16> bright_gauss_blur_1_rd53_res = bright_gauss_blur_1_rd53_select(bright, d0, d1, dynamic_address);
	set_at<848, 1152>(result, bright_gauss_blur_1_rd53_res);
	hw_uint<16> bright_gauss_blur_1_rd54_res = bright_gauss_blur_1_rd54_select(bright, d0, d1, dynamic_address);
	set_at<864, 1152>(result, bright_gauss_blur_1_rd54_res);
	hw_uint<16> bright_gauss_blur_1_rd55_res = bright_gauss_blur_1_rd55_select(bright, d0, d1, dynamic_address);
	set_at<880, 1152>(result, bright_gauss_blur_1_rd55_res);
	hw_uint<16> bright_gauss_blur_1_rd56_res = bright_gauss_blur_1_rd56_select(bright, d0, d1, dynamic_address);
	set_at<896, 1152>(result, bright_gauss_blur_1_rd56_res);
	hw_uint<16> bright_gauss_blur_1_rd57_res = bright_gauss_blur_1_rd57_select(bright, d0, d1, dynamic_address);
	set_at<912, 1152>(result, bright_gauss_blur_1_rd57_res);
	hw_uint<16> bright_gauss_blur_1_rd58_res = bright_gauss_blur_1_rd58_select(bright, d0, d1, dynamic_address);
	set_at<928, 1152>(result, bright_gauss_blur_1_rd58_res);
	hw_uint<16> bright_gauss_blur_1_rd59_res = bright_gauss_blur_1_rd59_select(bright, d0, d1, dynamic_address);
	set_at<944, 1152>(result, bright_gauss_blur_1_rd59_res);
	hw_uint<16> bright_gauss_blur_1_rd60_res = bright_gauss_blur_1_rd60_select(bright, d0, d1, dynamic_address);
	set_at<960, 1152>(result, bright_gauss_blur_1_rd60_res);
	hw_uint<16> bright_gauss_blur_1_rd61_res = bright_gauss_blur_1_rd61_select(bright, d0, d1, dynamic_address);
	set_at<976, 1152>(result, bright_gauss_blur_1_rd61_res);
	hw_uint<16> bright_gauss_blur_1_rd62_res = bright_gauss_blur_1_rd62_select(bright, d0, d1, dynamic_address);
	set_at<992, 1152>(result, bright_gauss_blur_1_rd62_res);
	hw_uint<16> bright_gauss_blur_1_rd63_res = bright_gauss_blur_1_rd63_select(bright, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, bright_gauss_blur_1_rd63_res);
	hw_uint<16> bright_gauss_blur_1_rd64_res = bright_gauss_blur_1_rd64_select(bright, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, bright_gauss_blur_1_rd64_res);
	hw_uint<16> bright_gauss_blur_1_rd65_res = bright_gauss_blur_1_rd65_select(bright, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, bright_gauss_blur_1_rd65_res);
	hw_uint<16> bright_gauss_blur_1_rd66_res = bright_gauss_blur_1_rd66_select(bright, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, bright_gauss_blur_1_rd66_res);
	hw_uint<16> bright_gauss_blur_1_rd67_res = bright_gauss_blur_1_rd67_select(bright, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, bright_gauss_blur_1_rd67_res);
	hw_uint<16> bright_gauss_blur_1_rd68_res = bright_gauss_blur_1_rd68_select(bright, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, bright_gauss_blur_1_rd68_res);
	hw_uint<16> bright_gauss_blur_1_rd69_res = bright_gauss_blur_1_rd69_select(bright, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, bright_gauss_blur_1_rd69_res);
	hw_uint<16> bright_gauss_blur_1_rd70_res = bright_gauss_blur_1_rd70_select(bright, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, bright_gauss_blur_1_rd70_res);
	hw_uint<16> bright_gauss_blur_1_rd71_res = bright_gauss_blur_1_rd71_select(bright, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, bright_gauss_blur_1_rd71_res);
	return result;
}

// bright_laplace_diff_0_update_0_read
//	bright_laplace_diff_0_rd0
//	bright_laplace_diff_0_rd1
//	bright_laplace_diff_0_rd2
//	bright_laplace_diff_0_rd3
//	bright_laplace_diff_0_rd4
//	bright_laplace_diff_0_rd5
//	bright_laplace_diff_0_rd6
//	bright_laplace_diff_0_rd7
inline hw_uint<128> bright_bright_laplace_diff_0_update_0_read_bundle_read(bright_cache& bright, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_laplace_diff_0_rd0
    // bright_laplace_diff_0_rd1
    // bright_laplace_diff_0_rd2
    // bright_laplace_diff_0_rd3
    // bright_laplace_diff_0_rd4
    // bright_laplace_diff_0_rd5
    // bright_laplace_diff_0_rd6
    // bright_laplace_diff_0_rd7

	hw_uint<128> result;
	hw_uint<16> bright_laplace_diff_0_rd0_res = bright_laplace_diff_0_rd0_select(bright, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_laplace_diff_0_rd0_res);
	hw_uint<16> bright_laplace_diff_0_rd1_res = bright_laplace_diff_0_rd1_select(bright, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_laplace_diff_0_rd1_res);
	hw_uint<16> bright_laplace_diff_0_rd2_res = bright_laplace_diff_0_rd2_select(bright, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_laplace_diff_0_rd2_res);
	hw_uint<16> bright_laplace_diff_0_rd3_res = bright_laplace_diff_0_rd3_select(bright, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_laplace_diff_0_rd3_res);
	hw_uint<16> bright_laplace_diff_0_rd4_res = bright_laplace_diff_0_rd4_select(bright, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_laplace_diff_0_rd4_res);
	hw_uint<16> bright_laplace_diff_0_rd5_res = bright_laplace_diff_0_rd5_select(bright, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_laplace_diff_0_rd5_res);
	hw_uint<16> bright_laplace_diff_0_rd6_res = bright_laplace_diff_0_rd6_select(bright, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_laplace_diff_0_rd6_res);
	hw_uint<16> bright_laplace_diff_0_rd7_res = bright_laplace_diff_0_rd7_select(bright, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_laplace_diff_0_rd7_res);
	return result;
}

// bright_update_0_write
//	bright_bright_update_0_write0
//	bright_bright_update_0_write1
//	bright_bright_update_0_write2
//	bright_bright_update_0_write3
//	bright_bright_update_0_write4
//	bright_bright_update_0_write5
//	bright_bright_update_0_write6
//	bright_bright_update_0_write7
inline void bright_bright_update_0_write_bundle_write(hw_uint<128>& bright_update_0_write, bright_cache& bright, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_bright_update_0_write0_res = bright_update_0_write.extract<0, 15>();
	bright_bright_update_0_write0_write(bright_bright_update_0_write0_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write1_res = bright_update_0_write.extract<16, 31>();
	bright_bright_update_0_write1_write(bright_bright_update_0_write1_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write2_res = bright_update_0_write.extract<32, 47>();
	bright_bright_update_0_write2_write(bright_bright_update_0_write2_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write3_res = bright_update_0_write.extract<48, 63>();
	bright_bright_update_0_write3_write(bright_bright_update_0_write3_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write4_res = bright_update_0_write.extract<64, 79>();
	bright_bright_update_0_write4_write(bright_bright_update_0_write4_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write5_res = bright_update_0_write.extract<80, 95>();
	bright_bright_update_0_write5_write(bright_bright_update_0_write5_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write6_res = bright_update_0_write.extract<96, 111>();
	bright_bright_update_0_write6_write(bright_bright_update_0_write6_res, bright, d0, d1, dynamic_address);
	hw_uint<16> bright_bright_update_0_write7_res = bright_update_0_write.extract<112, 127>();
	bright_bright_update_0_write7_write(bright_bright_update_0_write7_res, bright, d0, d1, dynamic_address);
}

// bright_weights_update_0_read
//	bright_weights_rd0
//	bright_weights_rd1
//	bright_weights_rd2
//	bright_weights_rd3
//	bright_weights_rd4
//	bright_weights_rd5
//	bright_weights_rd6
//	bright_weights_rd7
inline hw_uint<128> bright_bright_weights_update_0_read_bundle_read(bright_cache& bright, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_weights_rd0
    // bright_weights_rd1
    // bright_weights_rd2
    // bright_weights_rd3
    // bright_weights_rd4
    // bright_weights_rd5
    // bright_weights_rd6
    // bright_weights_rd7

	hw_uint<128> result;
	hw_uint<16> bright_weights_rd0_res = bright_weights_rd0_select(bright, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_weights_rd0_res);
	hw_uint<16> bright_weights_rd1_res = bright_weights_rd1_select(bright, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_weights_rd1_res);
	hw_uint<16> bright_weights_rd2_res = bright_weights_rd2_select(bright, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_weights_rd2_res);
	hw_uint<16> bright_weights_rd3_res = bright_weights_rd3_select(bright, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_weights_rd3_res);
	hw_uint<16> bright_weights_rd4_res = bright_weights_rd4_select(bright, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_weights_rd4_res);
	hw_uint<16> bright_weights_rd5_res = bright_weights_rd5_select(bright, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_weights_rd5_res);
	hw_uint<16> bright_weights_rd6_res = bright_weights_rd6_select(bright, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_weights_rd6_res);
	hw_uint<16> bright_weights_rd7_res = bright_weights_rd7_select(bright, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_weights_rd7_res);
	return result;
}

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0_cache {
	// RAM Box: {[-16, 1088], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1_cache {
	// RAM Box: {[-14, 1090], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2_cache {
	// RAM Box: {[-12, 1092], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3_cache {
	// RAM Box: {[-10, 1094], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_1_cache {
  // Reader addrs...
    // { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // # of banks: 4
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2;
  bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3_cache bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3;
};



inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3.push(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6);
}

inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_write(hw_uint<16>& bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_gauss_ds_1_rd0_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd0 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_to_bright_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd1_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd1 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_to_bright_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd2_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd2 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_to_bright_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_1_rd3_select(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_1_rd3 read pattern: { bright_gauss_ds_1_update_0[d0, d1] -> bright_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6 = bright_gauss_blur_1.bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_to_bright_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_1_update_0_write
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6
//	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7
inline void bright_gauss_blur_1_bright_gauss_blur_1_update_0_write_bundle_write(hw_uint<128>& bright_gauss_blur_1_update_0_write, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_res = bright_gauss_blur_1_update_0_write.extract<0, 15>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write0_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_res = bright_gauss_blur_1_update_0_write.extract<16, 31>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write1_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_res = bright_gauss_blur_1_update_0_write.extract<32, 47>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write2_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_res = bright_gauss_blur_1_update_0_write.extract<48, 63>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write3_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_res = bright_gauss_blur_1_update_0_write.extract<64, 79>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write4_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_res = bright_gauss_blur_1_update_0_write.extract<80, 95>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write5_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_res = bright_gauss_blur_1_update_0_write.extract<96, 111>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write6_res, bright_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_res = bright_gauss_blur_1_update_0_write.extract<112, 127>();
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_write(bright_gauss_blur_1_bright_gauss_blur_1_update_0_write7_res, bright_gauss_blur_1, d0, d1, dynamic_address);
}

// bright_gauss_ds_1_update_0_read
//	bright_gauss_ds_1_rd0
//	bright_gauss_ds_1_rd1
//	bright_gauss_ds_1_rd2
//	bright_gauss_ds_1_rd3
inline hw_uint<64> bright_gauss_blur_1_bright_gauss_ds_1_update_0_read_bundle_read(bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_gauss_ds_1_rd0
    // bright_gauss_ds_1_rd1
    // bright_gauss_ds_1_rd2
    // bright_gauss_ds_1_rd3

	hw_uint<64> result;
	hw_uint<16> bright_gauss_ds_1_rd0_res = bright_gauss_ds_1_rd0_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_gauss_ds_1_rd0_res);
	hw_uint<16> bright_gauss_ds_1_rd1_res = bright_gauss_ds_1_rd1_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_gauss_ds_1_rd1_res);
	hw_uint<16> bright_gauss_ds_1_rd2_res = bright_gauss_ds_1_rd2_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_gauss_ds_1_rd2_res);
	hw_uint<16> bright_gauss_ds_1_rd3_res = bright_gauss_ds_1_rd3_select(bright_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_gauss_ds_1_rd3_res);
	return result;
}

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0_cache {
	// RAM Box: {[-4, 540], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1_cache {
	// RAM Box: {[-2, 542], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_2_cache {
  // Reader addrs...
    // { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
    // { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // # of banks: 2
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0;
  bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1_cache bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1;
};



inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0);
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1.push(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2);
}

inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_write(hw_uint<16>& bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_gauss_ds_2_rd0_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_rd0 read pattern: { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_to_bright_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_ds_2_rd1_select(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_2_rd1 read pattern: { bright_gauss_ds_2_update_0[d0, d1] -> bright_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2 = bright_gauss_blur_2.bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_to_bright_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_2_update_0_write
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2
//	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3
inline void bright_gauss_blur_2_bright_gauss_blur_2_update_0_write_bundle_write(hw_uint<64>& bright_gauss_blur_2_update_0_write, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_res = bright_gauss_blur_2_update_0_write.extract<0, 15>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write0_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_res = bright_gauss_blur_2_update_0_write.extract<16, 31>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write1_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_res = bright_gauss_blur_2_update_0_write.extract<32, 47>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write2_res, bright_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_res = bright_gauss_blur_2_update_0_write.extract<48, 63>();
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_write(bright_gauss_blur_2_bright_gauss_blur_2_update_0_write3_res, bright_gauss_blur_2, d0, d1, dynamic_address);
}

// bright_gauss_ds_2_update_0_read
//	bright_gauss_ds_2_rd0
//	bright_gauss_ds_2_rd1
inline hw_uint<32> bright_gauss_blur_2_bright_gauss_ds_2_update_0_read_bundle_read(bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_gauss_ds_2_rd0
    // bright_gauss_ds_2_rd1

	hw_uint<32> result;
	hw_uint<16> bright_gauss_ds_2_rd0_res = bright_gauss_ds_2_rd0_select(bright_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_gauss_ds_2_rd0_res);
	hw_uint<16> bright_gauss_ds_2_rd1_res = bright_gauss_ds_2_rd1_select(bright_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_gauss_ds_2_rd1_res);
	return result;
}

struct bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 268], [0, 478]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_blur_3_cache {
  // Reader addrs...
    // { bright_gauss_ds_3_update_0[d0, d1] -> bright_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 1
  bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0_cache bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0;
};



inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
  bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0.push(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0);
}

inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_write(hw_uint<16>& bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_gauss_ds_3_rd0_select(bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_ds_3_rd0 read pattern: { bright_gauss_ds_3_update_0[d0, d1] -> bright_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { bright_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 29] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  auto value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0 = bright_gauss_blur_3.bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_to_bright_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// bright_gauss_blur_3_update_0_write
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0
//	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1
inline void bright_gauss_blur_3_bright_gauss_blur_3_update_0_write_bundle_write(hw_uint<32>& bright_gauss_blur_3_update_0_write, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_res = bright_gauss_blur_3_update_0_write.extract<0, 15>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write0_res, bright_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_res = bright_gauss_blur_3_update_0_write.extract<16, 31>();
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_write(bright_gauss_blur_3_bright_gauss_blur_3_update_0_write1_res, bright_gauss_blur_3, d0, d1, dynamic_address);
}

// bright_gauss_ds_3_update_0_read
//	bright_gauss_ds_3_rd0
inline hw_uint<16> bright_gauss_blur_3_bright_gauss_ds_3_update_0_read_bundle_read(bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_gauss_ds_3_rd0

	hw_uint<16> result;
	hw_uint<16> bright_gauss_ds_3_rd0_res = bright_gauss_ds_3_rd0_select(bright_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, bright_gauss_ds_3_rd0_res);
	return result;
}

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_diff_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_diff_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_diff_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_diff_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[-4, 544], [-3, 959]}
	// Capacity: 280
	// # of read delays: 6
  // 0, 1, 139, 140, 278, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 137> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 137> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_138() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_139() {
		return f4;
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_277() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_278() {
		return f8;
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-3, 541], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[-2, 542], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[-5, 543], [-3, 959]}
	// Capacity: 281
	// # of read delays: 7
  // 0, 1, 2, 140, 141, 279, 280
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 137> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 137> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_141() {
		return f8;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}

	inline hw_uint<16> peek_280() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_1_cache {
  // Reader addrs...
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 16
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_diff_1_rd0_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_diff_1_rd0;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_diff_1_rd1_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_diff_1_rd1;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_diff_1_rd2_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_diff_1_rd2;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_diff_1_rd3_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_diff_1_rd3;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9;
  bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9_cache bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9;
};



inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_diff_1_rd0.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_diff_1_rd1.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_diff_1_rd2.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2);
}

inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_write(hw_uint<16>& bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_diff_1_rd3.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
  bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.push(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3);
}

inline hw_uint<16> bright_gauss_blur_2_rd0_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd0 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_280();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd1_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd1 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_141();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd10_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd10 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd11_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd11 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd12_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd12 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd13_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd13 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd14_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd14 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd15_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd15 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd16_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd16 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd17_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd17 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd18_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd18 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd19_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd19 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd2_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd2 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_2();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd20_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd20 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd21_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd21 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd22_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd22 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd23_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd23 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd24_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd24 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd25_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd25 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd26_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd26 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd27_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd27 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd28_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd28 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd29_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd29 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd3_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd3 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd30_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd30 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd31_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd31 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd32_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd32 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd33_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd33 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_278();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd34_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd34 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_139();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd35_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd35 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_0();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd4_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd4 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd5_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd5 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd6_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd6 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd7_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd7 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd8_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd8 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_2_rd9_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_2_rd9 read pattern: { bright_gauss_blur_2_update_0[d0, d1] -> bright_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd0_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd0 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_diff_1_rd0.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd1_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd1 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_diff_1_rd1.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd2_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd2 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_diff_1_rd2.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd3_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd3 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_diff_1_rd3.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd0_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd0 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd1_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd1 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_to_bright_laplace_us_0_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd2_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd2 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd3_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd3 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_to_bright_laplace_us_0_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd4_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd4 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd5_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd5 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_to_bright_laplace_us_0_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd6_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd6 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_us_0_rd7_select(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_0_rd7 read pattern: { bright_laplace_us_0_update_0[d0, d1] -> bright_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3 = bright_gauss_ds_1.bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_to_bright_laplace_us_0_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3;
  return 0;
}

// # of bundles = 4
// bright_gauss_blur_2_update_0_read
//	bright_gauss_blur_2_rd0
//	bright_gauss_blur_2_rd1
//	bright_gauss_blur_2_rd2
//	bright_gauss_blur_2_rd3
//	bright_gauss_blur_2_rd4
//	bright_gauss_blur_2_rd5
//	bright_gauss_blur_2_rd6
//	bright_gauss_blur_2_rd7
//	bright_gauss_blur_2_rd8
//	bright_gauss_blur_2_rd9
//	bright_gauss_blur_2_rd10
//	bright_gauss_blur_2_rd11
//	bright_gauss_blur_2_rd12
//	bright_gauss_blur_2_rd13
//	bright_gauss_blur_2_rd14
//	bright_gauss_blur_2_rd15
//	bright_gauss_blur_2_rd16
//	bright_gauss_blur_2_rd17
//	bright_gauss_blur_2_rd18
//	bright_gauss_blur_2_rd19
//	bright_gauss_blur_2_rd20
//	bright_gauss_blur_2_rd21
//	bright_gauss_blur_2_rd22
//	bright_gauss_blur_2_rd23
//	bright_gauss_blur_2_rd24
//	bright_gauss_blur_2_rd25
//	bright_gauss_blur_2_rd26
//	bright_gauss_blur_2_rd27
//	bright_gauss_blur_2_rd28
//	bright_gauss_blur_2_rd29
//	bright_gauss_blur_2_rd30
//	bright_gauss_blur_2_rd31
//	bright_gauss_blur_2_rd32
//	bright_gauss_blur_2_rd33
//	bright_gauss_blur_2_rd34
//	bright_gauss_blur_2_rd35
inline hw_uint<576> bright_gauss_ds_1_bright_gauss_blur_2_update_0_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // bright_gauss_blur_2_rd0
    // bright_gauss_blur_2_rd1
    // bright_gauss_blur_2_rd2
    // bright_gauss_blur_2_rd3
    // bright_gauss_blur_2_rd4
    // bright_gauss_blur_2_rd5
    // bright_gauss_blur_2_rd6
    // bright_gauss_blur_2_rd7
    // bright_gauss_blur_2_rd8
    // bright_gauss_blur_2_rd9
    // bright_gauss_blur_2_rd10
    // bright_gauss_blur_2_rd11
    // bright_gauss_blur_2_rd12
    // bright_gauss_blur_2_rd13
    // bright_gauss_blur_2_rd14
    // bright_gauss_blur_2_rd15
    // bright_gauss_blur_2_rd16
    // bright_gauss_blur_2_rd17
    // bright_gauss_blur_2_rd18
    // bright_gauss_blur_2_rd19
    // bright_gauss_blur_2_rd20
    // bright_gauss_blur_2_rd21
    // bright_gauss_blur_2_rd22
    // bright_gauss_blur_2_rd23
    // bright_gauss_blur_2_rd24
    // bright_gauss_blur_2_rd25
    // bright_gauss_blur_2_rd26
    // bright_gauss_blur_2_rd27
    // bright_gauss_blur_2_rd28
    // bright_gauss_blur_2_rd29
    // bright_gauss_blur_2_rd30
    // bright_gauss_blur_2_rd31
    // bright_gauss_blur_2_rd32
    // bright_gauss_blur_2_rd33
    // bright_gauss_blur_2_rd34
    // bright_gauss_blur_2_rd35

	hw_uint<576> result;
	hw_uint<16> bright_gauss_blur_2_rd0_res = bright_gauss_blur_2_rd0_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 576>(result, bright_gauss_blur_2_rd0_res);
	hw_uint<16> bright_gauss_blur_2_rd1_res = bright_gauss_blur_2_rd1_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 576>(result, bright_gauss_blur_2_rd1_res);
	hw_uint<16> bright_gauss_blur_2_rd2_res = bright_gauss_blur_2_rd2_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 576>(result, bright_gauss_blur_2_rd2_res);
	hw_uint<16> bright_gauss_blur_2_rd3_res = bright_gauss_blur_2_rd3_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 576>(result, bright_gauss_blur_2_rd3_res);
	hw_uint<16> bright_gauss_blur_2_rd4_res = bright_gauss_blur_2_rd4_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 576>(result, bright_gauss_blur_2_rd4_res);
	hw_uint<16> bright_gauss_blur_2_rd5_res = bright_gauss_blur_2_rd5_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 576>(result, bright_gauss_blur_2_rd5_res);
	hw_uint<16> bright_gauss_blur_2_rd6_res = bright_gauss_blur_2_rd6_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 576>(result, bright_gauss_blur_2_rd6_res);
	hw_uint<16> bright_gauss_blur_2_rd7_res = bright_gauss_blur_2_rd7_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 576>(result, bright_gauss_blur_2_rd7_res);
	hw_uint<16> bright_gauss_blur_2_rd8_res = bright_gauss_blur_2_rd8_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 576>(result, bright_gauss_blur_2_rd8_res);
	hw_uint<16> bright_gauss_blur_2_rd9_res = bright_gauss_blur_2_rd9_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 576>(result, bright_gauss_blur_2_rd9_res);
	hw_uint<16> bright_gauss_blur_2_rd10_res = bright_gauss_blur_2_rd10_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 576>(result, bright_gauss_blur_2_rd10_res);
	hw_uint<16> bright_gauss_blur_2_rd11_res = bright_gauss_blur_2_rd11_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 576>(result, bright_gauss_blur_2_rd11_res);
	hw_uint<16> bright_gauss_blur_2_rd12_res = bright_gauss_blur_2_rd12_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 576>(result, bright_gauss_blur_2_rd12_res);
	hw_uint<16> bright_gauss_blur_2_rd13_res = bright_gauss_blur_2_rd13_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 576>(result, bright_gauss_blur_2_rd13_res);
	hw_uint<16> bright_gauss_blur_2_rd14_res = bright_gauss_blur_2_rd14_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 576>(result, bright_gauss_blur_2_rd14_res);
	hw_uint<16> bright_gauss_blur_2_rd15_res = bright_gauss_blur_2_rd15_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 576>(result, bright_gauss_blur_2_rd15_res);
	hw_uint<16> bright_gauss_blur_2_rd16_res = bright_gauss_blur_2_rd16_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 576>(result, bright_gauss_blur_2_rd16_res);
	hw_uint<16> bright_gauss_blur_2_rd17_res = bright_gauss_blur_2_rd17_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 576>(result, bright_gauss_blur_2_rd17_res);
	hw_uint<16> bright_gauss_blur_2_rd18_res = bright_gauss_blur_2_rd18_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 576>(result, bright_gauss_blur_2_rd18_res);
	hw_uint<16> bright_gauss_blur_2_rd19_res = bright_gauss_blur_2_rd19_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 576>(result, bright_gauss_blur_2_rd19_res);
	hw_uint<16> bright_gauss_blur_2_rd20_res = bright_gauss_blur_2_rd20_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 576>(result, bright_gauss_blur_2_rd20_res);
	hw_uint<16> bright_gauss_blur_2_rd21_res = bright_gauss_blur_2_rd21_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 576>(result, bright_gauss_blur_2_rd21_res);
	hw_uint<16> bright_gauss_blur_2_rd22_res = bright_gauss_blur_2_rd22_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 576>(result, bright_gauss_blur_2_rd22_res);
	hw_uint<16> bright_gauss_blur_2_rd23_res = bright_gauss_blur_2_rd23_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 576>(result, bright_gauss_blur_2_rd23_res);
	hw_uint<16> bright_gauss_blur_2_rd24_res = bright_gauss_blur_2_rd24_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 576>(result, bright_gauss_blur_2_rd24_res);
	hw_uint<16> bright_gauss_blur_2_rd25_res = bright_gauss_blur_2_rd25_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 576>(result, bright_gauss_blur_2_rd25_res);
	hw_uint<16> bright_gauss_blur_2_rd26_res = bright_gauss_blur_2_rd26_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 576>(result, bright_gauss_blur_2_rd26_res);
	hw_uint<16> bright_gauss_blur_2_rd27_res = bright_gauss_blur_2_rd27_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 576>(result, bright_gauss_blur_2_rd27_res);
	hw_uint<16> bright_gauss_blur_2_rd28_res = bright_gauss_blur_2_rd28_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 576>(result, bright_gauss_blur_2_rd28_res);
	hw_uint<16> bright_gauss_blur_2_rd29_res = bright_gauss_blur_2_rd29_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 576>(result, bright_gauss_blur_2_rd29_res);
	hw_uint<16> bright_gauss_blur_2_rd30_res = bright_gauss_blur_2_rd30_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 576>(result, bright_gauss_blur_2_rd30_res);
	hw_uint<16> bright_gauss_blur_2_rd31_res = bright_gauss_blur_2_rd31_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 576>(result, bright_gauss_blur_2_rd31_res);
	hw_uint<16> bright_gauss_blur_2_rd32_res = bright_gauss_blur_2_rd32_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 576>(result, bright_gauss_blur_2_rd32_res);
	hw_uint<16> bright_gauss_blur_2_rd33_res = bright_gauss_blur_2_rd33_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 576>(result, bright_gauss_blur_2_rd33_res);
	hw_uint<16> bright_gauss_blur_2_rd34_res = bright_gauss_blur_2_rd34_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 576>(result, bright_gauss_blur_2_rd34_res);
	hw_uint<16> bright_gauss_blur_2_rd35_res = bright_gauss_blur_2_rd35_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 576>(result, bright_gauss_blur_2_rd35_res);
	return result;
}

// bright_gauss_ds_1_update_0_write
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2
//	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3
inline void bright_gauss_ds_1_bright_gauss_ds_1_update_0_write_bundle_write(hw_uint<64>& bright_gauss_ds_1_update_0_write, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_res = bright_gauss_ds_1_update_0_write.extract<0, 15>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write0_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_res = bright_gauss_ds_1_update_0_write.extract<16, 31>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write1_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_res = bright_gauss_ds_1_update_0_write.extract<32, 47>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write2_res, bright_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_res = bright_gauss_ds_1_update_0_write.extract<48, 63>();
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_write(bright_gauss_ds_1_bright_gauss_ds_1_update_0_write3_res, bright_gauss_ds_1, d0, d1, dynamic_address);
}

// bright_laplace_diff_1_update_0_read
//	bright_laplace_diff_1_rd0
//	bright_laplace_diff_1_rd1
//	bright_laplace_diff_1_rd2
//	bright_laplace_diff_1_rd3
inline hw_uint<64> bright_gauss_ds_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_laplace_diff_1_rd0
    // bright_laplace_diff_1_rd1
    // bright_laplace_diff_1_rd2
    // bright_laplace_diff_1_rd3

	hw_uint<64> result;
	hw_uint<16> bright_laplace_diff_1_rd0_res = bright_laplace_diff_1_rd0_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_laplace_diff_1_rd0_res);
	hw_uint<16> bright_laplace_diff_1_rd1_res = bright_laplace_diff_1_rd1_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_laplace_diff_1_rd1_res);
	hw_uint<16> bright_laplace_diff_1_rd2_res = bright_laplace_diff_1_rd2_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_laplace_diff_1_rd2_res);
	hw_uint<16> bright_laplace_diff_1_rd3_res = bright_laplace_diff_1_rd3_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_laplace_diff_1_rd3_res);
	return result;
}

// bright_laplace_us_0_update_0_read
//	bright_laplace_us_0_rd0
//	bright_laplace_us_0_rd1
//	bright_laplace_us_0_rd2
//	bright_laplace_us_0_rd3
//	bright_laplace_us_0_rd4
//	bright_laplace_us_0_rd5
//	bright_laplace_us_0_rd6
//	bright_laplace_us_0_rd7
inline hw_uint<128> bright_gauss_ds_1_bright_laplace_us_0_update_0_read_bundle_read(bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_laplace_us_0_rd0
    // bright_laplace_us_0_rd1
    // bright_laplace_us_0_rd2
    // bright_laplace_us_0_rd3
    // bright_laplace_us_0_rd4
    // bright_laplace_us_0_rd5
    // bright_laplace_us_0_rd6
    // bright_laplace_us_0_rd7

	hw_uint<128> result;
	hw_uint<16> bright_laplace_us_0_rd0_res = bright_laplace_us_0_rd0_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_laplace_us_0_rd0_res);
	hw_uint<16> bright_laplace_us_0_rd1_res = bright_laplace_us_0_rd1_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_laplace_us_0_rd1_res);
	hw_uint<16> bright_laplace_us_0_rd2_res = bright_laplace_us_0_rd2_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_laplace_us_0_rd2_res);
	hw_uint<16> bright_laplace_us_0_rd3_res = bright_laplace_us_0_rd3_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_laplace_us_0_rd3_res);
	hw_uint<16> bright_laplace_us_0_rd4_res = bright_laplace_us_0_rd4_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_laplace_us_0_rd4_res);
	hw_uint<16> bright_laplace_us_0_rd5_res = bright_laplace_us_0_rd5_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_laplace_us_0_rd5_res);
	hw_uint<16> bright_laplace_us_0_rd6_res = bright_laplace_us_0_rd6_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_laplace_us_0_rd6_res);
	hw_uint<16> bright_laplace_us_0_rd7_res = bright_laplace_us_0_rd7_select(bright_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_laplace_us_0_rd7_res);
	return result;
}

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 270], [-1, 479]}
	// Capacity: 276
	// # of read delays: 6
  // 0, 1, 137, 138, 274, 275
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 135> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 135> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_136() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_137() {
		return f4;
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_273() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_274() {
		return f8;
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-1, 269], [-1, 479]}
	// Capacity: 277
	// # of read delays: 7
  // 0, 1, 2, 138, 139, 275, 276
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 135> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 135> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_137() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_139() {
		return f8;
	}

	inline hw_uint<16> peek_274() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}

	inline hw_uint<16> peek_276() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_gauss_ds_2_cache {
  // Reader addrs...
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 8
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9;
  bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9_cache bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9;
};



inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0);
}

inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_write(hw_uint<16>& bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
  bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.push(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1);
}

inline hw_uint<16> bright_gauss_blur_3_rd0_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd0 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_276();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd1_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd1 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_139();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd10_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd10 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd11_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd11 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd12_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd12 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd13_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd13 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd14_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd14 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd15_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd15 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_274();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd16_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd16 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_137();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd17_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd17 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd2_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd2 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_2();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd3_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd3 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd4_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd4 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd5_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd5 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd6_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd6 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd7_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd7 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd8_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd8 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_gauss_blur_3_rd9_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_gauss_blur_3_rd9 read pattern: { bright_gauss_blur_3_update_0[d0, d1] -> bright_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd0_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd0 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_diff_2_rd0.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd1_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd1 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_diff_2_rd1.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd0_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd0 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd1_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd1 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_to_bright_laplace_us_1_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd2_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd2 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_us_1_rd3_select(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_1_rd3 read pattern: { bright_laplace_us_1_update_0[d0, d1] -> bright_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1 = bright_gauss_ds_2.bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_to_bright_laplace_us_1_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1;
  return 0;
}

// # of bundles = 4
// bright_gauss_blur_3_update_0_read
//	bright_gauss_blur_3_rd0
//	bright_gauss_blur_3_rd1
//	bright_gauss_blur_3_rd2
//	bright_gauss_blur_3_rd3
//	bright_gauss_blur_3_rd4
//	bright_gauss_blur_3_rd5
//	bright_gauss_blur_3_rd6
//	bright_gauss_blur_3_rd7
//	bright_gauss_blur_3_rd8
//	bright_gauss_blur_3_rd9
//	bright_gauss_blur_3_rd10
//	bright_gauss_blur_3_rd11
//	bright_gauss_blur_3_rd12
//	bright_gauss_blur_3_rd13
//	bright_gauss_blur_3_rd14
//	bright_gauss_blur_3_rd15
//	bright_gauss_blur_3_rd16
//	bright_gauss_blur_3_rd17
inline hw_uint<288> bright_gauss_ds_2_bright_gauss_blur_3_update_0_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 18
    // bright_gauss_blur_3_rd0
    // bright_gauss_blur_3_rd1
    // bright_gauss_blur_3_rd2
    // bright_gauss_blur_3_rd3
    // bright_gauss_blur_3_rd4
    // bright_gauss_blur_3_rd5
    // bright_gauss_blur_3_rd6
    // bright_gauss_blur_3_rd7
    // bright_gauss_blur_3_rd8
    // bright_gauss_blur_3_rd9
    // bright_gauss_blur_3_rd10
    // bright_gauss_blur_3_rd11
    // bright_gauss_blur_3_rd12
    // bright_gauss_blur_3_rd13
    // bright_gauss_blur_3_rd14
    // bright_gauss_blur_3_rd15
    // bright_gauss_blur_3_rd16
    // bright_gauss_blur_3_rd17

	hw_uint<288> result;
	hw_uint<16> bright_gauss_blur_3_rd0_res = bright_gauss_blur_3_rd0_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 288>(result, bright_gauss_blur_3_rd0_res);
	hw_uint<16> bright_gauss_blur_3_rd1_res = bright_gauss_blur_3_rd1_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 288>(result, bright_gauss_blur_3_rd1_res);
	hw_uint<16> bright_gauss_blur_3_rd2_res = bright_gauss_blur_3_rd2_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 288>(result, bright_gauss_blur_3_rd2_res);
	hw_uint<16> bright_gauss_blur_3_rd3_res = bright_gauss_blur_3_rd3_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 288>(result, bright_gauss_blur_3_rd3_res);
	hw_uint<16> bright_gauss_blur_3_rd4_res = bright_gauss_blur_3_rd4_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 288>(result, bright_gauss_blur_3_rd4_res);
	hw_uint<16> bright_gauss_blur_3_rd5_res = bright_gauss_blur_3_rd5_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 288>(result, bright_gauss_blur_3_rd5_res);
	hw_uint<16> bright_gauss_blur_3_rd6_res = bright_gauss_blur_3_rd6_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 288>(result, bright_gauss_blur_3_rd6_res);
	hw_uint<16> bright_gauss_blur_3_rd7_res = bright_gauss_blur_3_rd7_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 288>(result, bright_gauss_blur_3_rd7_res);
	hw_uint<16> bright_gauss_blur_3_rd8_res = bright_gauss_blur_3_rd8_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 288>(result, bright_gauss_blur_3_rd8_res);
	hw_uint<16> bright_gauss_blur_3_rd9_res = bright_gauss_blur_3_rd9_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 288>(result, bright_gauss_blur_3_rd9_res);
	hw_uint<16> bright_gauss_blur_3_rd10_res = bright_gauss_blur_3_rd10_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 288>(result, bright_gauss_blur_3_rd10_res);
	hw_uint<16> bright_gauss_blur_3_rd11_res = bright_gauss_blur_3_rd11_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 288>(result, bright_gauss_blur_3_rd11_res);
	hw_uint<16> bright_gauss_blur_3_rd12_res = bright_gauss_blur_3_rd12_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 288>(result, bright_gauss_blur_3_rd12_res);
	hw_uint<16> bright_gauss_blur_3_rd13_res = bright_gauss_blur_3_rd13_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 288>(result, bright_gauss_blur_3_rd13_res);
	hw_uint<16> bright_gauss_blur_3_rd14_res = bright_gauss_blur_3_rd14_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 288>(result, bright_gauss_blur_3_rd14_res);
	hw_uint<16> bright_gauss_blur_3_rd15_res = bright_gauss_blur_3_rd15_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 288>(result, bright_gauss_blur_3_rd15_res);
	hw_uint<16> bright_gauss_blur_3_rd16_res = bright_gauss_blur_3_rd16_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 288>(result, bright_gauss_blur_3_rd16_res);
	hw_uint<16> bright_gauss_blur_3_rd17_res = bright_gauss_blur_3_rd17_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 288>(result, bright_gauss_blur_3_rd17_res);
	return result;
}

// bright_gauss_ds_2_update_0_write
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0
//	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1
inline void bright_gauss_ds_2_bright_gauss_ds_2_update_0_write_bundle_write(hw_uint<32>& bright_gauss_ds_2_update_0_write, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_res = bright_gauss_ds_2_update_0_write.extract<0, 15>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write0_res, bright_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_res = bright_gauss_ds_2_update_0_write.extract<16, 31>();
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_write(bright_gauss_ds_2_bright_gauss_ds_2_update_0_write1_res, bright_gauss_ds_2, d0, d1, dynamic_address);
}

// bright_laplace_diff_2_update_0_read
//	bright_laplace_diff_2_rd0
//	bright_laplace_diff_2_rd1
inline hw_uint<32> bright_gauss_ds_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_laplace_diff_2_rd0
    // bright_laplace_diff_2_rd1

	hw_uint<32> result;
	hw_uint<16> bright_laplace_diff_2_rd0_res = bright_laplace_diff_2_rd0_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_laplace_diff_2_rd0_res);
	hw_uint<16> bright_laplace_diff_2_rd1_res = bright_laplace_diff_2_rd1_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_laplace_diff_2_rd1_res);
	return result;
}

// bright_laplace_us_1_update_0_read
//	bright_laplace_us_1_rd0
//	bright_laplace_us_1_rd1
//	bright_laplace_us_1_rd2
//	bright_laplace_us_1_rd3
inline hw_uint<64> bright_gauss_ds_2_bright_laplace_us_1_update_0_read_bundle_read(bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_laplace_us_1_rd0
    // bright_laplace_us_1_rd1
    // bright_laplace_us_1_rd2
    // bright_laplace_us_1_rd3

	hw_uint<64> result;
	hw_uint<16> bright_laplace_us_1_rd0_res = bright_laplace_us_1_rd0_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_laplace_us_1_rd0_res);
	hw_uint<16> bright_laplace_us_1_rd1_res = bright_laplace_us_1_rd1_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_laplace_us_1_rd1_res);
	hw_uint<16> bright_laplace_us_1_rd2_res = bright_laplace_us_1_rd2_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_laplace_us_1_rd2_res);
	hw_uint<16> bright_laplace_us_1_rd3_res = bright_laplace_us_1_rd3_select(bright_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_laplace_us_1_rd3_res);
	return result;
}

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_gauss_ds_3_cache {
  // Reader addrs...
    // { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
    // { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
    // { fused_level_3_update_0[d0, d1] -> bright_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 3
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1;
  bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
};



inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_write(hw_uint<16>& bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0);
  bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0);
}

inline hw_uint<16> bright_laplace_us_2_rd0_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_rd0 read pattern: { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 38] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 29] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_us_2_rd1_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_us_2_rd1 read pattern: { bright_laplace_us_2_update_0[d0, d1] -> bright_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { bright_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 38] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 29] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_bright_laplace_us_2_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_3_rd0_select(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> bright_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { bright_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 29] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0 = bright_gauss_ds_3.bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0;
  return 0;
}

// # of bundles = 3
// bright_gauss_ds_3_update_0_write
//	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0
inline void bright_gauss_ds_3_bright_gauss_ds_3_update_0_write_bundle_write(hw_uint<16>& bright_gauss_ds_3_update_0_write, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_res = bright_gauss_ds_3_update_0_write.extract<0, 15>();
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_write(bright_gauss_ds_3_bright_gauss_ds_3_update_0_write0_res, bright_gauss_ds_3, d0, d1, dynamic_address);
}

// bright_laplace_us_2_update_0_read
//	bright_laplace_us_2_rd0
//	bright_laplace_us_2_rd1
inline hw_uint<32> bright_gauss_ds_3_bright_laplace_us_2_update_0_read_bundle_read(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_laplace_us_2_rd0
    // bright_laplace_us_2_rd1

	hw_uint<32> result;
	hw_uint<16> bright_laplace_us_2_rd0_res = bright_laplace_us_2_rd0_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_laplace_us_2_rd0_res);
	hw_uint<16> bright_laplace_us_2_rd1_res = bright_laplace_us_2_rd1_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_laplace_us_2_rd1_res);
	return result;
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
inline hw_uint<16> bright_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_3_rd0

	hw_uint<16> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(bright_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, fused_level_3_rd0_res);
	return result;
}

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_0_cache {
  // Reader addrs...
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 8
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6;
  bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7;
};



inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6);
}

inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_write(hw_uint<16>& bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.push(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7);
}

inline hw_uint<16> fused_level_0_rd0_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> bright_laplace_diff_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7 = bright_laplace_diff_0.bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_write
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6
//	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7
inline void bright_laplace_diff_0_bright_laplace_diff_0_update_0_write_bundle_write(hw_uint<128>& bright_laplace_diff_0_update_0_write, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_res = bright_laplace_diff_0_update_0_write.extract<0, 15>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write0_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_res = bright_laplace_diff_0_update_0_write.extract<16, 31>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write1_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_res = bright_laplace_diff_0_update_0_write.extract<32, 47>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write2_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_res = bright_laplace_diff_0_update_0_write.extract<48, 63>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write3_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_res = bright_laplace_diff_0_update_0_write.extract<64, 79>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write4_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_res = bright_laplace_diff_0_update_0_write.extract<80, 95>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write5_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_res = bright_laplace_diff_0_update_0_write.extract<96, 111>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write6_res, bright_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_res = bright_laplace_diff_0_update_0_write.extract<112, 127>();
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_write(bright_laplace_diff_0_bright_laplace_diff_0_update_0_write7_res, bright_laplace_diff_0, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
inline hw_uint<128> bright_laplace_diff_0_fused_level_0_update_0_read_bundle_read(bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(bright_laplace_diff_0, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_0_rd7_res);
	return result;
}

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_1_cache {
  // Reader addrs...
    // { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 4
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2;
  bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3;
};



inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2);
}

inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_write(hw_uint<16>& bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.push(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3);
}

inline hw_uint<16> fused_level_1_rd0_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> bright_laplace_diff_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3 = bright_laplace_diff_1.bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_write
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2
//	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3
inline void bright_laplace_diff_1_bright_laplace_diff_1_update_0_write_bundle_write(hw_uint<64>& bright_laplace_diff_1_update_0_write, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_res = bright_laplace_diff_1_update_0_write.extract<0, 15>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write0_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_res = bright_laplace_diff_1_update_0_write.extract<16, 31>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write1_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_res = bright_laplace_diff_1_update_0_write.extract<32, 47>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write2_res, bright_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_res = bright_laplace_diff_1_update_0_write.extract<48, 63>();
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_write(bright_laplace_diff_1_bright_laplace_diff_1_update_0_write3_res, bright_laplace_diff_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
inline hw_uint<64> bright_laplace_diff_1_fused_level_1_update_0_read_bundle_read(bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(bright_laplace_diff_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_1_rd3_res);
	return result;
}

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_diff_2_cache {
  // Reader addrs...
    // { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 2
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0;
  bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1;
};



inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0);
}

inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_write(hw_uint<16>& bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.push(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1);
}

inline hw_uint<16> fused_level_2_rd0_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> bright_laplace_diff_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1 = bright_laplace_diff_2.bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_write
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0
//	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1
inline void bright_laplace_diff_2_bright_laplace_diff_2_update_0_write_bundle_write(hw_uint<32>& bright_laplace_diff_2_update_0_write, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_res = bright_laplace_diff_2_update_0_write.extract<0, 15>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write0_res, bright_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_res = bright_laplace_diff_2_update_0_write.extract<16, 31>();
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_write(bright_laplace_diff_2_bright_laplace_diff_2_update_0_write1_res, bright_laplace_diff_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
inline hw_uint<32> bright_laplace_diff_2_fused_level_2_update_0_read_bundle_read(bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_2_rd0
    // fused_level_2_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(bright_laplace_diff_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(bright_laplace_diff_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_2_rd1_res);
	return result;
}

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_0_cache {
  // Reader addrs...
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 8
  bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6;
  bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7_cache bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7;
};



inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write0_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write0, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write0);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write1_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write1, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write1);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write2_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write2, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write2);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write3_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write3, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write3);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write4_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write4, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write4);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write5_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write5, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write5);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write6_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write6, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write6);
}

inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write7_write(hw_uint<16>& bright_laplace_us_0_bright_laplace_us_0_update_0_write7, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7.push(bright_laplace_us_0_bright_laplace_us_0_update_0_write7);
}

inline hw_uint<16> bright_laplace_diff_0_rd0_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd0 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write0 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write0_to_bright_laplace_diff_0_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd1_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd1 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write1 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write1_to_bright_laplace_diff_0_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd2_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd2 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write2 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write2_to_bright_laplace_diff_0_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd3_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd3 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write3 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write3_to_bright_laplace_diff_0_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd4_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd4 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write4 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write4_to_bright_laplace_diff_0_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd5_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd5 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write5 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write5_to_bright_laplace_diff_0_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd6_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd6 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write6 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write6_to_bright_laplace_diff_0_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_0_rd7_select(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_0_rd7 read pattern: { bright_laplace_diff_0_update_0[d0, d1] -> bright_laplace_us_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_bright_laplace_us_0_bright_laplace_us_0_update_0_write7 = bright_laplace_us_0.bright_laplace_us_0_bright_laplace_us_0_update_0_write7_to_bright_laplace_diff_0_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_0_bright_laplace_us_0_update_0_write7;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_0_update_0_read
//	bright_laplace_diff_0_rd0
//	bright_laplace_diff_0_rd1
//	bright_laplace_diff_0_rd2
//	bright_laplace_diff_0_rd3
//	bright_laplace_diff_0_rd4
//	bright_laplace_diff_0_rd5
//	bright_laplace_diff_0_rd6
//	bright_laplace_diff_0_rd7
inline hw_uint<128> bright_laplace_us_0_bright_laplace_diff_0_update_0_read_bundle_read(bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_laplace_diff_0_rd0
    // bright_laplace_diff_0_rd1
    // bright_laplace_diff_0_rd2
    // bright_laplace_diff_0_rd3
    // bright_laplace_diff_0_rd4
    // bright_laplace_diff_0_rd5
    // bright_laplace_diff_0_rd6
    // bright_laplace_diff_0_rd7

	hw_uint<128> result;
	hw_uint<16> bright_laplace_diff_0_rd0_res = bright_laplace_diff_0_rd0_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_laplace_diff_0_rd0_res);
	hw_uint<16> bright_laplace_diff_0_rd1_res = bright_laplace_diff_0_rd1_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_laplace_diff_0_rd1_res);
	hw_uint<16> bright_laplace_diff_0_rd2_res = bright_laplace_diff_0_rd2_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_laplace_diff_0_rd2_res);
	hw_uint<16> bright_laplace_diff_0_rd3_res = bright_laplace_diff_0_rd3_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_laplace_diff_0_rd3_res);
	hw_uint<16> bright_laplace_diff_0_rd4_res = bright_laplace_diff_0_rd4_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_laplace_diff_0_rd4_res);
	hw_uint<16> bright_laplace_diff_0_rd5_res = bright_laplace_diff_0_rd5_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_laplace_diff_0_rd5_res);
	hw_uint<16> bright_laplace_diff_0_rd6_res = bright_laplace_diff_0_rd6_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_laplace_diff_0_rd6_res);
	hw_uint<16> bright_laplace_diff_0_rd7_res = bright_laplace_diff_0_rd7_select(bright_laplace_us_0, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_laplace_diff_0_rd7_res);
	return result;
}

// bright_laplace_us_0_update_0_write
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write0
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write1
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write2
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write3
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write4
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write5
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write6
//	bright_laplace_us_0_bright_laplace_us_0_update_0_write7
inline void bright_laplace_us_0_bright_laplace_us_0_update_0_write_bundle_write(hw_uint<128>& bright_laplace_us_0_update_0_write, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write0_res = bright_laplace_us_0_update_0_write.extract<0, 15>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write0_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write0_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write1_res = bright_laplace_us_0_update_0_write.extract<16, 31>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write1_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write1_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write2_res = bright_laplace_us_0_update_0_write.extract<32, 47>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write2_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write2_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write3_res = bright_laplace_us_0_update_0_write.extract<48, 63>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write3_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write3_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write4_res = bright_laplace_us_0_update_0_write.extract<64, 79>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write4_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write4_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write5_res = bright_laplace_us_0_update_0_write.extract<80, 95>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write5_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write5_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write6_res = bright_laplace_us_0_update_0_write.extract<96, 111>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write6_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write6_res, bright_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_0_bright_laplace_us_0_update_0_write7_res = bright_laplace_us_0_update_0_write.extract<112, 127>();
	bright_laplace_us_0_bright_laplace_us_0_update_0_write7_write(bright_laplace_us_0_bright_laplace_us_0_update_0_write7_res, bright_laplace_us_0, d0, d1, dynamic_address);
}

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_1_cache {
  // Reader addrs...
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 4
  bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2;
  bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3_cache bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3;
};



inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write0_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write0, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write0);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write1_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write1, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write1);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write2_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write2, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write2);
}

inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write3_write(hw_uint<16>& bright_laplace_us_1_bright_laplace_us_1_update_0_write3, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3.push(bright_laplace_us_1_bright_laplace_us_1_update_0_write3);
}

inline hw_uint<16> bright_laplace_diff_1_rd0_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd0 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write0 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write0_to_bright_laplace_diff_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd1_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd1 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write1 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write1_to_bright_laplace_diff_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd2_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd2 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write2 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write2_to_bright_laplace_diff_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_1_rd3_select(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_1_rd3 read pattern: { bright_laplace_diff_1_update_0[d0, d1] -> bright_laplace_us_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_bright_laplace_us_1_bright_laplace_us_1_update_0_write3 = bright_laplace_us_1.bright_laplace_us_1_bright_laplace_us_1_update_0_write3_to_bright_laplace_diff_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_1_bright_laplace_us_1_update_0_write3;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_1_update_0_read
//	bright_laplace_diff_1_rd0
//	bright_laplace_diff_1_rd1
//	bright_laplace_diff_1_rd2
//	bright_laplace_diff_1_rd3
inline hw_uint<64> bright_laplace_us_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_laplace_diff_1_rd0
    // bright_laplace_diff_1_rd1
    // bright_laplace_diff_1_rd2
    // bright_laplace_diff_1_rd3

	hw_uint<64> result;
	hw_uint<16> bright_laplace_diff_1_rd0_res = bright_laplace_diff_1_rd0_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_laplace_diff_1_rd0_res);
	hw_uint<16> bright_laplace_diff_1_rd1_res = bright_laplace_diff_1_rd1_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_laplace_diff_1_rd1_res);
	hw_uint<16> bright_laplace_diff_1_rd2_res = bright_laplace_diff_1_rd2_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_laplace_diff_1_rd2_res);
	hw_uint<16> bright_laplace_diff_1_rd3_res = bright_laplace_diff_1_rd3_select(bright_laplace_us_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_laplace_diff_1_rd3_res);
	return result;
}

// bright_laplace_us_1_update_0_write
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write0
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write1
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write2
//	bright_laplace_us_1_bright_laplace_us_1_update_0_write3
inline void bright_laplace_us_1_bright_laplace_us_1_update_0_write_bundle_write(hw_uint<64>& bright_laplace_us_1_update_0_write, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write0_res = bright_laplace_us_1_update_0_write.extract<0, 15>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write0_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write0_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write1_res = bright_laplace_us_1_update_0_write.extract<16, 31>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write1_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write1_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write2_res = bright_laplace_us_1_update_0_write.extract<32, 47>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write2_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write2_res, bright_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_1_bright_laplace_us_1_update_0_write3_res = bright_laplace_us_1_update_0_write.extract<48, 63>();
	bright_laplace_us_1_bright_laplace_us_1_update_0_write3_write(bright_laplace_us_1_bright_laplace_us_1_update_0_write3_res, bright_laplace_us_1, d0, d1, dynamic_address);
}

struct bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_laplace_us_2_cache {
  // Reader addrs...
    // { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 2
  bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0_cache bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0;
  bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1_cache bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1;
};



inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write0_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_write0, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0.push(bright_laplace_us_2_bright_laplace_us_2_update_0_write0);
}

inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write1_write(hw_uint<16>& bright_laplace_us_2_bright_laplace_us_2_update_0_write1, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1.push(bright_laplace_us_2_bright_laplace_us_2_update_0_write1);
}

inline hw_uint<16> bright_laplace_diff_2_rd0_select(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd0 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 38] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_write0 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write0_to_bright_laplace_diff_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_laplace_diff_2_rd1_select(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_laplace_diff_2_rd1 read pattern: { bright_laplace_diff_2_update_0[d0, d1] -> bright_laplace_us_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 38] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_bright_laplace_us_2_bright_laplace_us_2_update_0_write1 = bright_laplace_us_2.bright_laplace_us_2_bright_laplace_us_2_update_0_write1_to_bright_laplace_diff_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_laplace_us_2_bright_laplace_us_2_update_0_write1;
  return 0;
}

// # of bundles = 2
// bright_laplace_diff_2_update_0_read
//	bright_laplace_diff_2_rd0
//	bright_laplace_diff_2_rd1
inline hw_uint<32> bright_laplace_us_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_laplace_diff_2_rd0
    // bright_laplace_diff_2_rd1

	hw_uint<32> result;
	hw_uint<16> bright_laplace_diff_2_rd0_res = bright_laplace_diff_2_rd0_select(bright_laplace_us_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_laplace_diff_2_rd0_res);
	hw_uint<16> bright_laplace_diff_2_rd1_res = bright_laplace_diff_2_rd1_select(bright_laplace_us_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_laplace_diff_2_rd1_res);
	return result;
}

// bright_laplace_us_2_update_0_write
//	bright_laplace_us_2_bright_laplace_us_2_update_0_write0
//	bright_laplace_us_2_bright_laplace_us_2_update_0_write1
inline void bright_laplace_us_2_bright_laplace_us_2_update_0_write_bundle_write(hw_uint<32>& bright_laplace_us_2_update_0_write, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_write0_res = bright_laplace_us_2_update_0_write.extract<0, 15>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_write0_write(bright_laplace_us_2_bright_laplace_us_2_update_0_write0_res, bright_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> bright_laplace_us_2_bright_laplace_us_2_update_0_write1_res = bright_laplace_us_2_update_0_write.extract<16, 31>();
	bright_laplace_us_2_bright_laplace_us_2_update_0_write1_write(bright_laplace_us_2_bright_laplace_us_2_update_0_write1_res, bright_laplace_us_2, d0, d1, dynamic_address);
}

struct bright_weights_bright_weights_update_0_write0_to_bright_weights_normed_rd0_cache {
	// RAM Box: {[-24, 1096], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write1_to_bright_weights_normed_rd1_cache {
	// RAM Box: {[-23, 1097], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write2_to_bright_weights_normed_rd2_cache {
	// RAM Box: {[-22, 1098], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write3_to_bright_weights_normed_rd3_cache {
	// RAM Box: {[-21, 1099], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write4_to_bright_weights_normed_rd4_cache {
	// RAM Box: {[-20, 1100], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write5_to_bright_weights_normed_rd5_cache {
	// RAM Box: {[-19, 1101], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write6_to_bright_weights_normed_rd6_cache {
	// RAM Box: {[-18, 1102], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_bright_weights_update_0_write7_to_bright_weights_normed_rd7_cache {
	// RAM Box: {[-17, 1103], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_cache {
  // Reader addrs...
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_weights_normed_update_0[d0, d1] -> bright_weights[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // # of banks: 8
  bright_weights_bright_weights_update_0_write0_to_bright_weights_normed_rd0_cache bright_weights_bright_weights_update_0_write0_to_bright_weights_normed_rd0;
  bright_weights_bright_weights_update_0_write1_to_bright_weights_normed_rd1_cache bright_weights_bright_weights_update_0_write1_to_bright_weights_normed_rd1;
  bright_weights_bright_weights_update_0_write2_to_bright_weights_normed_rd2_cache bright_weights_bright_weights_update_0_write2_to_bright_weights_normed_rd2;
  bright_weights_bright_weights_update_0_write3_to_bright_weights_normed_rd3_cache bright_weights_bright_weights_update_0_write3_to_bright_weights_normed_rd3;
  bright_weights_bright_weights_update_0_write4_to_bright_weights_normed_rd4_cache bright_weights_bright_weights_update_0_write4_to_bright_weights_normed_rd4;
  bright_weights_bright_weights_update_0_write5_to_bright_weights_normed_rd5_cache bright_weights_bright_weights_update_0_write5_to_bright_weights_normed_rd5;
  bright_weights_bright_weights_update_0_write6_to_bright_weights_normed_rd6_cache bright_weights_bright_weights_update_0_write6_to_bright_weights_normed_rd6;
  bright_weights_bright_weights_update_0_write7_to_bright_weights_normed_rd7_cache bright_weights_bright_weights_update_0_write7_to_bright_weights_normed_rd7;
};



inline void bright_weights_bright_weights_update_0_write0_write(hw_uint<16>& bright_weights_bright_weights_update_0_write0, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write0_to_bright_weights_normed_rd0.push(bright_weights_bright_weights_update_0_write0);
}

inline void bright_weights_bright_weights_update_0_write1_write(hw_uint<16>& bright_weights_bright_weights_update_0_write1, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write1_to_bright_weights_normed_rd1.push(bright_weights_bright_weights_update_0_write1);
}

inline void bright_weights_bright_weights_update_0_write2_write(hw_uint<16>& bright_weights_bright_weights_update_0_write2, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write2_to_bright_weights_normed_rd2.push(bright_weights_bright_weights_update_0_write2);
}

inline void bright_weights_bright_weights_update_0_write3_write(hw_uint<16>& bright_weights_bright_weights_update_0_write3, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write3_to_bright_weights_normed_rd3.push(bright_weights_bright_weights_update_0_write3);
}

inline void bright_weights_bright_weights_update_0_write4_write(hw_uint<16>& bright_weights_bright_weights_update_0_write4, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write4_to_bright_weights_normed_rd4.push(bright_weights_bright_weights_update_0_write4);
}

inline void bright_weights_bright_weights_update_0_write5_write(hw_uint<16>& bright_weights_bright_weights_update_0_write5, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write5_to_bright_weights_normed_rd5.push(bright_weights_bright_weights_update_0_write5);
}

inline void bright_weights_bright_weights_update_0_write6_write(hw_uint<16>& bright_weights_bright_weights_update_0_write6, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write6_to_bright_weights_normed_rd6.push(bright_weights_bright_weights_update_0_write6);
}

inline void bright_weights_bright_weights_update_0_write7_write(hw_uint<16>& bright_weights_bright_weights_update_0_write7, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  bright_weights.bright_weights_bright_weights_update_0_write7_to_bright_weights_normed_rd7.push(bright_weights_bright_weights_update_0_write7);
}

inline hw_uint<16> bright_weights_normed_rd0_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd0 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write0 = bright_weights.bright_weights_bright_weights_update_0_write0_to_bright_weights_normed_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd1_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd1 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write1 = bright_weights.bright_weights_bright_weights_update_0_write1_to_bright_weights_normed_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd2_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd2 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write2 = bright_weights.bright_weights_bright_weights_update_0_write2_to_bright_weights_normed_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd3_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd3 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write3 = bright_weights.bright_weights_bright_weights_update_0_write3_to_bright_weights_normed_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd4_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd4 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write4 = bright_weights.bright_weights_bright_weights_update_0_write4_to_bright_weights_normed_rd4.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd5_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd5 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write5 = bright_weights.bright_weights_bright_weights_update_0_write5_to_bright_weights_normed_rd5.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd6_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd6 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write6 = bright_weights.bright_weights_bright_weights_update_0_write6_to_bright_weights_normed_rd6.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_rd7_select(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_rd7 read pattern: { bright_weights_normed_update_0[d0, d1] -> bright_weights[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_bright_weights_update_0_write7 = bright_weights.bright_weights_bright_weights_update_0_write7_to_bright_weights_normed_rd7.peek(/* one reader or all rams */ 0);
  return value_bright_weights_bright_weights_update_0_write7;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_update_0_read
//	bright_weights_normed_rd0
//	bright_weights_normed_rd1
//	bright_weights_normed_rd2
//	bright_weights_normed_rd3
//	bright_weights_normed_rd4
//	bright_weights_normed_rd5
//	bright_weights_normed_rd6
//	bright_weights_normed_rd7
inline hw_uint<128> bright_weights_bright_weights_normed_update_0_read_bundle_read(bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_weights_normed_rd0
    // bright_weights_normed_rd1
    // bright_weights_normed_rd2
    // bright_weights_normed_rd3
    // bright_weights_normed_rd4
    // bright_weights_normed_rd5
    // bright_weights_normed_rd6
    // bright_weights_normed_rd7

	hw_uint<128> result;
	hw_uint<16> bright_weights_normed_rd0_res = bright_weights_normed_rd0_select(bright_weights, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_weights_normed_rd0_res);
	hw_uint<16> bright_weights_normed_rd1_res = bright_weights_normed_rd1_select(bright_weights, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_weights_normed_rd1_res);
	hw_uint<16> bright_weights_normed_rd2_res = bright_weights_normed_rd2_select(bright_weights, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_weights_normed_rd2_res);
	hw_uint<16> bright_weights_normed_rd3_res = bright_weights_normed_rd3_select(bright_weights, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_weights_normed_rd3_res);
	hw_uint<16> bright_weights_normed_rd4_res = bright_weights_normed_rd4_select(bright_weights, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_weights_normed_rd4_res);
	hw_uint<16> bright_weights_normed_rd5_res = bright_weights_normed_rd5_select(bright_weights, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_weights_normed_rd5_res);
	hw_uint<16> bright_weights_normed_rd6_res = bright_weights_normed_rd6_select(bright_weights, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_weights_normed_rd6_res);
	hw_uint<16> bright_weights_normed_rd7_res = bright_weights_normed_rd7_select(bright_weights, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_weights_normed_rd7_res);
	return result;
}

// bright_weights_update_0_write
//	bright_weights_bright_weights_update_0_write0
//	bright_weights_bright_weights_update_0_write1
//	bright_weights_bright_weights_update_0_write2
//	bright_weights_bright_weights_update_0_write3
//	bright_weights_bright_weights_update_0_write4
//	bright_weights_bright_weights_update_0_write5
//	bright_weights_bright_weights_update_0_write6
//	bright_weights_bright_weights_update_0_write7
inline void bright_weights_bright_weights_update_0_write_bundle_write(hw_uint<128>& bright_weights_update_0_write, bright_weights_cache& bright_weights, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_bright_weights_update_0_write0_res = bright_weights_update_0_write.extract<0, 15>();
	bright_weights_bright_weights_update_0_write0_write(bright_weights_bright_weights_update_0_write0_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write1_res = bright_weights_update_0_write.extract<16, 31>();
	bright_weights_bright_weights_update_0_write1_write(bright_weights_bright_weights_update_0_write1_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write2_res = bright_weights_update_0_write.extract<32, 47>();
	bright_weights_bright_weights_update_0_write2_write(bright_weights_bright_weights_update_0_write2_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write3_res = bright_weights_update_0_write.extract<48, 63>();
	bright_weights_bright_weights_update_0_write3_write(bright_weights_bright_weights_update_0_write3_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write4_res = bright_weights_update_0_write.extract<64, 79>();
	bright_weights_bright_weights_update_0_write4_write(bright_weights_bright_weights_update_0_write4_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write5_res = bright_weights_update_0_write.extract<80, 95>();
	bright_weights_bright_weights_update_0_write5_write(bright_weights_bright_weights_update_0_write5_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write6_res = bright_weights_update_0_write.extract<96, 111>();
	bright_weights_bright_weights_update_0_write6_write(bright_weights_bright_weights_update_0_write6_res, bright_weights, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_bright_weights_update_0_write7_res = bright_weights_update_0_write.extract<112, 127>();
	bright_weights_bright_weights_update_0_write7_write(bright_weights_bright_weights_update_0_write7_res, bright_weights, d0, d1, dynamic_address);
}

struct bright_weights_normed_bright_weights_normed_update_0_write0_to_fused_level_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write1_to_fused_level_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write2_to_fused_level_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write3_to_fused_level_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write4_to_fused_level_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write5_to_fused_level_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write6_to_fused_level_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write7_to_fused_level_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[-16, 1096], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 6
  // 0, 1, 141, 142, 282, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 139> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 139> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_140() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_141() {
		return f4;
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_281() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_282() {
		return f8;
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-15, 1089], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[-14, 1090], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[-13, 1091], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9_cache {
	// RAM Box: {[-12, 1092], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9_cache {
	// RAM Box: {[-11, 1093], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9_cache {
	// RAM Box: {[-10, 1094], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9_cache {
	// RAM Box: {[-17, 1095], [-7, 1919]}
	// Capacity: 285
	// # of read delays: 7
  // 0, 1, 2, 142, 143, 283, 284
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 139> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 139> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_143() {
		return f8;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}

	inline hw_uint<16> peek_284() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 16
  bright_weights_normed_bright_weights_normed_update_0_write0_to_fused_level_0_rd0_cache bright_weights_normed_bright_weights_normed_update_0_write0_to_fused_level_0_rd0;
  bright_weights_normed_bright_weights_normed_update_0_write1_to_fused_level_0_rd1_cache bright_weights_normed_bright_weights_normed_update_0_write1_to_fused_level_0_rd1;
  bright_weights_normed_bright_weights_normed_update_0_write2_to_fused_level_0_rd2_cache bright_weights_normed_bright_weights_normed_update_0_write2_to_fused_level_0_rd2;
  bright_weights_normed_bright_weights_normed_update_0_write3_to_fused_level_0_rd3_cache bright_weights_normed_bright_weights_normed_update_0_write3_to_fused_level_0_rd3;
  bright_weights_normed_bright_weights_normed_update_0_write4_to_fused_level_0_rd4_cache bright_weights_normed_bright_weights_normed_update_0_write4_to_fused_level_0_rd4;
  bright_weights_normed_bright_weights_normed_update_0_write5_to_fused_level_0_rd5_cache bright_weights_normed_bright_weights_normed_update_0_write5_to_fused_level_0_rd5;
  bright_weights_normed_bright_weights_normed_update_0_write6_to_fused_level_0_rd6_cache bright_weights_normed_bright_weights_normed_update_0_write6_to_fused_level_0_rd6;
  bright_weights_normed_bright_weights_normed_update_0_write7_to_fused_level_0_rd7_cache bright_weights_normed_bright_weights_normed_update_0_write7_to_fused_level_0_rd7;
  bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9;
  bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9_cache bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9;
};



inline void bright_weights_normed_bright_weights_normed_update_0_write0_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write0, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_to_fused_level_0_rd0.push(bright_weights_normed_bright_weights_normed_update_0_write0);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write0);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write1_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write1, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_to_fused_level_0_rd1.push(bright_weights_normed_bright_weights_normed_update_0_write1);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write1);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write2_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write2, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_to_fused_level_0_rd2.push(bright_weights_normed_bright_weights_normed_update_0_write2);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write2);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write3_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write3, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_to_fused_level_0_rd3.push(bright_weights_normed_bright_weights_normed_update_0_write3);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write3);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write4_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write4, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_to_fused_level_0_rd4.push(bright_weights_normed_bright_weights_normed_update_0_write4);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write4);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write5_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write5, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_to_fused_level_0_rd5.push(bright_weights_normed_bright_weights_normed_update_0_write5);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write5);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write6_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write6, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_to_fused_level_0_rd6.push(bright_weights_normed_bright_weights_normed_update_0_write6);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write6);
}

inline void bright_weights_normed_bright_weights_normed_update_0_write7_write(hw_uint<16>& bright_weights_normed_bright_weights_normed_update_0_write7, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_to_fused_level_0_rd7.push(bright_weights_normed_bright_weights_normed_update_0_write7);
  bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.push(bright_weights_normed_bright_weights_normed_update_0_write7);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd0_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd0 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_284();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd1_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd1 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_143();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd10_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd10 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd11_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd11 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd12_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd12 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd13_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd13 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd14_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd14 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd15_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd15 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd16_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd16 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd17_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd17 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd18_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd18 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd19_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd19 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd2_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd2 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_2();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd20_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd20 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd21_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd21 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd22_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd22 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd23_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd23 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd24_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd24 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd25_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd25 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd26_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd26 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd27_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd27 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd28_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd28 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd29_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd29 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd3_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd3 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd30_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd30 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd31_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd31 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd32_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd32 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd33_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd33 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd34_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd34 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd35_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd35 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd36_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd36 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd37_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd37 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd38_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd38 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd39_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd39 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd4_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd4 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd40_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd40 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd41_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd41 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd42_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd42 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd43_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd43 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd44_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd44 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd45_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd45 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd46_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd46 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd47_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd47 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd48_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd48 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd49_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd49 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd5_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd5 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd50_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd50 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd51_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd51 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd52_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd52 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd53_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd53 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd54_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd54 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd55_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd55 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd56_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd56 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd57_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd57 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd58_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd58 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd59_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd59 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd6_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd6 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd60_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd60 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd61_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd61 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd62_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd62 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd63_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd63 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd64_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd64 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd65_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd65 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd66_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd66 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd67_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd67 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd68_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd68 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd69_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd69 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_282();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd7_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd7 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_142();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd70_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd70 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_141();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd71_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd71 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_0();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd8_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd8 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_1_rd9_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_1_rd9 read pattern: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> bright_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_merged_banks_9.peek_283();
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd0_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write0 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write0_to_fused_level_0_rd0.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write1 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write1_to_fused_level_0_rd1.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write2 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write2_to_fused_level_0_rd2.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write3 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write3_to_fused_level_0_rd3.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write4 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write4_to_fused_level_0_rd4.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write5 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write5_to_fused_level_0_rd5.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write6 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write6_to_fused_level_0_rd6.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> bright_weights_normed[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_bright_weights_normed_bright_weights_normed_update_0_write7 = bright_weights_normed.bright_weights_normed_bright_weights_normed_update_0_write7_to_fused_level_0_rd7.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_bright_weights_normed_bright_weights_normed_update_0_write7;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_blur_1_update_0_read
//	bright_weights_normed_gauss_blur_1_rd0
//	bright_weights_normed_gauss_blur_1_rd1
//	bright_weights_normed_gauss_blur_1_rd2
//	bright_weights_normed_gauss_blur_1_rd3
//	bright_weights_normed_gauss_blur_1_rd4
//	bright_weights_normed_gauss_blur_1_rd5
//	bright_weights_normed_gauss_blur_1_rd6
//	bright_weights_normed_gauss_blur_1_rd7
//	bright_weights_normed_gauss_blur_1_rd8
//	bright_weights_normed_gauss_blur_1_rd9
//	bright_weights_normed_gauss_blur_1_rd10
//	bright_weights_normed_gauss_blur_1_rd11
//	bright_weights_normed_gauss_blur_1_rd12
//	bright_weights_normed_gauss_blur_1_rd13
//	bright_weights_normed_gauss_blur_1_rd14
//	bright_weights_normed_gauss_blur_1_rd15
//	bright_weights_normed_gauss_blur_1_rd16
//	bright_weights_normed_gauss_blur_1_rd17
//	bright_weights_normed_gauss_blur_1_rd18
//	bright_weights_normed_gauss_blur_1_rd19
//	bright_weights_normed_gauss_blur_1_rd20
//	bright_weights_normed_gauss_blur_1_rd21
//	bright_weights_normed_gauss_blur_1_rd22
//	bright_weights_normed_gauss_blur_1_rd23
//	bright_weights_normed_gauss_blur_1_rd24
//	bright_weights_normed_gauss_blur_1_rd25
//	bright_weights_normed_gauss_blur_1_rd26
//	bright_weights_normed_gauss_blur_1_rd27
//	bright_weights_normed_gauss_blur_1_rd28
//	bright_weights_normed_gauss_blur_1_rd29
//	bright_weights_normed_gauss_blur_1_rd30
//	bright_weights_normed_gauss_blur_1_rd31
//	bright_weights_normed_gauss_blur_1_rd32
//	bright_weights_normed_gauss_blur_1_rd33
//	bright_weights_normed_gauss_blur_1_rd34
//	bright_weights_normed_gauss_blur_1_rd35
//	bright_weights_normed_gauss_blur_1_rd36
//	bright_weights_normed_gauss_blur_1_rd37
//	bright_weights_normed_gauss_blur_1_rd38
//	bright_weights_normed_gauss_blur_1_rd39
//	bright_weights_normed_gauss_blur_1_rd40
//	bright_weights_normed_gauss_blur_1_rd41
//	bright_weights_normed_gauss_blur_1_rd42
//	bright_weights_normed_gauss_blur_1_rd43
//	bright_weights_normed_gauss_blur_1_rd44
//	bright_weights_normed_gauss_blur_1_rd45
//	bright_weights_normed_gauss_blur_1_rd46
//	bright_weights_normed_gauss_blur_1_rd47
//	bright_weights_normed_gauss_blur_1_rd48
//	bright_weights_normed_gauss_blur_1_rd49
//	bright_weights_normed_gauss_blur_1_rd50
//	bright_weights_normed_gauss_blur_1_rd51
//	bright_weights_normed_gauss_blur_1_rd52
//	bright_weights_normed_gauss_blur_1_rd53
//	bright_weights_normed_gauss_blur_1_rd54
//	bright_weights_normed_gauss_blur_1_rd55
//	bright_weights_normed_gauss_blur_1_rd56
//	bright_weights_normed_gauss_blur_1_rd57
//	bright_weights_normed_gauss_blur_1_rd58
//	bright_weights_normed_gauss_blur_1_rd59
//	bright_weights_normed_gauss_blur_1_rd60
//	bright_weights_normed_gauss_blur_1_rd61
//	bright_weights_normed_gauss_blur_1_rd62
//	bright_weights_normed_gauss_blur_1_rd63
//	bright_weights_normed_gauss_blur_1_rd64
//	bright_weights_normed_gauss_blur_1_rd65
//	bright_weights_normed_gauss_blur_1_rd66
//	bright_weights_normed_gauss_blur_1_rd67
//	bright_weights_normed_gauss_blur_1_rd68
//	bright_weights_normed_gauss_blur_1_rd69
//	bright_weights_normed_gauss_blur_1_rd70
//	bright_weights_normed_gauss_blur_1_rd71
inline hw_uint<1152> bright_weights_normed_bright_weights_normed_gauss_blur_1_update_0_read_bundle_read(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // bright_weights_normed_gauss_blur_1_rd0
    // bright_weights_normed_gauss_blur_1_rd1
    // bright_weights_normed_gauss_blur_1_rd2
    // bright_weights_normed_gauss_blur_1_rd3
    // bright_weights_normed_gauss_blur_1_rd4
    // bright_weights_normed_gauss_blur_1_rd5
    // bright_weights_normed_gauss_blur_1_rd6
    // bright_weights_normed_gauss_blur_1_rd7
    // bright_weights_normed_gauss_blur_1_rd8
    // bright_weights_normed_gauss_blur_1_rd9
    // bright_weights_normed_gauss_blur_1_rd10
    // bright_weights_normed_gauss_blur_1_rd11
    // bright_weights_normed_gauss_blur_1_rd12
    // bright_weights_normed_gauss_blur_1_rd13
    // bright_weights_normed_gauss_blur_1_rd14
    // bright_weights_normed_gauss_blur_1_rd15
    // bright_weights_normed_gauss_blur_1_rd16
    // bright_weights_normed_gauss_blur_1_rd17
    // bright_weights_normed_gauss_blur_1_rd18
    // bright_weights_normed_gauss_blur_1_rd19
    // bright_weights_normed_gauss_blur_1_rd20
    // bright_weights_normed_gauss_blur_1_rd21
    // bright_weights_normed_gauss_blur_1_rd22
    // bright_weights_normed_gauss_blur_1_rd23
    // bright_weights_normed_gauss_blur_1_rd24
    // bright_weights_normed_gauss_blur_1_rd25
    // bright_weights_normed_gauss_blur_1_rd26
    // bright_weights_normed_gauss_blur_1_rd27
    // bright_weights_normed_gauss_blur_1_rd28
    // bright_weights_normed_gauss_blur_1_rd29
    // bright_weights_normed_gauss_blur_1_rd30
    // bright_weights_normed_gauss_blur_1_rd31
    // bright_weights_normed_gauss_blur_1_rd32
    // bright_weights_normed_gauss_blur_1_rd33
    // bright_weights_normed_gauss_blur_1_rd34
    // bright_weights_normed_gauss_blur_1_rd35
    // bright_weights_normed_gauss_blur_1_rd36
    // bright_weights_normed_gauss_blur_1_rd37
    // bright_weights_normed_gauss_blur_1_rd38
    // bright_weights_normed_gauss_blur_1_rd39
    // bright_weights_normed_gauss_blur_1_rd40
    // bright_weights_normed_gauss_blur_1_rd41
    // bright_weights_normed_gauss_blur_1_rd42
    // bright_weights_normed_gauss_blur_1_rd43
    // bright_weights_normed_gauss_blur_1_rd44
    // bright_weights_normed_gauss_blur_1_rd45
    // bright_weights_normed_gauss_blur_1_rd46
    // bright_weights_normed_gauss_blur_1_rd47
    // bright_weights_normed_gauss_blur_1_rd48
    // bright_weights_normed_gauss_blur_1_rd49
    // bright_weights_normed_gauss_blur_1_rd50
    // bright_weights_normed_gauss_blur_1_rd51
    // bright_weights_normed_gauss_blur_1_rd52
    // bright_weights_normed_gauss_blur_1_rd53
    // bright_weights_normed_gauss_blur_1_rd54
    // bright_weights_normed_gauss_blur_1_rd55
    // bright_weights_normed_gauss_blur_1_rd56
    // bright_weights_normed_gauss_blur_1_rd57
    // bright_weights_normed_gauss_blur_1_rd58
    // bright_weights_normed_gauss_blur_1_rd59
    // bright_weights_normed_gauss_blur_1_rd60
    // bright_weights_normed_gauss_blur_1_rd61
    // bright_weights_normed_gauss_blur_1_rd62
    // bright_weights_normed_gauss_blur_1_rd63
    // bright_weights_normed_gauss_blur_1_rd64
    // bright_weights_normed_gauss_blur_1_rd65
    // bright_weights_normed_gauss_blur_1_rd66
    // bright_weights_normed_gauss_blur_1_rd67
    // bright_weights_normed_gauss_blur_1_rd68
    // bright_weights_normed_gauss_blur_1_rd69
    // bright_weights_normed_gauss_blur_1_rd70
    // bright_weights_normed_gauss_blur_1_rd71

	hw_uint<1152> result;
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd0_res = bright_weights_normed_gauss_blur_1_rd0_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<0, 1152>(result, bright_weights_normed_gauss_blur_1_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd1_res = bright_weights_normed_gauss_blur_1_rd1_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<16, 1152>(result, bright_weights_normed_gauss_blur_1_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd2_res = bright_weights_normed_gauss_blur_1_rd2_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<32, 1152>(result, bright_weights_normed_gauss_blur_1_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd3_res = bright_weights_normed_gauss_blur_1_rd3_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<48, 1152>(result, bright_weights_normed_gauss_blur_1_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd4_res = bright_weights_normed_gauss_blur_1_rd4_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<64, 1152>(result, bright_weights_normed_gauss_blur_1_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd5_res = bright_weights_normed_gauss_blur_1_rd5_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<80, 1152>(result, bright_weights_normed_gauss_blur_1_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd6_res = bright_weights_normed_gauss_blur_1_rd6_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<96, 1152>(result, bright_weights_normed_gauss_blur_1_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd7_res = bright_weights_normed_gauss_blur_1_rd7_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<112, 1152>(result, bright_weights_normed_gauss_blur_1_rd7_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd8_res = bright_weights_normed_gauss_blur_1_rd8_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<128, 1152>(result, bright_weights_normed_gauss_blur_1_rd8_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd9_res = bright_weights_normed_gauss_blur_1_rd9_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<144, 1152>(result, bright_weights_normed_gauss_blur_1_rd9_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd10_res = bright_weights_normed_gauss_blur_1_rd10_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<160, 1152>(result, bright_weights_normed_gauss_blur_1_rd10_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd11_res = bright_weights_normed_gauss_blur_1_rd11_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<176, 1152>(result, bright_weights_normed_gauss_blur_1_rd11_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd12_res = bright_weights_normed_gauss_blur_1_rd12_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<192, 1152>(result, bright_weights_normed_gauss_blur_1_rd12_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd13_res = bright_weights_normed_gauss_blur_1_rd13_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<208, 1152>(result, bright_weights_normed_gauss_blur_1_rd13_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd14_res = bright_weights_normed_gauss_blur_1_rd14_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<224, 1152>(result, bright_weights_normed_gauss_blur_1_rd14_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd15_res = bright_weights_normed_gauss_blur_1_rd15_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<240, 1152>(result, bright_weights_normed_gauss_blur_1_rd15_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd16_res = bright_weights_normed_gauss_blur_1_rd16_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<256, 1152>(result, bright_weights_normed_gauss_blur_1_rd16_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd17_res = bright_weights_normed_gauss_blur_1_rd17_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<272, 1152>(result, bright_weights_normed_gauss_blur_1_rd17_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd18_res = bright_weights_normed_gauss_blur_1_rd18_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<288, 1152>(result, bright_weights_normed_gauss_blur_1_rd18_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd19_res = bright_weights_normed_gauss_blur_1_rd19_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<304, 1152>(result, bright_weights_normed_gauss_blur_1_rd19_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd20_res = bright_weights_normed_gauss_blur_1_rd20_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<320, 1152>(result, bright_weights_normed_gauss_blur_1_rd20_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd21_res = bright_weights_normed_gauss_blur_1_rd21_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<336, 1152>(result, bright_weights_normed_gauss_blur_1_rd21_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd22_res = bright_weights_normed_gauss_blur_1_rd22_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<352, 1152>(result, bright_weights_normed_gauss_blur_1_rd22_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd23_res = bright_weights_normed_gauss_blur_1_rd23_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<368, 1152>(result, bright_weights_normed_gauss_blur_1_rd23_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd24_res = bright_weights_normed_gauss_blur_1_rd24_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<384, 1152>(result, bright_weights_normed_gauss_blur_1_rd24_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd25_res = bright_weights_normed_gauss_blur_1_rd25_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<400, 1152>(result, bright_weights_normed_gauss_blur_1_rd25_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd26_res = bright_weights_normed_gauss_blur_1_rd26_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<416, 1152>(result, bright_weights_normed_gauss_blur_1_rd26_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd27_res = bright_weights_normed_gauss_blur_1_rd27_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<432, 1152>(result, bright_weights_normed_gauss_blur_1_rd27_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd28_res = bright_weights_normed_gauss_blur_1_rd28_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<448, 1152>(result, bright_weights_normed_gauss_blur_1_rd28_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd29_res = bright_weights_normed_gauss_blur_1_rd29_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<464, 1152>(result, bright_weights_normed_gauss_blur_1_rd29_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd30_res = bright_weights_normed_gauss_blur_1_rd30_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<480, 1152>(result, bright_weights_normed_gauss_blur_1_rd30_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd31_res = bright_weights_normed_gauss_blur_1_rd31_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<496, 1152>(result, bright_weights_normed_gauss_blur_1_rd31_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd32_res = bright_weights_normed_gauss_blur_1_rd32_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<512, 1152>(result, bright_weights_normed_gauss_blur_1_rd32_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd33_res = bright_weights_normed_gauss_blur_1_rd33_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<528, 1152>(result, bright_weights_normed_gauss_blur_1_rd33_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd34_res = bright_weights_normed_gauss_blur_1_rd34_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<544, 1152>(result, bright_weights_normed_gauss_blur_1_rd34_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd35_res = bright_weights_normed_gauss_blur_1_rd35_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<560, 1152>(result, bright_weights_normed_gauss_blur_1_rd35_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd36_res = bright_weights_normed_gauss_blur_1_rd36_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<576, 1152>(result, bright_weights_normed_gauss_blur_1_rd36_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd37_res = bright_weights_normed_gauss_blur_1_rd37_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<592, 1152>(result, bright_weights_normed_gauss_blur_1_rd37_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd38_res = bright_weights_normed_gauss_blur_1_rd38_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<608, 1152>(result, bright_weights_normed_gauss_blur_1_rd38_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd39_res = bright_weights_normed_gauss_blur_1_rd39_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<624, 1152>(result, bright_weights_normed_gauss_blur_1_rd39_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd40_res = bright_weights_normed_gauss_blur_1_rd40_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<640, 1152>(result, bright_weights_normed_gauss_blur_1_rd40_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd41_res = bright_weights_normed_gauss_blur_1_rd41_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<656, 1152>(result, bright_weights_normed_gauss_blur_1_rd41_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd42_res = bright_weights_normed_gauss_blur_1_rd42_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<672, 1152>(result, bright_weights_normed_gauss_blur_1_rd42_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd43_res = bright_weights_normed_gauss_blur_1_rd43_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<688, 1152>(result, bright_weights_normed_gauss_blur_1_rd43_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd44_res = bright_weights_normed_gauss_blur_1_rd44_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<704, 1152>(result, bright_weights_normed_gauss_blur_1_rd44_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd45_res = bright_weights_normed_gauss_blur_1_rd45_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<720, 1152>(result, bright_weights_normed_gauss_blur_1_rd45_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd46_res = bright_weights_normed_gauss_blur_1_rd46_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<736, 1152>(result, bright_weights_normed_gauss_blur_1_rd46_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd47_res = bright_weights_normed_gauss_blur_1_rd47_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<752, 1152>(result, bright_weights_normed_gauss_blur_1_rd47_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd48_res = bright_weights_normed_gauss_blur_1_rd48_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<768, 1152>(result, bright_weights_normed_gauss_blur_1_rd48_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd49_res = bright_weights_normed_gauss_blur_1_rd49_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<784, 1152>(result, bright_weights_normed_gauss_blur_1_rd49_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd50_res = bright_weights_normed_gauss_blur_1_rd50_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<800, 1152>(result, bright_weights_normed_gauss_blur_1_rd50_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd51_res = bright_weights_normed_gauss_blur_1_rd51_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<816, 1152>(result, bright_weights_normed_gauss_blur_1_rd51_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd52_res = bright_weights_normed_gauss_blur_1_rd52_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<832, 1152>(result, bright_weights_normed_gauss_blur_1_rd52_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd53_res = bright_weights_normed_gauss_blur_1_rd53_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<848, 1152>(result, bright_weights_normed_gauss_blur_1_rd53_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd54_res = bright_weights_normed_gauss_blur_1_rd54_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<864, 1152>(result, bright_weights_normed_gauss_blur_1_rd54_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd55_res = bright_weights_normed_gauss_blur_1_rd55_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<880, 1152>(result, bright_weights_normed_gauss_blur_1_rd55_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd56_res = bright_weights_normed_gauss_blur_1_rd56_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<896, 1152>(result, bright_weights_normed_gauss_blur_1_rd56_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd57_res = bright_weights_normed_gauss_blur_1_rd57_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<912, 1152>(result, bright_weights_normed_gauss_blur_1_rd57_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd58_res = bright_weights_normed_gauss_blur_1_rd58_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<928, 1152>(result, bright_weights_normed_gauss_blur_1_rd58_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd59_res = bright_weights_normed_gauss_blur_1_rd59_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<944, 1152>(result, bright_weights_normed_gauss_blur_1_rd59_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd60_res = bright_weights_normed_gauss_blur_1_rd60_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<960, 1152>(result, bright_weights_normed_gauss_blur_1_rd60_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd61_res = bright_weights_normed_gauss_blur_1_rd61_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<976, 1152>(result, bright_weights_normed_gauss_blur_1_rd61_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd62_res = bright_weights_normed_gauss_blur_1_rd62_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<992, 1152>(result, bright_weights_normed_gauss_blur_1_rd62_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd63_res = bright_weights_normed_gauss_blur_1_rd63_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, bright_weights_normed_gauss_blur_1_rd63_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd64_res = bright_weights_normed_gauss_blur_1_rd64_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, bright_weights_normed_gauss_blur_1_rd64_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd65_res = bright_weights_normed_gauss_blur_1_rd65_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, bright_weights_normed_gauss_blur_1_rd65_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd66_res = bright_weights_normed_gauss_blur_1_rd66_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, bright_weights_normed_gauss_blur_1_rd66_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd67_res = bright_weights_normed_gauss_blur_1_rd67_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, bright_weights_normed_gauss_blur_1_rd67_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd68_res = bright_weights_normed_gauss_blur_1_rd68_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, bright_weights_normed_gauss_blur_1_rd68_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd69_res = bright_weights_normed_gauss_blur_1_rd69_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, bright_weights_normed_gauss_blur_1_rd69_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd70_res = bright_weights_normed_gauss_blur_1_rd70_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, bright_weights_normed_gauss_blur_1_rd70_res);
	hw_uint<16> bright_weights_normed_gauss_blur_1_rd71_res = bright_weights_normed_gauss_blur_1_rd71_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, bright_weights_normed_gauss_blur_1_rd71_res);
	return result;
}

// bright_weights_normed_update_0_write
//	bright_weights_normed_bright_weights_normed_update_0_write0
//	bright_weights_normed_bright_weights_normed_update_0_write1
//	bright_weights_normed_bright_weights_normed_update_0_write2
//	bright_weights_normed_bright_weights_normed_update_0_write3
//	bright_weights_normed_bright_weights_normed_update_0_write4
//	bright_weights_normed_bright_weights_normed_update_0_write5
//	bright_weights_normed_bright_weights_normed_update_0_write6
//	bright_weights_normed_bright_weights_normed_update_0_write7
inline void bright_weights_normed_bright_weights_normed_update_0_write_bundle_write(hw_uint<128>& bright_weights_normed_update_0_write, bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write0_res = bright_weights_normed_update_0_write.extract<0, 15>();
	bright_weights_normed_bright_weights_normed_update_0_write0_write(bright_weights_normed_bright_weights_normed_update_0_write0_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write1_res = bright_weights_normed_update_0_write.extract<16, 31>();
	bright_weights_normed_bright_weights_normed_update_0_write1_write(bright_weights_normed_bright_weights_normed_update_0_write1_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write2_res = bright_weights_normed_update_0_write.extract<32, 47>();
	bright_weights_normed_bright_weights_normed_update_0_write2_write(bright_weights_normed_bright_weights_normed_update_0_write2_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write3_res = bright_weights_normed_update_0_write.extract<48, 63>();
	bright_weights_normed_bright_weights_normed_update_0_write3_write(bright_weights_normed_bright_weights_normed_update_0_write3_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write4_res = bright_weights_normed_update_0_write.extract<64, 79>();
	bright_weights_normed_bright_weights_normed_update_0_write4_write(bright_weights_normed_bright_weights_normed_update_0_write4_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write5_res = bright_weights_normed_update_0_write.extract<80, 95>();
	bright_weights_normed_bright_weights_normed_update_0_write5_write(bright_weights_normed_bright_weights_normed_update_0_write5_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write6_res = bright_weights_normed_update_0_write.extract<96, 111>();
	bright_weights_normed_bright_weights_normed_update_0_write6_write(bright_weights_normed_bright_weights_normed_update_0_write6_res, bright_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_bright_weights_normed_update_0_write7_res = bright_weights_normed_update_0_write.extract<112, 127>();
	bright_weights_normed_bright_weights_normed_update_0_write7_write(bright_weights_normed_bright_weights_normed_update_0_write7_res, bright_weights_normed, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
inline hw_uint<128> bright_weights_normed_fused_level_0_update_0_read_bundle_read(bright_weights_normed_cache& bright_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(bright_weights_normed, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_0_rd7_res);
	return result;
}

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0_cache {
	// RAM Box: {[-16, 1088], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1_cache {
	// RAM Box: {[-14, 1090], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2_cache {
	// RAM Box: {[-12, 1092], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3_cache {
	// RAM Box: {[-10, 1094], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_1_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // # of banks: 4
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2;
  bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3_cache bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3;
};



inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3.push(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6);
}

inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_write(hw_uint<16>& bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd0_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd0 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_to_bright_weights_normed_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd1_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd1 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_to_bright_weights_normed_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd2_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd2 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_to_bright_weights_normed_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_1_rd3_select(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_1_rd3 read pattern: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> bright_weights_normed_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6 = bright_weights_normed_gauss_blur_1.bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_to_bright_weights_normed_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_1_update_0_write
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6
//	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7
inline void bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write_bundle_write(hw_uint<128>& bright_weights_normed_gauss_blur_1_update_0_write, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write0_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write1_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write2_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write3_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<64, 79>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write4_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<80, 95>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write5_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<96, 111>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write6_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_res = bright_weights_normed_gauss_blur_1_update_0_write.extract<112, 127>();
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_write(bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write7_res, bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
}

// bright_weights_normed_gauss_ds_1_update_0_read
//	bright_weights_normed_gauss_ds_1_rd0
//	bright_weights_normed_gauss_ds_1_rd1
//	bright_weights_normed_gauss_ds_1_rd2
//	bright_weights_normed_gauss_ds_1_rd3
inline hw_uint<64> bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_ds_1_update_0_read_bundle_read(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // bright_weights_normed_gauss_ds_1_rd0
    // bright_weights_normed_gauss_ds_1_rd1
    // bright_weights_normed_gauss_ds_1_rd2
    // bright_weights_normed_gauss_ds_1_rd3

	hw_uint<64> result;
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd0_res = bright_weights_normed_gauss_ds_1_rd0_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, bright_weights_normed_gauss_ds_1_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd1_res = bright_weights_normed_gauss_ds_1_rd1_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, bright_weights_normed_gauss_ds_1_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd2_res = bright_weights_normed_gauss_ds_1_rd2_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, bright_weights_normed_gauss_ds_1_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_ds_1_rd3_res = bright_weights_normed_gauss_ds_1_rd3_select(bright_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, bright_weights_normed_gauss_ds_1_rd3_res);
	return result;
}

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0_cache {
	// RAM Box: {[-4, 540], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1_cache {
	// RAM Box: {[-2, 542], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_2_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
    // { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // # of banks: 2
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0;
  bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1_cache bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1;
};



inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0);
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1.push(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2);
}

inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_rd0_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_rd0 read pattern: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_to_bright_weights_normed_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_ds_2_rd1_select(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_2_rd1 read pattern: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> bright_weights_normed_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2 = bright_weights_normed_gauss_blur_2.bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_to_bright_weights_normed_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_2_update_0_write
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2
//	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3
inline void bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write_bundle_write(hw_uint<64>& bright_weights_normed_gauss_blur_2_update_0_write, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write0_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write1_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write2_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_res = bright_weights_normed_gauss_blur_2_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_write(bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write3_res, bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
}

// bright_weights_normed_gauss_ds_2_update_0_read
//	bright_weights_normed_gauss_ds_2_rd0
//	bright_weights_normed_gauss_ds_2_rd1
inline hw_uint<32> bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_ds_2_update_0_read_bundle_read(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // bright_weights_normed_gauss_ds_2_rd0
    // bright_weights_normed_gauss_ds_2_rd1

	hw_uint<32> result;
	hw_uint<16> bright_weights_normed_gauss_ds_2_rd0_res = bright_weights_normed_gauss_ds_2_rd0_select(bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, bright_weights_normed_gauss_ds_2_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_ds_2_rd1_res = bright_weights_normed_gauss_ds_2_rd1_select(bright_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, bright_weights_normed_gauss_ds_2_rd1_res);
	return result;
}

struct bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 268], [0, 478]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_blur_3_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> bright_weights_normed_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 1
  bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0_cache bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0;
};



inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0.push(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0);
}

inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> bright_weights_normed_gauss_ds_3_rd0_select(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_ds_3_rd0 read pattern: { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> bright_weights_normed_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 37] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  auto value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0 = bright_weights_normed_gauss_blur_3.bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_to_bright_weights_normed_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_blur_3_update_0_write
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0
//	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1
inline void bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write_bundle_write(hw_uint<32>& bright_weights_normed_gauss_blur_3_update_0_write, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_res = bright_weights_normed_gauss_blur_3_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write0_res, bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_res = bright_weights_normed_gauss_blur_3_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_write(bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write1_res, bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
}

// bright_weights_normed_gauss_ds_3_update_0_read
//	bright_weights_normed_gauss_ds_3_rd0
inline hw_uint<16> bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_ds_3_update_0_read_bundle_read(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // bright_weights_normed_gauss_ds_3_rd0

	hw_uint<16> result;
	hw_uint<16> bright_weights_normed_gauss_ds_3_rd0_res = bright_weights_normed_gauss_ds_3_rd0_select(bright_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, bright_weights_normed_gauss_ds_3_rd0_res);
	return result;
}

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[-4, 544], [-3, 959]}
	// Capacity: 280
	// # of read delays: 6
  // 0, 1, 139, 140, 278, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 137> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 137> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_138() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_139() {
		return f4;
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_277() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_278() {
		return f8;
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-3, 541], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[-2, 542], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[-5, 543], [-3, 959]}
	// Capacity: 281
	// # of read delays: 7
  // 0, 1, 2, 140, 141, 279, 280
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 137> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 137> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_141() {
		return f8;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}

	inline hw_uint<16> peek_280() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_1_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 8
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9;
  bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9_cache bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9;
};



inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0);
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1);
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2);
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2);
}

inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_write(hw_uint<16>& bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3);
  bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.push(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd0_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd0 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_280();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd1_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd1 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_141();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd10_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd10 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd11_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd11 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd12_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd12 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd13_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd13 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd14_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd14 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd15_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd15 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd16_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd16 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd17_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd17 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd18_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd18 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd19_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd19 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd2_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd2 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_2();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd20_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd20 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd21_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd21 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd22_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd22 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd23_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd23 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd24_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd24 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd25_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd25 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd26_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd26 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd27_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd27 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd28_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd28 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd29_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd29 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd3_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd3 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd30_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd30 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd31_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd31 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd32_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd32 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd33_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd33 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_278();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd34_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd34 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_139();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd35_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd35 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd4_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd4 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd5_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd5 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd6_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd6 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd7_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd7 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd8_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd8 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_2_rd9_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_2_rd9 read pattern: { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd0_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> bright_weights_normed_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3 = bright_weights_normed_gauss_ds_1.bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_blur_2_update_0_read
//	bright_weights_normed_gauss_blur_2_rd0
//	bright_weights_normed_gauss_blur_2_rd1
//	bright_weights_normed_gauss_blur_2_rd2
//	bright_weights_normed_gauss_blur_2_rd3
//	bright_weights_normed_gauss_blur_2_rd4
//	bright_weights_normed_gauss_blur_2_rd5
//	bright_weights_normed_gauss_blur_2_rd6
//	bright_weights_normed_gauss_blur_2_rd7
//	bright_weights_normed_gauss_blur_2_rd8
//	bright_weights_normed_gauss_blur_2_rd9
//	bright_weights_normed_gauss_blur_2_rd10
//	bright_weights_normed_gauss_blur_2_rd11
//	bright_weights_normed_gauss_blur_2_rd12
//	bright_weights_normed_gauss_blur_2_rd13
//	bright_weights_normed_gauss_blur_2_rd14
//	bright_weights_normed_gauss_blur_2_rd15
//	bright_weights_normed_gauss_blur_2_rd16
//	bright_weights_normed_gauss_blur_2_rd17
//	bright_weights_normed_gauss_blur_2_rd18
//	bright_weights_normed_gauss_blur_2_rd19
//	bright_weights_normed_gauss_blur_2_rd20
//	bright_weights_normed_gauss_blur_2_rd21
//	bright_weights_normed_gauss_blur_2_rd22
//	bright_weights_normed_gauss_blur_2_rd23
//	bright_weights_normed_gauss_blur_2_rd24
//	bright_weights_normed_gauss_blur_2_rd25
//	bright_weights_normed_gauss_blur_2_rd26
//	bright_weights_normed_gauss_blur_2_rd27
//	bright_weights_normed_gauss_blur_2_rd28
//	bright_weights_normed_gauss_blur_2_rd29
//	bright_weights_normed_gauss_blur_2_rd30
//	bright_weights_normed_gauss_blur_2_rd31
//	bright_weights_normed_gauss_blur_2_rd32
//	bright_weights_normed_gauss_blur_2_rd33
//	bright_weights_normed_gauss_blur_2_rd34
//	bright_weights_normed_gauss_blur_2_rd35
inline hw_uint<576> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_blur_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // bright_weights_normed_gauss_blur_2_rd0
    // bright_weights_normed_gauss_blur_2_rd1
    // bright_weights_normed_gauss_blur_2_rd2
    // bright_weights_normed_gauss_blur_2_rd3
    // bright_weights_normed_gauss_blur_2_rd4
    // bright_weights_normed_gauss_blur_2_rd5
    // bright_weights_normed_gauss_blur_2_rd6
    // bright_weights_normed_gauss_blur_2_rd7
    // bright_weights_normed_gauss_blur_2_rd8
    // bright_weights_normed_gauss_blur_2_rd9
    // bright_weights_normed_gauss_blur_2_rd10
    // bright_weights_normed_gauss_blur_2_rd11
    // bright_weights_normed_gauss_blur_2_rd12
    // bright_weights_normed_gauss_blur_2_rd13
    // bright_weights_normed_gauss_blur_2_rd14
    // bright_weights_normed_gauss_blur_2_rd15
    // bright_weights_normed_gauss_blur_2_rd16
    // bright_weights_normed_gauss_blur_2_rd17
    // bright_weights_normed_gauss_blur_2_rd18
    // bright_weights_normed_gauss_blur_2_rd19
    // bright_weights_normed_gauss_blur_2_rd20
    // bright_weights_normed_gauss_blur_2_rd21
    // bright_weights_normed_gauss_blur_2_rd22
    // bright_weights_normed_gauss_blur_2_rd23
    // bright_weights_normed_gauss_blur_2_rd24
    // bright_weights_normed_gauss_blur_2_rd25
    // bright_weights_normed_gauss_blur_2_rd26
    // bright_weights_normed_gauss_blur_2_rd27
    // bright_weights_normed_gauss_blur_2_rd28
    // bright_weights_normed_gauss_blur_2_rd29
    // bright_weights_normed_gauss_blur_2_rd30
    // bright_weights_normed_gauss_blur_2_rd31
    // bright_weights_normed_gauss_blur_2_rd32
    // bright_weights_normed_gauss_blur_2_rd33
    // bright_weights_normed_gauss_blur_2_rd34
    // bright_weights_normed_gauss_blur_2_rd35

	hw_uint<576> result;
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd0_res = bright_weights_normed_gauss_blur_2_rd0_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 576>(result, bright_weights_normed_gauss_blur_2_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd1_res = bright_weights_normed_gauss_blur_2_rd1_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 576>(result, bright_weights_normed_gauss_blur_2_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd2_res = bright_weights_normed_gauss_blur_2_rd2_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 576>(result, bright_weights_normed_gauss_blur_2_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd3_res = bright_weights_normed_gauss_blur_2_rd3_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 576>(result, bright_weights_normed_gauss_blur_2_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd4_res = bright_weights_normed_gauss_blur_2_rd4_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 576>(result, bright_weights_normed_gauss_blur_2_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd5_res = bright_weights_normed_gauss_blur_2_rd5_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 576>(result, bright_weights_normed_gauss_blur_2_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd6_res = bright_weights_normed_gauss_blur_2_rd6_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 576>(result, bright_weights_normed_gauss_blur_2_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd7_res = bright_weights_normed_gauss_blur_2_rd7_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 576>(result, bright_weights_normed_gauss_blur_2_rd7_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd8_res = bright_weights_normed_gauss_blur_2_rd8_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 576>(result, bright_weights_normed_gauss_blur_2_rd8_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd9_res = bright_weights_normed_gauss_blur_2_rd9_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 576>(result, bright_weights_normed_gauss_blur_2_rd9_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd10_res = bright_weights_normed_gauss_blur_2_rd10_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 576>(result, bright_weights_normed_gauss_blur_2_rd10_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd11_res = bright_weights_normed_gauss_blur_2_rd11_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 576>(result, bright_weights_normed_gauss_blur_2_rd11_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd12_res = bright_weights_normed_gauss_blur_2_rd12_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 576>(result, bright_weights_normed_gauss_blur_2_rd12_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd13_res = bright_weights_normed_gauss_blur_2_rd13_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 576>(result, bright_weights_normed_gauss_blur_2_rd13_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd14_res = bright_weights_normed_gauss_blur_2_rd14_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 576>(result, bright_weights_normed_gauss_blur_2_rd14_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd15_res = bright_weights_normed_gauss_blur_2_rd15_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 576>(result, bright_weights_normed_gauss_blur_2_rd15_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd16_res = bright_weights_normed_gauss_blur_2_rd16_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 576>(result, bright_weights_normed_gauss_blur_2_rd16_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd17_res = bright_weights_normed_gauss_blur_2_rd17_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 576>(result, bright_weights_normed_gauss_blur_2_rd17_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd18_res = bright_weights_normed_gauss_blur_2_rd18_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 576>(result, bright_weights_normed_gauss_blur_2_rd18_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd19_res = bright_weights_normed_gauss_blur_2_rd19_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 576>(result, bright_weights_normed_gauss_blur_2_rd19_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd20_res = bright_weights_normed_gauss_blur_2_rd20_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 576>(result, bright_weights_normed_gauss_blur_2_rd20_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd21_res = bright_weights_normed_gauss_blur_2_rd21_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 576>(result, bright_weights_normed_gauss_blur_2_rd21_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd22_res = bright_weights_normed_gauss_blur_2_rd22_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 576>(result, bright_weights_normed_gauss_blur_2_rd22_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd23_res = bright_weights_normed_gauss_blur_2_rd23_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 576>(result, bright_weights_normed_gauss_blur_2_rd23_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd24_res = bright_weights_normed_gauss_blur_2_rd24_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 576>(result, bright_weights_normed_gauss_blur_2_rd24_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd25_res = bright_weights_normed_gauss_blur_2_rd25_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 576>(result, bright_weights_normed_gauss_blur_2_rd25_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd26_res = bright_weights_normed_gauss_blur_2_rd26_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 576>(result, bright_weights_normed_gauss_blur_2_rd26_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd27_res = bright_weights_normed_gauss_blur_2_rd27_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 576>(result, bright_weights_normed_gauss_blur_2_rd27_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd28_res = bright_weights_normed_gauss_blur_2_rd28_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 576>(result, bright_weights_normed_gauss_blur_2_rd28_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd29_res = bright_weights_normed_gauss_blur_2_rd29_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 576>(result, bright_weights_normed_gauss_blur_2_rd29_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd30_res = bright_weights_normed_gauss_blur_2_rd30_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 576>(result, bright_weights_normed_gauss_blur_2_rd30_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd31_res = bright_weights_normed_gauss_blur_2_rd31_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 576>(result, bright_weights_normed_gauss_blur_2_rd31_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd32_res = bright_weights_normed_gauss_blur_2_rd32_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 576>(result, bright_weights_normed_gauss_blur_2_rd32_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd33_res = bright_weights_normed_gauss_blur_2_rd33_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 576>(result, bright_weights_normed_gauss_blur_2_rd33_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd34_res = bright_weights_normed_gauss_blur_2_rd34_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 576>(result, bright_weights_normed_gauss_blur_2_rd34_res);
	hw_uint<16> bright_weights_normed_gauss_blur_2_rd35_res = bright_weights_normed_gauss_blur_2_rd35_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 576>(result, bright_weights_normed_gauss_blur_2_rd35_res);
	return result;
}

// bright_weights_normed_gauss_ds_1_update_0_write
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2
//	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3
inline void bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write_bundle_write(hw_uint<64>& bright_weights_normed_gauss_ds_1_update_0_write, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write0_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write1_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<32, 47>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write2_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_res = bright_weights_normed_gauss_ds_1_update_0_write.extract<48, 63>();
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_write(bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write3_res, bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
inline hw_uint<64> bright_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(bright_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_1_rd3_res);
	return result;
}

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 270], [-1, 479]}
	// Capacity: 276
	// # of read delays: 6
  // 0, 1, 137, 138, 274, 275
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 135> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 135> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_136() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_137() {
		return f4;
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_273() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_274() {
		return f8;
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-1, 269], [-1, 479]}
	// Capacity: 277
	// # of read delays: 7
  // 0, 1, 2, 138, 139, 275, 276
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 135> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 135> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_137() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_139() {
		return f8;
	}

	inline hw_uint<16> peek_274() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}

	inline hw_uint<16> peek_276() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct bright_weights_normed_gauss_ds_2_cache {
  // Reader addrs...
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 4
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9;
  bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9;
};



inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0);
}

inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_write(hw_uint<16>& bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1);
  bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.push(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1);
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd0_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd0 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_276();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd1_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd1 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_139();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd10_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd10 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd11_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd11 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd12_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd12 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd13_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd13 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd14_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd14 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd15_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd15 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_274();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd16_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd16 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_137();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd17_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd17 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd2_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd2 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_2();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd3_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd3 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd4_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd4 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd5_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd5 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd6_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd6 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd7_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd7 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd8_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd8 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_weights_normed_gauss_blur_3_rd9_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_weights_normed_gauss_blur_3_rd9 read pattern: { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd0_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> bright_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1 = bright_weights_normed_gauss_ds_2.bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

// # of bundles = 3
// bright_weights_normed_gauss_blur_3_update_0_read
//	bright_weights_normed_gauss_blur_3_rd0
//	bright_weights_normed_gauss_blur_3_rd1
//	bright_weights_normed_gauss_blur_3_rd2
//	bright_weights_normed_gauss_blur_3_rd3
//	bright_weights_normed_gauss_blur_3_rd4
//	bright_weights_normed_gauss_blur_3_rd5
//	bright_weights_normed_gauss_blur_3_rd6
//	bright_weights_normed_gauss_blur_3_rd7
//	bright_weights_normed_gauss_blur_3_rd8
//	bright_weights_normed_gauss_blur_3_rd9
//	bright_weights_normed_gauss_blur_3_rd10
//	bright_weights_normed_gauss_blur_3_rd11
//	bright_weights_normed_gauss_blur_3_rd12
//	bright_weights_normed_gauss_blur_3_rd13
//	bright_weights_normed_gauss_blur_3_rd14
//	bright_weights_normed_gauss_blur_3_rd15
//	bright_weights_normed_gauss_blur_3_rd16
//	bright_weights_normed_gauss_blur_3_rd17
inline hw_uint<288> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_blur_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 18
    // bright_weights_normed_gauss_blur_3_rd0
    // bright_weights_normed_gauss_blur_3_rd1
    // bright_weights_normed_gauss_blur_3_rd2
    // bright_weights_normed_gauss_blur_3_rd3
    // bright_weights_normed_gauss_blur_3_rd4
    // bright_weights_normed_gauss_blur_3_rd5
    // bright_weights_normed_gauss_blur_3_rd6
    // bright_weights_normed_gauss_blur_3_rd7
    // bright_weights_normed_gauss_blur_3_rd8
    // bright_weights_normed_gauss_blur_3_rd9
    // bright_weights_normed_gauss_blur_3_rd10
    // bright_weights_normed_gauss_blur_3_rd11
    // bright_weights_normed_gauss_blur_3_rd12
    // bright_weights_normed_gauss_blur_3_rd13
    // bright_weights_normed_gauss_blur_3_rd14
    // bright_weights_normed_gauss_blur_3_rd15
    // bright_weights_normed_gauss_blur_3_rd16
    // bright_weights_normed_gauss_blur_3_rd17

	hw_uint<288> result;
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd0_res = bright_weights_normed_gauss_blur_3_rd0_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 288>(result, bright_weights_normed_gauss_blur_3_rd0_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd1_res = bright_weights_normed_gauss_blur_3_rd1_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 288>(result, bright_weights_normed_gauss_blur_3_rd1_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd2_res = bright_weights_normed_gauss_blur_3_rd2_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 288>(result, bright_weights_normed_gauss_blur_3_rd2_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd3_res = bright_weights_normed_gauss_blur_3_rd3_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 288>(result, bright_weights_normed_gauss_blur_3_rd3_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd4_res = bright_weights_normed_gauss_blur_3_rd4_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 288>(result, bright_weights_normed_gauss_blur_3_rd4_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd5_res = bright_weights_normed_gauss_blur_3_rd5_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 288>(result, bright_weights_normed_gauss_blur_3_rd5_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd6_res = bright_weights_normed_gauss_blur_3_rd6_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 288>(result, bright_weights_normed_gauss_blur_3_rd6_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd7_res = bright_weights_normed_gauss_blur_3_rd7_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 288>(result, bright_weights_normed_gauss_blur_3_rd7_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd8_res = bright_weights_normed_gauss_blur_3_rd8_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 288>(result, bright_weights_normed_gauss_blur_3_rd8_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd9_res = bright_weights_normed_gauss_blur_3_rd9_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 288>(result, bright_weights_normed_gauss_blur_3_rd9_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd10_res = bright_weights_normed_gauss_blur_3_rd10_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 288>(result, bright_weights_normed_gauss_blur_3_rd10_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd11_res = bright_weights_normed_gauss_blur_3_rd11_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 288>(result, bright_weights_normed_gauss_blur_3_rd11_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd12_res = bright_weights_normed_gauss_blur_3_rd12_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 288>(result, bright_weights_normed_gauss_blur_3_rd12_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd13_res = bright_weights_normed_gauss_blur_3_rd13_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 288>(result, bright_weights_normed_gauss_blur_3_rd13_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd14_res = bright_weights_normed_gauss_blur_3_rd14_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 288>(result, bright_weights_normed_gauss_blur_3_rd14_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd15_res = bright_weights_normed_gauss_blur_3_rd15_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 288>(result, bright_weights_normed_gauss_blur_3_rd15_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd16_res = bright_weights_normed_gauss_blur_3_rd16_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 288>(result, bright_weights_normed_gauss_blur_3_rd16_res);
	hw_uint<16> bright_weights_normed_gauss_blur_3_rd17_res = bright_weights_normed_gauss_blur_3_rd17_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 288>(result, bright_weights_normed_gauss_blur_3_rd17_res);
	return result;
}

// bright_weights_normed_gauss_ds_2_update_0_write
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0
//	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1
inline void bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write_bundle_write(hw_uint<32>& bright_weights_normed_gauss_ds_2_update_0_write, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_res = bright_weights_normed_gauss_ds_2_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write0_res, bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_res = bright_weights_normed_gauss_ds_2_update_0_write.extract<16, 31>();
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_write(bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write1_res, bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
inline hw_uint<32> bright_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_2_rd0
    // fused_level_2_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(bright_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_2_rd1_res);
	return result;
}

struct bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct bright_weights_normed_gauss_ds_3_cache {
  // Reader addrs...
    // { fused_level_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 1
  bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
};



inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0);
}

inline hw_uint<16> fused_level_3_rd0_select(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> bright_weights_normed_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 37] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0 = bright_weights_normed_gauss_ds_3.bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// bright_weights_normed_gauss_ds_3_update_0_write
//	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0
inline void bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write_bundle_write(hw_uint<16>& bright_weights_normed_gauss_ds_3_update_0_write, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_res = bright_weights_normed_gauss_ds_3_update_0_write.extract<0, 15>();
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_write(bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write0_res, bright_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
inline hw_uint<16> bright_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_3_rd0

	hw_uint<16> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(bright_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, fused_level_3_rd0_res);
	return result;
}

struct dark_dark_update_0_write0_to_dark_laplace_diff_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write1_to_dark_laplace_diff_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write2_to_dark_laplace_diff_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write3_to_dark_laplace_diff_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write4_to_dark_laplace_diff_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write5_to_dark_laplace_diff_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write6_to_dark_laplace_diff_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write7_to_dark_laplace_diff_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_dark_update_0_write0_merged_banks_10_cache {
	// RAM Box: {[-24, 1096], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 6
  // 0, 1, 141, 142, 282, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 139> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 139> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_140() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_141() {
		return f4;
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_281() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_282() {
		return f8;
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write1_merged_banks_10_cache {
	// RAM Box: {[-23, 1097], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write2_merged_banks_10_cache {
	// RAM Box: {[-22, 1098], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write3_merged_banks_10_cache {
	// RAM Box: {[-21, 1099], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write4_merged_banks_10_cache {
	// RAM Box: {[-20, 1100], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write5_merged_banks_10_cache {
	// RAM Box: {[-19, 1101], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write6_merged_banks_10_cache {
	// RAM Box: {[-18, 1102], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_dark_update_0_write7_merged_banks_10_cache {
	// RAM Box: {[-17, 1103], [-7, 1919]}
	// Capacity: 285
	// # of read delays: 7
  // 0, 1, 2, 142, 143, 283, 284
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 139> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 139> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_143() {
		return f8;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}

	inline hw_uint<16> peek_284() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_cache {
  // Reader addrs...
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_update_0[d0, d1] -> dark[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // # of banks: 16
  dark_dark_update_0_write0_to_dark_laplace_diff_0_rd0_cache dark_dark_update_0_write0_to_dark_laplace_diff_0_rd0;
  dark_dark_update_0_write1_to_dark_laplace_diff_0_rd1_cache dark_dark_update_0_write1_to_dark_laplace_diff_0_rd1;
  dark_dark_update_0_write2_to_dark_laplace_diff_0_rd2_cache dark_dark_update_0_write2_to_dark_laplace_diff_0_rd2;
  dark_dark_update_0_write3_to_dark_laplace_diff_0_rd3_cache dark_dark_update_0_write3_to_dark_laplace_diff_0_rd3;
  dark_dark_update_0_write4_to_dark_laplace_diff_0_rd4_cache dark_dark_update_0_write4_to_dark_laplace_diff_0_rd4;
  dark_dark_update_0_write5_to_dark_laplace_diff_0_rd5_cache dark_dark_update_0_write5_to_dark_laplace_diff_0_rd5;
  dark_dark_update_0_write6_to_dark_laplace_diff_0_rd6_cache dark_dark_update_0_write6_to_dark_laplace_diff_0_rd6;
  dark_dark_update_0_write7_to_dark_laplace_diff_0_rd7_cache dark_dark_update_0_write7_to_dark_laplace_diff_0_rd7;
  dark_dark_update_0_write0_merged_banks_10_cache dark_dark_update_0_write0_merged_banks_10;
  dark_dark_update_0_write1_merged_banks_10_cache dark_dark_update_0_write1_merged_banks_10;
  dark_dark_update_0_write2_merged_banks_10_cache dark_dark_update_0_write2_merged_banks_10;
  dark_dark_update_0_write3_merged_banks_10_cache dark_dark_update_0_write3_merged_banks_10;
  dark_dark_update_0_write4_merged_banks_10_cache dark_dark_update_0_write4_merged_banks_10;
  dark_dark_update_0_write5_merged_banks_10_cache dark_dark_update_0_write5_merged_banks_10;
  dark_dark_update_0_write6_merged_banks_10_cache dark_dark_update_0_write6_merged_banks_10;
  dark_dark_update_0_write7_merged_banks_10_cache dark_dark_update_0_write7_merged_banks_10;
};



inline void dark_dark_update_0_write0_write(hw_uint<16>& dark_dark_update_0_write0, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write0_to_dark_laplace_diff_0_rd0.push(dark_dark_update_0_write0);
  dark.dark_dark_update_0_write0_merged_banks_10.push(dark_dark_update_0_write0);
}

inline void dark_dark_update_0_write1_write(hw_uint<16>& dark_dark_update_0_write1, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write1_to_dark_laplace_diff_0_rd1.push(dark_dark_update_0_write1);
  dark.dark_dark_update_0_write1_merged_banks_10.push(dark_dark_update_0_write1);
}

inline void dark_dark_update_0_write2_write(hw_uint<16>& dark_dark_update_0_write2, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write2_to_dark_laplace_diff_0_rd2.push(dark_dark_update_0_write2);
  dark.dark_dark_update_0_write2_merged_banks_10.push(dark_dark_update_0_write2);
}

inline void dark_dark_update_0_write3_write(hw_uint<16>& dark_dark_update_0_write3, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write3_to_dark_laplace_diff_0_rd3.push(dark_dark_update_0_write3);
  dark.dark_dark_update_0_write3_merged_banks_10.push(dark_dark_update_0_write3);
}

inline void dark_dark_update_0_write4_write(hw_uint<16>& dark_dark_update_0_write4, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write4_to_dark_laplace_diff_0_rd4.push(dark_dark_update_0_write4);
  dark.dark_dark_update_0_write4_merged_banks_10.push(dark_dark_update_0_write4);
}

inline void dark_dark_update_0_write5_write(hw_uint<16>& dark_dark_update_0_write5, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write5_to_dark_laplace_diff_0_rd5.push(dark_dark_update_0_write5);
  dark.dark_dark_update_0_write5_merged_banks_10.push(dark_dark_update_0_write5);
}

inline void dark_dark_update_0_write6_write(hw_uint<16>& dark_dark_update_0_write6, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write6_to_dark_laplace_diff_0_rd6.push(dark_dark_update_0_write6);
  dark.dark_dark_update_0_write6_merged_banks_10.push(dark_dark_update_0_write6);
}

inline void dark_dark_update_0_write7_write(hw_uint<16>& dark_dark_update_0_write7, dark_cache& dark, int d0, int d1, int dynamic_address) {
  dark.dark_dark_update_0_write7_to_dark_laplace_diff_0_rd7.push(dark_dark_update_0_write7);
  dark.dark_dark_update_0_write7_merged_banks_10.push(dark_dark_update_0_write7);
}

inline hw_uint<16> dark_gauss_blur_1_rd0_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd0 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_284();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd1_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd1 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_143();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd10_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd10 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd11_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd11 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd12_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd12 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd13_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd13 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd14_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd14 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd15_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd15 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd16_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd16 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd17_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd17 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd18_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd18 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd19_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd19 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd2_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd2 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_2();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd20_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd20 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd21_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd21 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd22_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd22 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd23_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd23 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd24_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd24 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd25_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd25 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd26_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd26 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd27_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd27 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd28_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd28 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd29_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd29 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd3_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd3 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd30_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd30 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd31_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd31 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd32_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd32 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd33_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd33 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd34_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd34 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd35_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd35 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd36_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd36 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd37_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd37 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd38_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd38 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd39_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd39 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd4_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd4 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd40_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd40 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd41_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd41 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd42_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd42 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd43_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd43 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd44_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd44 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd45_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd45 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd46_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd46 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd47_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd47 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd48_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd48 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd49_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd49 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd5_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd5 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd50_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd50 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd51_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd51 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd52_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd52 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd53_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd53 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd54_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd54 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd55_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd55 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd56_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd56 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd57_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd57 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd58_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd58 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd59_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd59 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd6_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd6 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd60_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd60 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd61_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd61 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd62_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd62 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd63_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd63 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd64_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd64 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd65_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd65 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd66_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd66 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd67_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd67 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd68_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd68 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd69_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd69 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_282();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd7_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd7 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_142();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd70_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd70 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_141();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd71_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd71 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd8_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd8 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_1();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_1_rd9_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_1_rd9 read pattern: { dark_gauss_blur_1_update_0[d0, d1] -> dark[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_283();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd0_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd0 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_to_dark_laplace_diff_0_rd0.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd1_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd1 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_to_dark_laplace_diff_0_rd1.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd2_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd2 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_to_dark_laplace_diff_0_rd2.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd3_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd3 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_to_dark_laplace_diff_0_rd3.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd4_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd4 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_to_dark_laplace_diff_0_rd4.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd5_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd5 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_to_dark_laplace_diff_0_rd5.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd6_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd6 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_to_dark_laplace_diff_0_rd6.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd7_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd7 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_to_dark_laplace_diff_0_rd7.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_dark_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_rd0_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd0 read pattern: { dark_weights_update_0[d0, d1] -> dark[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write0 = dark.dark_dark_update_0_write0_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_rd1_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd1 read pattern: { dark_weights_update_0[d0, d1] -> dark[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write1 = dark.dark_dark_update_0_write1_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_rd2_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd2 read pattern: { dark_weights_update_0[d0, d1] -> dark[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write2 = dark.dark_dark_update_0_write2_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_rd3_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd3 read pattern: { dark_weights_update_0[d0, d1] -> dark[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write3 = dark.dark_dark_update_0_write3_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_rd4_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd4 read pattern: { dark_weights_update_0[d0, d1] -> dark[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write4 = dark.dark_dark_update_0_write4_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_rd5_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd5 read pattern: { dark_weights_update_0[d0, d1] -> dark[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write5 = dark.dark_dark_update_0_write5_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_rd6_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd6 read pattern: { dark_weights_update_0[d0, d1] -> dark[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write6 = dark.dark_dark_update_0_write6_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_rd7_select(dark_cache& dark, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_rd7 read pattern: { dark_weights_update_0[d0, d1] -> dark[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_dark_update_0_write7 = dark.dark_dark_update_0_write7_merged_banks_10.peek_0();
  return value_dark_dark_update_0_write7;
  return 0;
}

// # of bundles = 4
// dark_gauss_blur_1_update_0_read
//	dark_gauss_blur_1_rd0
//	dark_gauss_blur_1_rd1
//	dark_gauss_blur_1_rd2
//	dark_gauss_blur_1_rd3
//	dark_gauss_blur_1_rd4
//	dark_gauss_blur_1_rd5
//	dark_gauss_blur_1_rd6
//	dark_gauss_blur_1_rd7
//	dark_gauss_blur_1_rd8
//	dark_gauss_blur_1_rd9
//	dark_gauss_blur_1_rd10
//	dark_gauss_blur_1_rd11
//	dark_gauss_blur_1_rd12
//	dark_gauss_blur_1_rd13
//	dark_gauss_blur_1_rd14
//	dark_gauss_blur_1_rd15
//	dark_gauss_blur_1_rd16
//	dark_gauss_blur_1_rd17
//	dark_gauss_blur_1_rd18
//	dark_gauss_blur_1_rd19
//	dark_gauss_blur_1_rd20
//	dark_gauss_blur_1_rd21
//	dark_gauss_blur_1_rd22
//	dark_gauss_blur_1_rd23
//	dark_gauss_blur_1_rd24
//	dark_gauss_blur_1_rd25
//	dark_gauss_blur_1_rd26
//	dark_gauss_blur_1_rd27
//	dark_gauss_blur_1_rd28
//	dark_gauss_blur_1_rd29
//	dark_gauss_blur_1_rd30
//	dark_gauss_blur_1_rd31
//	dark_gauss_blur_1_rd32
//	dark_gauss_blur_1_rd33
//	dark_gauss_blur_1_rd34
//	dark_gauss_blur_1_rd35
//	dark_gauss_blur_1_rd36
//	dark_gauss_blur_1_rd37
//	dark_gauss_blur_1_rd38
//	dark_gauss_blur_1_rd39
//	dark_gauss_blur_1_rd40
//	dark_gauss_blur_1_rd41
//	dark_gauss_blur_1_rd42
//	dark_gauss_blur_1_rd43
//	dark_gauss_blur_1_rd44
//	dark_gauss_blur_1_rd45
//	dark_gauss_blur_1_rd46
//	dark_gauss_blur_1_rd47
//	dark_gauss_blur_1_rd48
//	dark_gauss_blur_1_rd49
//	dark_gauss_blur_1_rd50
//	dark_gauss_blur_1_rd51
//	dark_gauss_blur_1_rd52
//	dark_gauss_blur_1_rd53
//	dark_gauss_blur_1_rd54
//	dark_gauss_blur_1_rd55
//	dark_gauss_blur_1_rd56
//	dark_gauss_blur_1_rd57
//	dark_gauss_blur_1_rd58
//	dark_gauss_blur_1_rd59
//	dark_gauss_blur_1_rd60
//	dark_gauss_blur_1_rd61
//	dark_gauss_blur_1_rd62
//	dark_gauss_blur_1_rd63
//	dark_gauss_blur_1_rd64
//	dark_gauss_blur_1_rd65
//	dark_gauss_blur_1_rd66
//	dark_gauss_blur_1_rd67
//	dark_gauss_blur_1_rd68
//	dark_gauss_blur_1_rd69
//	dark_gauss_blur_1_rd70
//	dark_gauss_blur_1_rd71
inline hw_uint<1152> dark_dark_gauss_blur_1_update_0_read_bundle_read(dark_cache& dark, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // dark_gauss_blur_1_rd0
    // dark_gauss_blur_1_rd1
    // dark_gauss_blur_1_rd2
    // dark_gauss_blur_1_rd3
    // dark_gauss_blur_1_rd4
    // dark_gauss_blur_1_rd5
    // dark_gauss_blur_1_rd6
    // dark_gauss_blur_1_rd7
    // dark_gauss_blur_1_rd8
    // dark_gauss_blur_1_rd9
    // dark_gauss_blur_1_rd10
    // dark_gauss_blur_1_rd11
    // dark_gauss_blur_1_rd12
    // dark_gauss_blur_1_rd13
    // dark_gauss_blur_1_rd14
    // dark_gauss_blur_1_rd15
    // dark_gauss_blur_1_rd16
    // dark_gauss_blur_1_rd17
    // dark_gauss_blur_1_rd18
    // dark_gauss_blur_1_rd19
    // dark_gauss_blur_1_rd20
    // dark_gauss_blur_1_rd21
    // dark_gauss_blur_1_rd22
    // dark_gauss_blur_1_rd23
    // dark_gauss_blur_1_rd24
    // dark_gauss_blur_1_rd25
    // dark_gauss_blur_1_rd26
    // dark_gauss_blur_1_rd27
    // dark_gauss_blur_1_rd28
    // dark_gauss_blur_1_rd29
    // dark_gauss_blur_1_rd30
    // dark_gauss_blur_1_rd31
    // dark_gauss_blur_1_rd32
    // dark_gauss_blur_1_rd33
    // dark_gauss_blur_1_rd34
    // dark_gauss_blur_1_rd35
    // dark_gauss_blur_1_rd36
    // dark_gauss_blur_1_rd37
    // dark_gauss_blur_1_rd38
    // dark_gauss_blur_1_rd39
    // dark_gauss_blur_1_rd40
    // dark_gauss_blur_1_rd41
    // dark_gauss_blur_1_rd42
    // dark_gauss_blur_1_rd43
    // dark_gauss_blur_1_rd44
    // dark_gauss_blur_1_rd45
    // dark_gauss_blur_1_rd46
    // dark_gauss_blur_1_rd47
    // dark_gauss_blur_1_rd48
    // dark_gauss_blur_1_rd49
    // dark_gauss_blur_1_rd50
    // dark_gauss_blur_1_rd51
    // dark_gauss_blur_1_rd52
    // dark_gauss_blur_1_rd53
    // dark_gauss_blur_1_rd54
    // dark_gauss_blur_1_rd55
    // dark_gauss_blur_1_rd56
    // dark_gauss_blur_1_rd57
    // dark_gauss_blur_1_rd58
    // dark_gauss_blur_1_rd59
    // dark_gauss_blur_1_rd60
    // dark_gauss_blur_1_rd61
    // dark_gauss_blur_1_rd62
    // dark_gauss_blur_1_rd63
    // dark_gauss_blur_1_rd64
    // dark_gauss_blur_1_rd65
    // dark_gauss_blur_1_rd66
    // dark_gauss_blur_1_rd67
    // dark_gauss_blur_1_rd68
    // dark_gauss_blur_1_rd69
    // dark_gauss_blur_1_rd70
    // dark_gauss_blur_1_rd71

	hw_uint<1152> result;
	hw_uint<16> dark_gauss_blur_1_rd0_res = dark_gauss_blur_1_rd0_select(dark, d0, d1, dynamic_address);
	set_at<0, 1152>(result, dark_gauss_blur_1_rd0_res);
	hw_uint<16> dark_gauss_blur_1_rd1_res = dark_gauss_blur_1_rd1_select(dark, d0, d1, dynamic_address);
	set_at<16, 1152>(result, dark_gauss_blur_1_rd1_res);
	hw_uint<16> dark_gauss_blur_1_rd2_res = dark_gauss_blur_1_rd2_select(dark, d0, d1, dynamic_address);
	set_at<32, 1152>(result, dark_gauss_blur_1_rd2_res);
	hw_uint<16> dark_gauss_blur_1_rd3_res = dark_gauss_blur_1_rd3_select(dark, d0, d1, dynamic_address);
	set_at<48, 1152>(result, dark_gauss_blur_1_rd3_res);
	hw_uint<16> dark_gauss_blur_1_rd4_res = dark_gauss_blur_1_rd4_select(dark, d0, d1, dynamic_address);
	set_at<64, 1152>(result, dark_gauss_blur_1_rd4_res);
	hw_uint<16> dark_gauss_blur_1_rd5_res = dark_gauss_blur_1_rd5_select(dark, d0, d1, dynamic_address);
	set_at<80, 1152>(result, dark_gauss_blur_1_rd5_res);
	hw_uint<16> dark_gauss_blur_1_rd6_res = dark_gauss_blur_1_rd6_select(dark, d0, d1, dynamic_address);
	set_at<96, 1152>(result, dark_gauss_blur_1_rd6_res);
	hw_uint<16> dark_gauss_blur_1_rd7_res = dark_gauss_blur_1_rd7_select(dark, d0, d1, dynamic_address);
	set_at<112, 1152>(result, dark_gauss_blur_1_rd7_res);
	hw_uint<16> dark_gauss_blur_1_rd8_res = dark_gauss_blur_1_rd8_select(dark, d0, d1, dynamic_address);
	set_at<128, 1152>(result, dark_gauss_blur_1_rd8_res);
	hw_uint<16> dark_gauss_blur_1_rd9_res = dark_gauss_blur_1_rd9_select(dark, d0, d1, dynamic_address);
	set_at<144, 1152>(result, dark_gauss_blur_1_rd9_res);
	hw_uint<16> dark_gauss_blur_1_rd10_res = dark_gauss_blur_1_rd10_select(dark, d0, d1, dynamic_address);
	set_at<160, 1152>(result, dark_gauss_blur_1_rd10_res);
	hw_uint<16> dark_gauss_blur_1_rd11_res = dark_gauss_blur_1_rd11_select(dark, d0, d1, dynamic_address);
	set_at<176, 1152>(result, dark_gauss_blur_1_rd11_res);
	hw_uint<16> dark_gauss_blur_1_rd12_res = dark_gauss_blur_1_rd12_select(dark, d0, d1, dynamic_address);
	set_at<192, 1152>(result, dark_gauss_blur_1_rd12_res);
	hw_uint<16> dark_gauss_blur_1_rd13_res = dark_gauss_blur_1_rd13_select(dark, d0, d1, dynamic_address);
	set_at<208, 1152>(result, dark_gauss_blur_1_rd13_res);
	hw_uint<16> dark_gauss_blur_1_rd14_res = dark_gauss_blur_1_rd14_select(dark, d0, d1, dynamic_address);
	set_at<224, 1152>(result, dark_gauss_blur_1_rd14_res);
	hw_uint<16> dark_gauss_blur_1_rd15_res = dark_gauss_blur_1_rd15_select(dark, d0, d1, dynamic_address);
	set_at<240, 1152>(result, dark_gauss_blur_1_rd15_res);
	hw_uint<16> dark_gauss_blur_1_rd16_res = dark_gauss_blur_1_rd16_select(dark, d0, d1, dynamic_address);
	set_at<256, 1152>(result, dark_gauss_blur_1_rd16_res);
	hw_uint<16> dark_gauss_blur_1_rd17_res = dark_gauss_blur_1_rd17_select(dark, d0, d1, dynamic_address);
	set_at<272, 1152>(result, dark_gauss_blur_1_rd17_res);
	hw_uint<16> dark_gauss_blur_1_rd18_res = dark_gauss_blur_1_rd18_select(dark, d0, d1, dynamic_address);
	set_at<288, 1152>(result, dark_gauss_blur_1_rd18_res);
	hw_uint<16> dark_gauss_blur_1_rd19_res = dark_gauss_blur_1_rd19_select(dark, d0, d1, dynamic_address);
	set_at<304, 1152>(result, dark_gauss_blur_1_rd19_res);
	hw_uint<16> dark_gauss_blur_1_rd20_res = dark_gauss_blur_1_rd20_select(dark, d0, d1, dynamic_address);
	set_at<320, 1152>(result, dark_gauss_blur_1_rd20_res);
	hw_uint<16> dark_gauss_blur_1_rd21_res = dark_gauss_blur_1_rd21_select(dark, d0, d1, dynamic_address);
	set_at<336, 1152>(result, dark_gauss_blur_1_rd21_res);
	hw_uint<16> dark_gauss_blur_1_rd22_res = dark_gauss_blur_1_rd22_select(dark, d0, d1, dynamic_address);
	set_at<352, 1152>(result, dark_gauss_blur_1_rd22_res);
	hw_uint<16> dark_gauss_blur_1_rd23_res = dark_gauss_blur_1_rd23_select(dark, d0, d1, dynamic_address);
	set_at<368, 1152>(result, dark_gauss_blur_1_rd23_res);
	hw_uint<16> dark_gauss_blur_1_rd24_res = dark_gauss_blur_1_rd24_select(dark, d0, d1, dynamic_address);
	set_at<384, 1152>(result, dark_gauss_blur_1_rd24_res);
	hw_uint<16> dark_gauss_blur_1_rd25_res = dark_gauss_blur_1_rd25_select(dark, d0, d1, dynamic_address);
	set_at<400, 1152>(result, dark_gauss_blur_1_rd25_res);
	hw_uint<16> dark_gauss_blur_1_rd26_res = dark_gauss_blur_1_rd26_select(dark, d0, d1, dynamic_address);
	set_at<416, 1152>(result, dark_gauss_blur_1_rd26_res);
	hw_uint<16> dark_gauss_blur_1_rd27_res = dark_gauss_blur_1_rd27_select(dark, d0, d1, dynamic_address);
	set_at<432, 1152>(result, dark_gauss_blur_1_rd27_res);
	hw_uint<16> dark_gauss_blur_1_rd28_res = dark_gauss_blur_1_rd28_select(dark, d0, d1, dynamic_address);
	set_at<448, 1152>(result, dark_gauss_blur_1_rd28_res);
	hw_uint<16> dark_gauss_blur_1_rd29_res = dark_gauss_blur_1_rd29_select(dark, d0, d1, dynamic_address);
	set_at<464, 1152>(result, dark_gauss_blur_1_rd29_res);
	hw_uint<16> dark_gauss_blur_1_rd30_res = dark_gauss_blur_1_rd30_select(dark, d0, d1, dynamic_address);
	set_at<480, 1152>(result, dark_gauss_blur_1_rd30_res);
	hw_uint<16> dark_gauss_blur_1_rd31_res = dark_gauss_blur_1_rd31_select(dark, d0, d1, dynamic_address);
	set_at<496, 1152>(result, dark_gauss_blur_1_rd31_res);
	hw_uint<16> dark_gauss_blur_1_rd32_res = dark_gauss_blur_1_rd32_select(dark, d0, d1, dynamic_address);
	set_at<512, 1152>(result, dark_gauss_blur_1_rd32_res);
	hw_uint<16> dark_gauss_blur_1_rd33_res = dark_gauss_blur_1_rd33_select(dark, d0, d1, dynamic_address);
	set_at<528, 1152>(result, dark_gauss_blur_1_rd33_res);
	hw_uint<16> dark_gauss_blur_1_rd34_res = dark_gauss_blur_1_rd34_select(dark, d0, d1, dynamic_address);
	set_at<544, 1152>(result, dark_gauss_blur_1_rd34_res);
	hw_uint<16> dark_gauss_blur_1_rd35_res = dark_gauss_blur_1_rd35_select(dark, d0, d1, dynamic_address);
	set_at<560, 1152>(result, dark_gauss_blur_1_rd35_res);
	hw_uint<16> dark_gauss_blur_1_rd36_res = dark_gauss_blur_1_rd36_select(dark, d0, d1, dynamic_address);
	set_at<576, 1152>(result, dark_gauss_blur_1_rd36_res);
	hw_uint<16> dark_gauss_blur_1_rd37_res = dark_gauss_blur_1_rd37_select(dark, d0, d1, dynamic_address);
	set_at<592, 1152>(result, dark_gauss_blur_1_rd37_res);
	hw_uint<16> dark_gauss_blur_1_rd38_res = dark_gauss_blur_1_rd38_select(dark, d0, d1, dynamic_address);
	set_at<608, 1152>(result, dark_gauss_blur_1_rd38_res);
	hw_uint<16> dark_gauss_blur_1_rd39_res = dark_gauss_blur_1_rd39_select(dark, d0, d1, dynamic_address);
	set_at<624, 1152>(result, dark_gauss_blur_1_rd39_res);
	hw_uint<16> dark_gauss_blur_1_rd40_res = dark_gauss_blur_1_rd40_select(dark, d0, d1, dynamic_address);
	set_at<640, 1152>(result, dark_gauss_blur_1_rd40_res);
	hw_uint<16> dark_gauss_blur_1_rd41_res = dark_gauss_blur_1_rd41_select(dark, d0, d1, dynamic_address);
	set_at<656, 1152>(result, dark_gauss_blur_1_rd41_res);
	hw_uint<16> dark_gauss_blur_1_rd42_res = dark_gauss_blur_1_rd42_select(dark, d0, d1, dynamic_address);
	set_at<672, 1152>(result, dark_gauss_blur_1_rd42_res);
	hw_uint<16> dark_gauss_blur_1_rd43_res = dark_gauss_blur_1_rd43_select(dark, d0, d1, dynamic_address);
	set_at<688, 1152>(result, dark_gauss_blur_1_rd43_res);
	hw_uint<16> dark_gauss_blur_1_rd44_res = dark_gauss_blur_1_rd44_select(dark, d0, d1, dynamic_address);
	set_at<704, 1152>(result, dark_gauss_blur_1_rd44_res);
	hw_uint<16> dark_gauss_blur_1_rd45_res = dark_gauss_blur_1_rd45_select(dark, d0, d1, dynamic_address);
	set_at<720, 1152>(result, dark_gauss_blur_1_rd45_res);
	hw_uint<16> dark_gauss_blur_1_rd46_res = dark_gauss_blur_1_rd46_select(dark, d0, d1, dynamic_address);
	set_at<736, 1152>(result, dark_gauss_blur_1_rd46_res);
	hw_uint<16> dark_gauss_blur_1_rd47_res = dark_gauss_blur_1_rd47_select(dark, d0, d1, dynamic_address);
	set_at<752, 1152>(result, dark_gauss_blur_1_rd47_res);
	hw_uint<16> dark_gauss_blur_1_rd48_res = dark_gauss_blur_1_rd48_select(dark, d0, d1, dynamic_address);
	set_at<768, 1152>(result, dark_gauss_blur_1_rd48_res);
	hw_uint<16> dark_gauss_blur_1_rd49_res = dark_gauss_blur_1_rd49_select(dark, d0, d1, dynamic_address);
	set_at<784, 1152>(result, dark_gauss_blur_1_rd49_res);
	hw_uint<16> dark_gauss_blur_1_rd50_res = dark_gauss_blur_1_rd50_select(dark, d0, d1, dynamic_address);
	set_at<800, 1152>(result, dark_gauss_blur_1_rd50_res);
	hw_uint<16> dark_gauss_blur_1_rd51_res = dark_gauss_blur_1_rd51_select(dark, d0, d1, dynamic_address);
	set_at<816, 1152>(result, dark_gauss_blur_1_rd51_res);
	hw_uint<16> dark_gauss_blur_1_rd52_res = dark_gauss_blur_1_rd52_select(dark, d0, d1, dynamic_address);
	set_at<832, 1152>(result, dark_gauss_blur_1_rd52_res);
	hw_uint<16> dark_gauss_blur_1_rd53_res = dark_gauss_blur_1_rd53_select(dark, d0, d1, dynamic_address);
	set_at<848, 1152>(result, dark_gauss_blur_1_rd53_res);
	hw_uint<16> dark_gauss_blur_1_rd54_res = dark_gauss_blur_1_rd54_select(dark, d0, d1, dynamic_address);
	set_at<864, 1152>(result, dark_gauss_blur_1_rd54_res);
	hw_uint<16> dark_gauss_blur_1_rd55_res = dark_gauss_blur_1_rd55_select(dark, d0, d1, dynamic_address);
	set_at<880, 1152>(result, dark_gauss_blur_1_rd55_res);
	hw_uint<16> dark_gauss_blur_1_rd56_res = dark_gauss_blur_1_rd56_select(dark, d0, d1, dynamic_address);
	set_at<896, 1152>(result, dark_gauss_blur_1_rd56_res);
	hw_uint<16> dark_gauss_blur_1_rd57_res = dark_gauss_blur_1_rd57_select(dark, d0, d1, dynamic_address);
	set_at<912, 1152>(result, dark_gauss_blur_1_rd57_res);
	hw_uint<16> dark_gauss_blur_1_rd58_res = dark_gauss_blur_1_rd58_select(dark, d0, d1, dynamic_address);
	set_at<928, 1152>(result, dark_gauss_blur_1_rd58_res);
	hw_uint<16> dark_gauss_blur_1_rd59_res = dark_gauss_blur_1_rd59_select(dark, d0, d1, dynamic_address);
	set_at<944, 1152>(result, dark_gauss_blur_1_rd59_res);
	hw_uint<16> dark_gauss_blur_1_rd60_res = dark_gauss_blur_1_rd60_select(dark, d0, d1, dynamic_address);
	set_at<960, 1152>(result, dark_gauss_blur_1_rd60_res);
	hw_uint<16> dark_gauss_blur_1_rd61_res = dark_gauss_blur_1_rd61_select(dark, d0, d1, dynamic_address);
	set_at<976, 1152>(result, dark_gauss_blur_1_rd61_res);
	hw_uint<16> dark_gauss_blur_1_rd62_res = dark_gauss_blur_1_rd62_select(dark, d0, d1, dynamic_address);
	set_at<992, 1152>(result, dark_gauss_blur_1_rd62_res);
	hw_uint<16> dark_gauss_blur_1_rd63_res = dark_gauss_blur_1_rd63_select(dark, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, dark_gauss_blur_1_rd63_res);
	hw_uint<16> dark_gauss_blur_1_rd64_res = dark_gauss_blur_1_rd64_select(dark, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, dark_gauss_blur_1_rd64_res);
	hw_uint<16> dark_gauss_blur_1_rd65_res = dark_gauss_blur_1_rd65_select(dark, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, dark_gauss_blur_1_rd65_res);
	hw_uint<16> dark_gauss_blur_1_rd66_res = dark_gauss_blur_1_rd66_select(dark, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, dark_gauss_blur_1_rd66_res);
	hw_uint<16> dark_gauss_blur_1_rd67_res = dark_gauss_blur_1_rd67_select(dark, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, dark_gauss_blur_1_rd67_res);
	hw_uint<16> dark_gauss_blur_1_rd68_res = dark_gauss_blur_1_rd68_select(dark, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, dark_gauss_blur_1_rd68_res);
	hw_uint<16> dark_gauss_blur_1_rd69_res = dark_gauss_blur_1_rd69_select(dark, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, dark_gauss_blur_1_rd69_res);
	hw_uint<16> dark_gauss_blur_1_rd70_res = dark_gauss_blur_1_rd70_select(dark, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, dark_gauss_blur_1_rd70_res);
	hw_uint<16> dark_gauss_blur_1_rd71_res = dark_gauss_blur_1_rd71_select(dark, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, dark_gauss_blur_1_rd71_res);
	return result;
}

// dark_laplace_diff_0_update_0_read
//	dark_laplace_diff_0_rd0
//	dark_laplace_diff_0_rd1
//	dark_laplace_diff_0_rd2
//	dark_laplace_diff_0_rd3
//	dark_laplace_diff_0_rd4
//	dark_laplace_diff_0_rd5
//	dark_laplace_diff_0_rd6
//	dark_laplace_diff_0_rd7
inline hw_uint<128> dark_dark_laplace_diff_0_update_0_read_bundle_read(dark_cache& dark, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_laplace_diff_0_rd0
    // dark_laplace_diff_0_rd1
    // dark_laplace_diff_0_rd2
    // dark_laplace_diff_0_rd3
    // dark_laplace_diff_0_rd4
    // dark_laplace_diff_0_rd5
    // dark_laplace_diff_0_rd6
    // dark_laplace_diff_0_rd7

	hw_uint<128> result;
	hw_uint<16> dark_laplace_diff_0_rd0_res = dark_laplace_diff_0_rd0_select(dark, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_laplace_diff_0_rd0_res);
	hw_uint<16> dark_laplace_diff_0_rd1_res = dark_laplace_diff_0_rd1_select(dark, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_laplace_diff_0_rd1_res);
	hw_uint<16> dark_laplace_diff_0_rd2_res = dark_laplace_diff_0_rd2_select(dark, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_laplace_diff_0_rd2_res);
	hw_uint<16> dark_laplace_diff_0_rd3_res = dark_laplace_diff_0_rd3_select(dark, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_laplace_diff_0_rd3_res);
	hw_uint<16> dark_laplace_diff_0_rd4_res = dark_laplace_diff_0_rd4_select(dark, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_laplace_diff_0_rd4_res);
	hw_uint<16> dark_laplace_diff_0_rd5_res = dark_laplace_diff_0_rd5_select(dark, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_laplace_diff_0_rd5_res);
	hw_uint<16> dark_laplace_diff_0_rd6_res = dark_laplace_diff_0_rd6_select(dark, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_laplace_diff_0_rd6_res);
	hw_uint<16> dark_laplace_diff_0_rd7_res = dark_laplace_diff_0_rd7_select(dark, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_laplace_diff_0_rd7_res);
	return result;
}

// dark_update_0_write
//	dark_dark_update_0_write0
//	dark_dark_update_0_write1
//	dark_dark_update_0_write2
//	dark_dark_update_0_write3
//	dark_dark_update_0_write4
//	dark_dark_update_0_write5
//	dark_dark_update_0_write6
//	dark_dark_update_0_write7
inline void dark_dark_update_0_write_bundle_write(hw_uint<128>& dark_update_0_write, dark_cache& dark, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_dark_update_0_write0_res = dark_update_0_write.extract<0, 15>();
	dark_dark_update_0_write0_write(dark_dark_update_0_write0_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write1_res = dark_update_0_write.extract<16, 31>();
	dark_dark_update_0_write1_write(dark_dark_update_0_write1_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write2_res = dark_update_0_write.extract<32, 47>();
	dark_dark_update_0_write2_write(dark_dark_update_0_write2_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write3_res = dark_update_0_write.extract<48, 63>();
	dark_dark_update_0_write3_write(dark_dark_update_0_write3_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write4_res = dark_update_0_write.extract<64, 79>();
	dark_dark_update_0_write4_write(dark_dark_update_0_write4_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write5_res = dark_update_0_write.extract<80, 95>();
	dark_dark_update_0_write5_write(dark_dark_update_0_write5_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write6_res = dark_update_0_write.extract<96, 111>();
	dark_dark_update_0_write6_write(dark_dark_update_0_write6_res, dark, d0, d1, dynamic_address);
	hw_uint<16> dark_dark_update_0_write7_res = dark_update_0_write.extract<112, 127>();
	dark_dark_update_0_write7_write(dark_dark_update_0_write7_res, dark, d0, d1, dynamic_address);
}

// dark_weights_update_0_read
//	dark_weights_rd0
//	dark_weights_rd1
//	dark_weights_rd2
//	dark_weights_rd3
//	dark_weights_rd4
//	dark_weights_rd5
//	dark_weights_rd6
//	dark_weights_rd7
inline hw_uint<128> dark_dark_weights_update_0_read_bundle_read(dark_cache& dark, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_weights_rd0
    // dark_weights_rd1
    // dark_weights_rd2
    // dark_weights_rd3
    // dark_weights_rd4
    // dark_weights_rd5
    // dark_weights_rd6
    // dark_weights_rd7

	hw_uint<128> result;
	hw_uint<16> dark_weights_rd0_res = dark_weights_rd0_select(dark, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_weights_rd0_res);
	hw_uint<16> dark_weights_rd1_res = dark_weights_rd1_select(dark, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_weights_rd1_res);
	hw_uint<16> dark_weights_rd2_res = dark_weights_rd2_select(dark, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_weights_rd2_res);
	hw_uint<16> dark_weights_rd3_res = dark_weights_rd3_select(dark, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_weights_rd3_res);
	hw_uint<16> dark_weights_rd4_res = dark_weights_rd4_select(dark, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_weights_rd4_res);
	hw_uint<16> dark_weights_rd5_res = dark_weights_rd5_select(dark, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_weights_rd5_res);
	hw_uint<16> dark_weights_rd6_res = dark_weights_rd6_select(dark, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_weights_rd6_res);
	hw_uint<16> dark_weights_rd7_res = dark_weights_rd7_select(dark, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_weights_rd7_res);
	return result;
}

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0_cache {
	// RAM Box: {[-16, 1088], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1_cache {
	// RAM Box: {[-14, 1090], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2_cache {
	// RAM Box: {[-12, 1092], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3_cache {
	// RAM Box: {[-10, 1094], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_1_cache {
  // Reader addrs...
    // { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // # of banks: 4
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2;
  dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3_cache dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3;
};



inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3.push(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6);
}

inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_write(hw_uint<16>& dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_gauss_ds_1_rd0_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd0 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_to_dark_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd1_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd1 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_to_dark_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd2_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd2 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_to_dark_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_1_rd3_select(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_1_rd3 read pattern: { dark_gauss_ds_1_update_0[d0, d1] -> dark_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6 = dark_gauss_blur_1.dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_to_dark_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_1_update_0_write
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6
//	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7
inline void dark_gauss_blur_1_dark_gauss_blur_1_update_0_write_bundle_write(hw_uint<128>& dark_gauss_blur_1_update_0_write, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_res = dark_gauss_blur_1_update_0_write.extract<0, 15>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write0_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_res = dark_gauss_blur_1_update_0_write.extract<16, 31>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write1_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_res = dark_gauss_blur_1_update_0_write.extract<32, 47>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write2_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_res = dark_gauss_blur_1_update_0_write.extract<48, 63>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write3_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_res = dark_gauss_blur_1_update_0_write.extract<64, 79>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write4_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_res = dark_gauss_blur_1_update_0_write.extract<80, 95>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write5_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_res = dark_gauss_blur_1_update_0_write.extract<96, 111>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write6_res, dark_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_res = dark_gauss_blur_1_update_0_write.extract<112, 127>();
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_write(dark_gauss_blur_1_dark_gauss_blur_1_update_0_write7_res, dark_gauss_blur_1, d0, d1, dynamic_address);
}

// dark_gauss_ds_1_update_0_read
//	dark_gauss_ds_1_rd0
//	dark_gauss_ds_1_rd1
//	dark_gauss_ds_1_rd2
//	dark_gauss_ds_1_rd3
inline hw_uint<64> dark_gauss_blur_1_dark_gauss_ds_1_update_0_read_bundle_read(dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_gauss_ds_1_rd0
    // dark_gauss_ds_1_rd1
    // dark_gauss_ds_1_rd2
    // dark_gauss_ds_1_rd3

	hw_uint<64> result;
	hw_uint<16> dark_gauss_ds_1_rd0_res = dark_gauss_ds_1_rd0_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_gauss_ds_1_rd0_res);
	hw_uint<16> dark_gauss_ds_1_rd1_res = dark_gauss_ds_1_rd1_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_gauss_ds_1_rd1_res);
	hw_uint<16> dark_gauss_ds_1_rd2_res = dark_gauss_ds_1_rd2_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_gauss_ds_1_rd2_res);
	hw_uint<16> dark_gauss_ds_1_rd3_res = dark_gauss_ds_1_rd3_select(dark_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_gauss_ds_1_rd3_res);
	return result;
}

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0_cache {
	// RAM Box: {[-4, 540], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1_cache {
	// RAM Box: {[-2, 542], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_2_cache {
  // Reader addrs...
    // { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
    // { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // # of banks: 2
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0;
  dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1_cache dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1;
};



inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0);
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1.push(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2);
}

inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_write(hw_uint<16>& dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_gauss_ds_2_rd0_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_rd0 read pattern: { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_to_dark_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_ds_2_rd1_select(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_2_rd1 read pattern: { dark_gauss_ds_2_update_0[d0, d1] -> dark_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2 = dark_gauss_blur_2.dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_to_dark_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_2_update_0_write
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2
//	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3
inline void dark_gauss_blur_2_dark_gauss_blur_2_update_0_write_bundle_write(hw_uint<64>& dark_gauss_blur_2_update_0_write, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_res = dark_gauss_blur_2_update_0_write.extract<0, 15>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write0_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_res = dark_gauss_blur_2_update_0_write.extract<16, 31>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write1_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_res = dark_gauss_blur_2_update_0_write.extract<32, 47>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write2_res, dark_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_res = dark_gauss_blur_2_update_0_write.extract<48, 63>();
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_write(dark_gauss_blur_2_dark_gauss_blur_2_update_0_write3_res, dark_gauss_blur_2, d0, d1, dynamic_address);
}

// dark_gauss_ds_2_update_0_read
//	dark_gauss_ds_2_rd0
//	dark_gauss_ds_2_rd1
inline hw_uint<32> dark_gauss_blur_2_dark_gauss_ds_2_update_0_read_bundle_read(dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_gauss_ds_2_rd0
    // dark_gauss_ds_2_rd1

	hw_uint<32> result;
	hw_uint<16> dark_gauss_ds_2_rd0_res = dark_gauss_ds_2_rd0_select(dark_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_gauss_ds_2_rd0_res);
	hw_uint<16> dark_gauss_ds_2_rd1_res = dark_gauss_ds_2_rd1_select(dark_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_gauss_ds_2_rd1_res);
	return result;
}

struct dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 268], [0, 478]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_blur_3_cache {
  // Reader addrs...
    // { dark_gauss_ds_3_update_0[d0, d1] -> dark_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 1
  dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0_cache dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0;
};



inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
  dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0.push(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0);
}

inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_write(hw_uint<16>& dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_gauss_ds_3_rd0_select(dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_ds_3_rd0 read pattern: { dark_gauss_ds_3_update_0[d0, d1] -> dark_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { dark_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 26] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  auto value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0 = dark_gauss_blur_3.dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_to_dark_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// dark_gauss_blur_3_update_0_write
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0
//	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1
inline void dark_gauss_blur_3_dark_gauss_blur_3_update_0_write_bundle_write(hw_uint<32>& dark_gauss_blur_3_update_0_write, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_res = dark_gauss_blur_3_update_0_write.extract<0, 15>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write0_res, dark_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_res = dark_gauss_blur_3_update_0_write.extract<16, 31>();
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_write(dark_gauss_blur_3_dark_gauss_blur_3_update_0_write1_res, dark_gauss_blur_3, d0, d1, dynamic_address);
}

// dark_gauss_ds_3_update_0_read
//	dark_gauss_ds_3_rd0
inline hw_uint<16> dark_gauss_blur_3_dark_gauss_ds_3_update_0_read_bundle_read(dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_gauss_ds_3_rd0

	hw_uint<16> result;
	hw_uint<16> dark_gauss_ds_3_rd0_res = dark_gauss_ds_3_rd0_select(dark_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, dark_gauss_ds_3_rd0_res);
	return result;
}

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_diff_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_diff_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_diff_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_diff_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 137
	// # of read delays: 136
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
	fifo<hw_uint<16>, 137> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(136 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[-4, 544], [-3, 959]}
	// Capacity: 280
	// # of read delays: 6
  // 0, 1, 139, 140, 278, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 137> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 137> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_138() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_139() {
		return f4;
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_277() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_278() {
		return f8;
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-3, 541], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[-2, 542], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[-5, 543], [-3, 959]}
	// Capacity: 281
	// # of read delays: 7
  // 0, 1, 2, 140, 141, 279, 280
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 137> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 137> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_141() {
		return f8;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}

	inline hw_uint<16> peek_280() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_1_cache {
  // Reader addrs...
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 16
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_diff_1_rd0_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_diff_1_rd0;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_diff_1_rd1_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_diff_1_rd1;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_diff_1_rd2_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_diff_1_rd2;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_diff_1_rd3_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_diff_1_rd3;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9;
  dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9_cache dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9;
};



inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_diff_1_rd0.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_diff_1_rd1.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_diff_1_rd2.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2);
}

inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_write(hw_uint<16>& dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_diff_1_rd3.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
  dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.push(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3);
}

inline hw_uint<16> dark_gauss_blur_2_rd0_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd0 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_280();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd1_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd1 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_141();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd10_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd10 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd11_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd11 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd12_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd12 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd13_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd13 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd14_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd14 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd15_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd15 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd16_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd16 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd17_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd17 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd18_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd18 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd19_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd19 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd2_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd2 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_2();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd20_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd20 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd21_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd21 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd22_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd22 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd23_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd23 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd24_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd24 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd25_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd25 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd26_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd26 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd27_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd27 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd28_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd28 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd29_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd29 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd3_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd3 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd30_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd30 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd31_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd31 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd32_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd32 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd33_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd33 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_278();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd34_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd34 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_139();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd35_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd35 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_0();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd4_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd4 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd5_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd5 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd6_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd6 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd7_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd7 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd8_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd8 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_2_rd9_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_2_rd9 read pattern: { dark_gauss_blur_2_update_0[d0, d1] -> dark_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd0_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd0 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_diff_1_rd0.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd1_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd1 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_diff_1_rd1.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd2_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd2 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_diff_1_rd2.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd3_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd3 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_diff_1_rd3.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd0_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd0 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd1_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd1 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_to_dark_laplace_us_0_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd2_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd2 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd3_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd3 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_to_dark_laplace_us_0_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd4_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd4 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd5_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd5 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_to_dark_laplace_us_0_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd6_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd6 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_us_0_rd7_select(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_0_rd7 read pattern: { dark_laplace_us_0_update_0[d0, d1] -> dark_gauss_ds_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3 = dark_gauss_ds_1.dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_to_dark_laplace_us_0_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((136 - d0)) : 0);
  return value_dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3;
  return 0;
}

// # of bundles = 4
// dark_gauss_blur_2_update_0_read
//	dark_gauss_blur_2_rd0
//	dark_gauss_blur_2_rd1
//	dark_gauss_blur_2_rd2
//	dark_gauss_blur_2_rd3
//	dark_gauss_blur_2_rd4
//	dark_gauss_blur_2_rd5
//	dark_gauss_blur_2_rd6
//	dark_gauss_blur_2_rd7
//	dark_gauss_blur_2_rd8
//	dark_gauss_blur_2_rd9
//	dark_gauss_blur_2_rd10
//	dark_gauss_blur_2_rd11
//	dark_gauss_blur_2_rd12
//	dark_gauss_blur_2_rd13
//	dark_gauss_blur_2_rd14
//	dark_gauss_blur_2_rd15
//	dark_gauss_blur_2_rd16
//	dark_gauss_blur_2_rd17
//	dark_gauss_blur_2_rd18
//	dark_gauss_blur_2_rd19
//	dark_gauss_blur_2_rd20
//	dark_gauss_blur_2_rd21
//	dark_gauss_blur_2_rd22
//	dark_gauss_blur_2_rd23
//	dark_gauss_blur_2_rd24
//	dark_gauss_blur_2_rd25
//	dark_gauss_blur_2_rd26
//	dark_gauss_blur_2_rd27
//	dark_gauss_blur_2_rd28
//	dark_gauss_blur_2_rd29
//	dark_gauss_blur_2_rd30
//	dark_gauss_blur_2_rd31
//	dark_gauss_blur_2_rd32
//	dark_gauss_blur_2_rd33
//	dark_gauss_blur_2_rd34
//	dark_gauss_blur_2_rd35
inline hw_uint<576> dark_gauss_ds_1_dark_gauss_blur_2_update_0_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // dark_gauss_blur_2_rd0
    // dark_gauss_blur_2_rd1
    // dark_gauss_blur_2_rd2
    // dark_gauss_blur_2_rd3
    // dark_gauss_blur_2_rd4
    // dark_gauss_blur_2_rd5
    // dark_gauss_blur_2_rd6
    // dark_gauss_blur_2_rd7
    // dark_gauss_blur_2_rd8
    // dark_gauss_blur_2_rd9
    // dark_gauss_blur_2_rd10
    // dark_gauss_blur_2_rd11
    // dark_gauss_blur_2_rd12
    // dark_gauss_blur_2_rd13
    // dark_gauss_blur_2_rd14
    // dark_gauss_blur_2_rd15
    // dark_gauss_blur_2_rd16
    // dark_gauss_blur_2_rd17
    // dark_gauss_blur_2_rd18
    // dark_gauss_blur_2_rd19
    // dark_gauss_blur_2_rd20
    // dark_gauss_blur_2_rd21
    // dark_gauss_blur_2_rd22
    // dark_gauss_blur_2_rd23
    // dark_gauss_blur_2_rd24
    // dark_gauss_blur_2_rd25
    // dark_gauss_blur_2_rd26
    // dark_gauss_blur_2_rd27
    // dark_gauss_blur_2_rd28
    // dark_gauss_blur_2_rd29
    // dark_gauss_blur_2_rd30
    // dark_gauss_blur_2_rd31
    // dark_gauss_blur_2_rd32
    // dark_gauss_blur_2_rd33
    // dark_gauss_blur_2_rd34
    // dark_gauss_blur_2_rd35

	hw_uint<576> result;
	hw_uint<16> dark_gauss_blur_2_rd0_res = dark_gauss_blur_2_rd0_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 576>(result, dark_gauss_blur_2_rd0_res);
	hw_uint<16> dark_gauss_blur_2_rd1_res = dark_gauss_blur_2_rd1_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 576>(result, dark_gauss_blur_2_rd1_res);
	hw_uint<16> dark_gauss_blur_2_rd2_res = dark_gauss_blur_2_rd2_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 576>(result, dark_gauss_blur_2_rd2_res);
	hw_uint<16> dark_gauss_blur_2_rd3_res = dark_gauss_blur_2_rd3_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 576>(result, dark_gauss_blur_2_rd3_res);
	hw_uint<16> dark_gauss_blur_2_rd4_res = dark_gauss_blur_2_rd4_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 576>(result, dark_gauss_blur_2_rd4_res);
	hw_uint<16> dark_gauss_blur_2_rd5_res = dark_gauss_blur_2_rd5_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 576>(result, dark_gauss_blur_2_rd5_res);
	hw_uint<16> dark_gauss_blur_2_rd6_res = dark_gauss_blur_2_rd6_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 576>(result, dark_gauss_blur_2_rd6_res);
	hw_uint<16> dark_gauss_blur_2_rd7_res = dark_gauss_blur_2_rd7_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 576>(result, dark_gauss_blur_2_rd7_res);
	hw_uint<16> dark_gauss_blur_2_rd8_res = dark_gauss_blur_2_rd8_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 576>(result, dark_gauss_blur_2_rd8_res);
	hw_uint<16> dark_gauss_blur_2_rd9_res = dark_gauss_blur_2_rd9_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 576>(result, dark_gauss_blur_2_rd9_res);
	hw_uint<16> dark_gauss_blur_2_rd10_res = dark_gauss_blur_2_rd10_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 576>(result, dark_gauss_blur_2_rd10_res);
	hw_uint<16> dark_gauss_blur_2_rd11_res = dark_gauss_blur_2_rd11_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 576>(result, dark_gauss_blur_2_rd11_res);
	hw_uint<16> dark_gauss_blur_2_rd12_res = dark_gauss_blur_2_rd12_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 576>(result, dark_gauss_blur_2_rd12_res);
	hw_uint<16> dark_gauss_blur_2_rd13_res = dark_gauss_blur_2_rd13_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 576>(result, dark_gauss_blur_2_rd13_res);
	hw_uint<16> dark_gauss_blur_2_rd14_res = dark_gauss_blur_2_rd14_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 576>(result, dark_gauss_blur_2_rd14_res);
	hw_uint<16> dark_gauss_blur_2_rd15_res = dark_gauss_blur_2_rd15_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 576>(result, dark_gauss_blur_2_rd15_res);
	hw_uint<16> dark_gauss_blur_2_rd16_res = dark_gauss_blur_2_rd16_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 576>(result, dark_gauss_blur_2_rd16_res);
	hw_uint<16> dark_gauss_blur_2_rd17_res = dark_gauss_blur_2_rd17_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 576>(result, dark_gauss_blur_2_rd17_res);
	hw_uint<16> dark_gauss_blur_2_rd18_res = dark_gauss_blur_2_rd18_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 576>(result, dark_gauss_blur_2_rd18_res);
	hw_uint<16> dark_gauss_blur_2_rd19_res = dark_gauss_blur_2_rd19_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 576>(result, dark_gauss_blur_2_rd19_res);
	hw_uint<16> dark_gauss_blur_2_rd20_res = dark_gauss_blur_2_rd20_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 576>(result, dark_gauss_blur_2_rd20_res);
	hw_uint<16> dark_gauss_blur_2_rd21_res = dark_gauss_blur_2_rd21_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 576>(result, dark_gauss_blur_2_rd21_res);
	hw_uint<16> dark_gauss_blur_2_rd22_res = dark_gauss_blur_2_rd22_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 576>(result, dark_gauss_blur_2_rd22_res);
	hw_uint<16> dark_gauss_blur_2_rd23_res = dark_gauss_blur_2_rd23_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 576>(result, dark_gauss_blur_2_rd23_res);
	hw_uint<16> dark_gauss_blur_2_rd24_res = dark_gauss_blur_2_rd24_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 576>(result, dark_gauss_blur_2_rd24_res);
	hw_uint<16> dark_gauss_blur_2_rd25_res = dark_gauss_blur_2_rd25_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 576>(result, dark_gauss_blur_2_rd25_res);
	hw_uint<16> dark_gauss_blur_2_rd26_res = dark_gauss_blur_2_rd26_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 576>(result, dark_gauss_blur_2_rd26_res);
	hw_uint<16> dark_gauss_blur_2_rd27_res = dark_gauss_blur_2_rd27_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 576>(result, dark_gauss_blur_2_rd27_res);
	hw_uint<16> dark_gauss_blur_2_rd28_res = dark_gauss_blur_2_rd28_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 576>(result, dark_gauss_blur_2_rd28_res);
	hw_uint<16> dark_gauss_blur_2_rd29_res = dark_gauss_blur_2_rd29_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 576>(result, dark_gauss_blur_2_rd29_res);
	hw_uint<16> dark_gauss_blur_2_rd30_res = dark_gauss_blur_2_rd30_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 576>(result, dark_gauss_blur_2_rd30_res);
	hw_uint<16> dark_gauss_blur_2_rd31_res = dark_gauss_blur_2_rd31_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 576>(result, dark_gauss_blur_2_rd31_res);
	hw_uint<16> dark_gauss_blur_2_rd32_res = dark_gauss_blur_2_rd32_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 576>(result, dark_gauss_blur_2_rd32_res);
	hw_uint<16> dark_gauss_blur_2_rd33_res = dark_gauss_blur_2_rd33_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 576>(result, dark_gauss_blur_2_rd33_res);
	hw_uint<16> dark_gauss_blur_2_rd34_res = dark_gauss_blur_2_rd34_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 576>(result, dark_gauss_blur_2_rd34_res);
	hw_uint<16> dark_gauss_blur_2_rd35_res = dark_gauss_blur_2_rd35_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 576>(result, dark_gauss_blur_2_rd35_res);
	return result;
}

// dark_gauss_ds_1_update_0_write
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2
//	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3
inline void dark_gauss_ds_1_dark_gauss_ds_1_update_0_write_bundle_write(hw_uint<64>& dark_gauss_ds_1_update_0_write, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_res = dark_gauss_ds_1_update_0_write.extract<0, 15>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write0_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_res = dark_gauss_ds_1_update_0_write.extract<16, 31>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write1_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_res = dark_gauss_ds_1_update_0_write.extract<32, 47>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write2_res, dark_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_res = dark_gauss_ds_1_update_0_write.extract<48, 63>();
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_write(dark_gauss_ds_1_dark_gauss_ds_1_update_0_write3_res, dark_gauss_ds_1, d0, d1, dynamic_address);
}

// dark_laplace_diff_1_update_0_read
//	dark_laplace_diff_1_rd0
//	dark_laplace_diff_1_rd1
//	dark_laplace_diff_1_rd2
//	dark_laplace_diff_1_rd3
inline hw_uint<64> dark_gauss_ds_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_laplace_diff_1_rd0
    // dark_laplace_diff_1_rd1
    // dark_laplace_diff_1_rd2
    // dark_laplace_diff_1_rd3

	hw_uint<64> result;
	hw_uint<16> dark_laplace_diff_1_rd0_res = dark_laplace_diff_1_rd0_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_laplace_diff_1_rd0_res);
	hw_uint<16> dark_laplace_diff_1_rd1_res = dark_laplace_diff_1_rd1_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_laplace_diff_1_rd1_res);
	hw_uint<16> dark_laplace_diff_1_rd2_res = dark_laplace_diff_1_rd2_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_laplace_diff_1_rd2_res);
	hw_uint<16> dark_laplace_diff_1_rd3_res = dark_laplace_diff_1_rd3_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_laplace_diff_1_rd3_res);
	return result;
}

// dark_laplace_us_0_update_0_read
//	dark_laplace_us_0_rd0
//	dark_laplace_us_0_rd1
//	dark_laplace_us_0_rd2
//	dark_laplace_us_0_rd3
//	dark_laplace_us_0_rd4
//	dark_laplace_us_0_rd5
//	dark_laplace_us_0_rd6
//	dark_laplace_us_0_rd7
inline hw_uint<128> dark_gauss_ds_1_dark_laplace_us_0_update_0_read_bundle_read(dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_laplace_us_0_rd0
    // dark_laplace_us_0_rd1
    // dark_laplace_us_0_rd2
    // dark_laplace_us_0_rd3
    // dark_laplace_us_0_rd4
    // dark_laplace_us_0_rd5
    // dark_laplace_us_0_rd6
    // dark_laplace_us_0_rd7

	hw_uint<128> result;
	hw_uint<16> dark_laplace_us_0_rd0_res = dark_laplace_us_0_rd0_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_laplace_us_0_rd0_res);
	hw_uint<16> dark_laplace_us_0_rd1_res = dark_laplace_us_0_rd1_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_laplace_us_0_rd1_res);
	hw_uint<16> dark_laplace_us_0_rd2_res = dark_laplace_us_0_rd2_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_laplace_us_0_rd2_res);
	hw_uint<16> dark_laplace_us_0_rd3_res = dark_laplace_us_0_rd3_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_laplace_us_0_rd3_res);
	hw_uint<16> dark_laplace_us_0_rd4_res = dark_laplace_us_0_rd4_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_laplace_us_0_rd4_res);
	hw_uint<16> dark_laplace_us_0_rd5_res = dark_laplace_us_0_rd5_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_laplace_us_0_rd5_res);
	hw_uint<16> dark_laplace_us_0_rd6_res = dark_laplace_us_0_rd6_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_laplace_us_0_rd6_res);
	hw_uint<16> dark_laplace_us_0_rd7_res = dark_laplace_us_0_rd7_select(dark_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_laplace_us_0_rd7_res);
	return result;
}

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 136
	// # of read delays: 136
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135
	fifo<hw_uint<16>, 136> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(135 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 270], [-1, 479]}
	// Capacity: 276
	// # of read delays: 6
  // 0, 1, 137, 138, 274, 275
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 135> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 135> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_136() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_137() {
		return f4;
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_273() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_274() {
		return f8;
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-1, 269], [-1, 479]}
	// Capacity: 277
	// # of read delays: 7
  // 0, 1, 2, 138, 139, 275, 276
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 135> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 135> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_137() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_139() {
		return f8;
	}

	inline hw_uint<16> peek_274() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}

	inline hw_uint<16> peek_276() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_gauss_ds_2_cache {
  // Reader addrs...
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 8
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9;
  dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9_cache dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9;
};



inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0);
}

inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_write(hw_uint<16>& dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
  dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.push(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1);
}

inline hw_uint<16> dark_gauss_blur_3_rd0_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd0 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_276();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd1_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd1 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_139();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd10_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd10 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd11_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd11 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd12_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd12 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd13_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd13 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd14_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd14 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd15_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd15 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_274();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd16_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd16 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_137();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd17_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd17 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd2_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd2 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_2();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd3_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd3 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd4_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd4 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd5_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd5 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd6_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd6 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd7_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd7 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd8_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd8 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_gauss_blur_3_rd9_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_gauss_blur_3_rd9 read pattern: { dark_gauss_blur_3_update_0[d0, d1] -> dark_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd0_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd0 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_diff_2_rd0.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd1_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd1 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_diff_2_rd1.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd0_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd0 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd1_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd1 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_to_dark_laplace_us_1_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd2_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd2 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_us_1_rd3_select(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_1_rd3 read pattern: { dark_laplace_us_1_update_0[d0, d1] -> dark_gauss_ds_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1 = dark_gauss_ds_2.dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_to_dark_laplace_us_1_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0) ? ((135 - d0)) : 0);
  return value_dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1;
  return 0;
}

// # of bundles = 4
// dark_gauss_blur_3_update_0_read
//	dark_gauss_blur_3_rd0
//	dark_gauss_blur_3_rd1
//	dark_gauss_blur_3_rd2
//	dark_gauss_blur_3_rd3
//	dark_gauss_blur_3_rd4
//	dark_gauss_blur_3_rd5
//	dark_gauss_blur_3_rd6
//	dark_gauss_blur_3_rd7
//	dark_gauss_blur_3_rd8
//	dark_gauss_blur_3_rd9
//	dark_gauss_blur_3_rd10
//	dark_gauss_blur_3_rd11
//	dark_gauss_blur_3_rd12
//	dark_gauss_blur_3_rd13
//	dark_gauss_blur_3_rd14
//	dark_gauss_blur_3_rd15
//	dark_gauss_blur_3_rd16
//	dark_gauss_blur_3_rd17
inline hw_uint<288> dark_gauss_ds_2_dark_gauss_blur_3_update_0_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 18
    // dark_gauss_blur_3_rd0
    // dark_gauss_blur_3_rd1
    // dark_gauss_blur_3_rd2
    // dark_gauss_blur_3_rd3
    // dark_gauss_blur_3_rd4
    // dark_gauss_blur_3_rd5
    // dark_gauss_blur_3_rd6
    // dark_gauss_blur_3_rd7
    // dark_gauss_blur_3_rd8
    // dark_gauss_blur_3_rd9
    // dark_gauss_blur_3_rd10
    // dark_gauss_blur_3_rd11
    // dark_gauss_blur_3_rd12
    // dark_gauss_blur_3_rd13
    // dark_gauss_blur_3_rd14
    // dark_gauss_blur_3_rd15
    // dark_gauss_blur_3_rd16
    // dark_gauss_blur_3_rd17

	hw_uint<288> result;
	hw_uint<16> dark_gauss_blur_3_rd0_res = dark_gauss_blur_3_rd0_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 288>(result, dark_gauss_blur_3_rd0_res);
	hw_uint<16> dark_gauss_blur_3_rd1_res = dark_gauss_blur_3_rd1_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 288>(result, dark_gauss_blur_3_rd1_res);
	hw_uint<16> dark_gauss_blur_3_rd2_res = dark_gauss_blur_3_rd2_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 288>(result, dark_gauss_blur_3_rd2_res);
	hw_uint<16> dark_gauss_blur_3_rd3_res = dark_gauss_blur_3_rd3_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 288>(result, dark_gauss_blur_3_rd3_res);
	hw_uint<16> dark_gauss_blur_3_rd4_res = dark_gauss_blur_3_rd4_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 288>(result, dark_gauss_blur_3_rd4_res);
	hw_uint<16> dark_gauss_blur_3_rd5_res = dark_gauss_blur_3_rd5_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 288>(result, dark_gauss_blur_3_rd5_res);
	hw_uint<16> dark_gauss_blur_3_rd6_res = dark_gauss_blur_3_rd6_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 288>(result, dark_gauss_blur_3_rd6_res);
	hw_uint<16> dark_gauss_blur_3_rd7_res = dark_gauss_blur_3_rd7_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 288>(result, dark_gauss_blur_3_rd7_res);
	hw_uint<16> dark_gauss_blur_3_rd8_res = dark_gauss_blur_3_rd8_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 288>(result, dark_gauss_blur_3_rd8_res);
	hw_uint<16> dark_gauss_blur_3_rd9_res = dark_gauss_blur_3_rd9_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 288>(result, dark_gauss_blur_3_rd9_res);
	hw_uint<16> dark_gauss_blur_3_rd10_res = dark_gauss_blur_3_rd10_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 288>(result, dark_gauss_blur_3_rd10_res);
	hw_uint<16> dark_gauss_blur_3_rd11_res = dark_gauss_blur_3_rd11_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 288>(result, dark_gauss_blur_3_rd11_res);
	hw_uint<16> dark_gauss_blur_3_rd12_res = dark_gauss_blur_3_rd12_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 288>(result, dark_gauss_blur_3_rd12_res);
	hw_uint<16> dark_gauss_blur_3_rd13_res = dark_gauss_blur_3_rd13_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 288>(result, dark_gauss_blur_3_rd13_res);
	hw_uint<16> dark_gauss_blur_3_rd14_res = dark_gauss_blur_3_rd14_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 288>(result, dark_gauss_blur_3_rd14_res);
	hw_uint<16> dark_gauss_blur_3_rd15_res = dark_gauss_blur_3_rd15_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 288>(result, dark_gauss_blur_3_rd15_res);
	hw_uint<16> dark_gauss_blur_3_rd16_res = dark_gauss_blur_3_rd16_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 288>(result, dark_gauss_blur_3_rd16_res);
	hw_uint<16> dark_gauss_blur_3_rd17_res = dark_gauss_blur_3_rd17_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 288>(result, dark_gauss_blur_3_rd17_res);
	return result;
}

// dark_gauss_ds_2_update_0_write
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0
//	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1
inline void dark_gauss_ds_2_dark_gauss_ds_2_update_0_write_bundle_write(hw_uint<32>& dark_gauss_ds_2_update_0_write, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_res = dark_gauss_ds_2_update_0_write.extract<0, 15>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write0_res, dark_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_res = dark_gauss_ds_2_update_0_write.extract<16, 31>();
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_write(dark_gauss_ds_2_dark_gauss_ds_2_update_0_write1_res, dark_gauss_ds_2, d0, d1, dynamic_address);
}

// dark_laplace_diff_2_update_0_read
//	dark_laplace_diff_2_rd0
//	dark_laplace_diff_2_rd1
inline hw_uint<32> dark_gauss_ds_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_laplace_diff_2_rd0
    // dark_laplace_diff_2_rd1

	hw_uint<32> result;
	hw_uint<16> dark_laplace_diff_2_rd0_res = dark_laplace_diff_2_rd0_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_laplace_diff_2_rd0_res);
	hw_uint<16> dark_laplace_diff_2_rd1_res = dark_laplace_diff_2_rd1_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_laplace_diff_2_rd1_res);
	return result;
}

// dark_laplace_us_1_update_0_read
//	dark_laplace_us_1_rd0
//	dark_laplace_us_1_rd1
//	dark_laplace_us_1_rd2
//	dark_laplace_us_1_rd3
inline hw_uint<64> dark_gauss_ds_2_dark_laplace_us_1_update_0_read_bundle_read(dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_laplace_us_1_rd0
    // dark_laplace_us_1_rd1
    // dark_laplace_us_1_rd2
    // dark_laplace_us_1_rd3

	hw_uint<64> result;
	hw_uint<16> dark_laplace_us_1_rd0_res = dark_laplace_us_1_rd0_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_laplace_us_1_rd0_res);
	hw_uint<16> dark_laplace_us_1_rd1_res = dark_laplace_us_1_rd1_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_laplace_us_1_rd1_res);
	hw_uint<16> dark_laplace_us_1_rd2_res = dark_laplace_us_1_rd2_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_laplace_us_1_rd2_res);
	hw_uint<16> dark_laplace_us_1_rd3_res = dark_laplace_us_1_rd3_select(dark_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_laplace_us_1_rd3_res);
	return result;
}

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_gauss_ds_3_cache {
  // Reader addrs...
    // { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
    // { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
    // { fused_level_3_update_0[d0, d1] -> dark_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 3
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1;
  dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
};



inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_write(hw_uint<16>& dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0);
  dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0);
}

inline hw_uint<16> dark_laplace_us_2_rd0_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_rd0 read pattern: { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 31] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 26] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_us_2_rd1_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_us_2_rd1 read pattern: { dark_laplace_us_2_update_0[d0, d1] -> dark_gauss_ds_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { dark_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 31] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 26] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_dark_laplace_us_2_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_3_rd0_select(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> dark_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { dark_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 26] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0 = dark_gauss_ds_3.dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0;
  return 0;
}

// # of bundles = 3
// dark_gauss_ds_3_update_0_write
//	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0
inline void dark_gauss_ds_3_dark_gauss_ds_3_update_0_write_bundle_write(hw_uint<16>& dark_gauss_ds_3_update_0_write, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_res = dark_gauss_ds_3_update_0_write.extract<0, 15>();
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_write(dark_gauss_ds_3_dark_gauss_ds_3_update_0_write0_res, dark_gauss_ds_3, d0, d1, dynamic_address);
}

// dark_laplace_us_2_update_0_read
//	dark_laplace_us_2_rd0
//	dark_laplace_us_2_rd1
inline hw_uint<32> dark_gauss_ds_3_dark_laplace_us_2_update_0_read_bundle_read(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_laplace_us_2_rd0
    // dark_laplace_us_2_rd1

	hw_uint<32> result;
	hw_uint<16> dark_laplace_us_2_rd0_res = dark_laplace_us_2_rd0_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_laplace_us_2_rd0_res);
	hw_uint<16> dark_laplace_us_2_rd1_res = dark_laplace_us_2_rd1_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_laplace_us_2_rd1_res);
	return result;
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
inline hw_uint<16> dark_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_3_rd0

	hw_uint<16> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(dark_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, fused_level_3_rd0_res);
	return result;
}

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_0_cache {
  // Reader addrs...
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 8
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6;
  dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7_cache dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7;
};



inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6);
}

inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_write(hw_uint<16>& dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.push(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7);
}

inline hw_uint<16> fused_level_0_rd0_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_to_fused_level_0_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_to_fused_level_0_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_to_fused_level_0_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_to_fused_level_0_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_to_fused_level_0_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_to_fused_level_0_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_to_fused_level_0_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> dark_laplace_diff_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7 = dark_laplace_diff_0.dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_to_fused_level_0_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_write
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6
//	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7
inline void dark_laplace_diff_0_dark_laplace_diff_0_update_0_write_bundle_write(hw_uint<128>& dark_laplace_diff_0_update_0_write, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_res = dark_laplace_diff_0_update_0_write.extract<0, 15>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write0_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_res = dark_laplace_diff_0_update_0_write.extract<16, 31>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write1_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_res = dark_laplace_diff_0_update_0_write.extract<32, 47>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write2_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_res = dark_laplace_diff_0_update_0_write.extract<48, 63>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write3_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_res = dark_laplace_diff_0_update_0_write.extract<64, 79>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write4_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_res = dark_laplace_diff_0_update_0_write.extract<80, 95>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write5_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_res = dark_laplace_diff_0_update_0_write.extract<96, 111>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write6_res, dark_laplace_diff_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_res = dark_laplace_diff_0_update_0_write.extract<112, 127>();
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_write(dark_laplace_diff_0_dark_laplace_diff_0_update_0_write7_res, dark_laplace_diff_0, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
inline hw_uint<128> dark_laplace_diff_0_fused_level_0_update_0_read_bundle_read(dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(dark_laplace_diff_0, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_0_rd7_res);
	return result;
}

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_1_cache {
  // Reader addrs...
    // { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 4
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2;
  dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3_cache dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3;
};



inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2);
}

inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_write(hw_uint<16>& dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.push(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3);
}

inline hw_uint<16> fused_level_1_rd0_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_to_fused_level_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_to_fused_level_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_to_fused_level_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> dark_laplace_diff_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3 = dark_laplace_diff_1.dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_to_fused_level_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_write
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2
//	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3
inline void dark_laplace_diff_1_dark_laplace_diff_1_update_0_write_bundle_write(hw_uint<64>& dark_laplace_diff_1_update_0_write, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_res = dark_laplace_diff_1_update_0_write.extract<0, 15>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write0_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_res = dark_laplace_diff_1_update_0_write.extract<16, 31>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write1_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_res = dark_laplace_diff_1_update_0_write.extract<32, 47>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write2_res, dark_laplace_diff_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_res = dark_laplace_diff_1_update_0_write.extract<48, 63>();
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_write(dark_laplace_diff_1_dark_laplace_diff_1_update_0_write3_res, dark_laplace_diff_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
inline hw_uint<64> dark_laplace_diff_1_fused_level_1_update_0_read_bundle_read(dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(dark_laplace_diff_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_1_rd3_res);
	return result;
}

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_diff_2_cache {
  // Reader addrs...
    // { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 2
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0;
  dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1_cache dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1;
};



inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0);
}

inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_write(hw_uint<16>& dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.push(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1);
}

inline hw_uint<16> fused_level_2_rd0_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> dark_laplace_diff_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1 = dark_laplace_diff_2.dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_write
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0
//	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1
inline void dark_laplace_diff_2_dark_laplace_diff_2_update_0_write_bundle_write(hw_uint<32>& dark_laplace_diff_2_update_0_write, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_res = dark_laplace_diff_2_update_0_write.extract<0, 15>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write0_res, dark_laplace_diff_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_res = dark_laplace_diff_2_update_0_write.extract<16, 31>();
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_write(dark_laplace_diff_2_dark_laplace_diff_2_update_0_write1_res, dark_laplace_diff_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
inline hw_uint<32> dark_laplace_diff_2_fused_level_2_update_0_read_bundle_read(dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_2_rd0
    // fused_level_2_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(dark_laplace_diff_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(dark_laplace_diff_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_2_rd1_res);
	return result;
}

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_0_cache {
  // Reader addrs...
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 8
  dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6;
  dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7_cache dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7;
};



inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write0_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write0, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write0);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write1_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write1, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write1);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write2_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write2, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write2);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write3_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write3, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write3);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write4_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write4, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write4);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write5_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write5, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write5);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write6_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write6, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write6);
}

inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write7_write(hw_uint<16>& dark_laplace_us_0_dark_laplace_us_0_update_0_write7, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7.push(dark_laplace_us_0_dark_laplace_us_0_update_0_write7);
}

inline hw_uint<16> dark_laplace_diff_0_rd0_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd0 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write0 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write0_to_dark_laplace_diff_0_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd1_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd1 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write1 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write1_to_dark_laplace_diff_0_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd2_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd2 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write2 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write2_to_dark_laplace_diff_0_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd3_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd3 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write3 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write3_to_dark_laplace_diff_0_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd4_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd4 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write4 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write4_to_dark_laplace_diff_0_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd5_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd5 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write5 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write5_to_dark_laplace_diff_0_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd6_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd6 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write6 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write6_to_dark_laplace_diff_0_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_0_rd7_select(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_0_rd7 read pattern: { dark_laplace_diff_0_update_0[d0, d1] -> dark_laplace_us_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_dark_laplace_us_0_dark_laplace_us_0_update_0_write7 = dark_laplace_us_0.dark_laplace_us_0_dark_laplace_us_0_update_0_write7_to_dark_laplace_diff_0_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_0_dark_laplace_us_0_update_0_write7;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_0_update_0_read
//	dark_laplace_diff_0_rd0
//	dark_laplace_diff_0_rd1
//	dark_laplace_diff_0_rd2
//	dark_laplace_diff_0_rd3
//	dark_laplace_diff_0_rd4
//	dark_laplace_diff_0_rd5
//	dark_laplace_diff_0_rd6
//	dark_laplace_diff_0_rd7
inline hw_uint<128> dark_laplace_us_0_dark_laplace_diff_0_update_0_read_bundle_read(dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_laplace_diff_0_rd0
    // dark_laplace_diff_0_rd1
    // dark_laplace_diff_0_rd2
    // dark_laplace_diff_0_rd3
    // dark_laplace_diff_0_rd4
    // dark_laplace_diff_0_rd5
    // dark_laplace_diff_0_rd6
    // dark_laplace_diff_0_rd7

	hw_uint<128> result;
	hw_uint<16> dark_laplace_diff_0_rd0_res = dark_laplace_diff_0_rd0_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_laplace_diff_0_rd0_res);
	hw_uint<16> dark_laplace_diff_0_rd1_res = dark_laplace_diff_0_rd1_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_laplace_diff_0_rd1_res);
	hw_uint<16> dark_laplace_diff_0_rd2_res = dark_laplace_diff_0_rd2_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_laplace_diff_0_rd2_res);
	hw_uint<16> dark_laplace_diff_0_rd3_res = dark_laplace_diff_0_rd3_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_laplace_diff_0_rd3_res);
	hw_uint<16> dark_laplace_diff_0_rd4_res = dark_laplace_diff_0_rd4_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_laplace_diff_0_rd4_res);
	hw_uint<16> dark_laplace_diff_0_rd5_res = dark_laplace_diff_0_rd5_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_laplace_diff_0_rd5_res);
	hw_uint<16> dark_laplace_diff_0_rd6_res = dark_laplace_diff_0_rd6_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_laplace_diff_0_rd6_res);
	hw_uint<16> dark_laplace_diff_0_rd7_res = dark_laplace_diff_0_rd7_select(dark_laplace_us_0, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_laplace_diff_0_rd7_res);
	return result;
}

// dark_laplace_us_0_update_0_write
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write0
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write1
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write2
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write3
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write4
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write5
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write6
//	dark_laplace_us_0_dark_laplace_us_0_update_0_write7
inline void dark_laplace_us_0_dark_laplace_us_0_update_0_write_bundle_write(hw_uint<128>& dark_laplace_us_0_update_0_write, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write0_res = dark_laplace_us_0_update_0_write.extract<0, 15>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write0_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write0_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write1_res = dark_laplace_us_0_update_0_write.extract<16, 31>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write1_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write1_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write2_res = dark_laplace_us_0_update_0_write.extract<32, 47>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write2_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write2_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write3_res = dark_laplace_us_0_update_0_write.extract<48, 63>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write3_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write3_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write4_res = dark_laplace_us_0_update_0_write.extract<64, 79>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write4_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write4_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write5_res = dark_laplace_us_0_update_0_write.extract<80, 95>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write5_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write5_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write6_res = dark_laplace_us_0_update_0_write.extract<96, 111>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write6_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write6_res, dark_laplace_us_0, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_0_dark_laplace_us_0_update_0_write7_res = dark_laplace_us_0_update_0_write.extract<112, 127>();
	dark_laplace_us_0_dark_laplace_us_0_update_0_write7_write(dark_laplace_us_0_dark_laplace_us_0_update_0_write7_res, dark_laplace_us_0, d0, d1, dynamic_address);
}

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_1_cache {
  // Reader addrs...
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 4
  dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2;
  dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3_cache dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3;
};



inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write0_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write0, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write0);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write1_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write1, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write1);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write2_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write2, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write2);
}

inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write3_write(hw_uint<16>& dark_laplace_us_1_dark_laplace_us_1_update_0_write3, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3.push(dark_laplace_us_1_dark_laplace_us_1_update_0_write3);
}

inline hw_uint<16> dark_laplace_diff_1_rd0_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd0 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write0 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write0_to_dark_laplace_diff_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd1_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd1 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write1 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write1_to_dark_laplace_diff_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd2_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd2 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write2 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write2_to_dark_laplace_diff_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_1_rd3_select(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_1_rd3 read pattern: { dark_laplace_diff_1_update_0[d0, d1] -> dark_laplace_us_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_dark_laplace_us_1_dark_laplace_us_1_update_0_write3 = dark_laplace_us_1.dark_laplace_us_1_dark_laplace_us_1_update_0_write3_to_dark_laplace_diff_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_1_dark_laplace_us_1_update_0_write3;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_1_update_0_read
//	dark_laplace_diff_1_rd0
//	dark_laplace_diff_1_rd1
//	dark_laplace_diff_1_rd2
//	dark_laplace_diff_1_rd3
inline hw_uint<64> dark_laplace_us_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_laplace_diff_1_rd0
    // dark_laplace_diff_1_rd1
    // dark_laplace_diff_1_rd2
    // dark_laplace_diff_1_rd3

	hw_uint<64> result;
	hw_uint<16> dark_laplace_diff_1_rd0_res = dark_laplace_diff_1_rd0_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_laplace_diff_1_rd0_res);
	hw_uint<16> dark_laplace_diff_1_rd1_res = dark_laplace_diff_1_rd1_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_laplace_diff_1_rd1_res);
	hw_uint<16> dark_laplace_diff_1_rd2_res = dark_laplace_diff_1_rd2_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_laplace_diff_1_rd2_res);
	hw_uint<16> dark_laplace_diff_1_rd3_res = dark_laplace_diff_1_rd3_select(dark_laplace_us_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_laplace_diff_1_rd3_res);
	return result;
}

// dark_laplace_us_1_update_0_write
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write0
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write1
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write2
//	dark_laplace_us_1_dark_laplace_us_1_update_0_write3
inline void dark_laplace_us_1_dark_laplace_us_1_update_0_write_bundle_write(hw_uint<64>& dark_laplace_us_1_update_0_write, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write0_res = dark_laplace_us_1_update_0_write.extract<0, 15>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write0_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write0_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write1_res = dark_laplace_us_1_update_0_write.extract<16, 31>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write1_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write1_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write2_res = dark_laplace_us_1_update_0_write.extract<32, 47>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write2_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write2_res, dark_laplace_us_1, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_1_dark_laplace_us_1_update_0_write3_res = dark_laplace_us_1_update_0_write.extract<48, 63>();
	dark_laplace_us_1_dark_laplace_us_1_update_0_write3_write(dark_laplace_us_1_dark_laplace_us_1_update_0_write3_res, dark_laplace_us_1, d0, d1, dynamic_address);
}

struct dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_laplace_us_2_cache {
  // Reader addrs...
    // { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 2
  dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0_cache dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0;
  dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1_cache dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1;
};



inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write0_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_write0, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0.push(dark_laplace_us_2_dark_laplace_us_2_update_0_write0);
}

inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write1_write(hw_uint<16>& dark_laplace_us_2_dark_laplace_us_2_update_0_write1, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1.push(dark_laplace_us_2_dark_laplace_us_2_update_0_write1);
}

inline hw_uint<16> dark_laplace_diff_2_rd0_select(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd0 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 31] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_write0 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write0_to_dark_laplace_diff_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_laplace_diff_2_rd1_select(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_laplace_diff_2_rd1 read pattern: { dark_laplace_diff_2_update_0[d0, d1] -> dark_laplace_us_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 31] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_dark_laplace_us_2_dark_laplace_us_2_update_0_write1 = dark_laplace_us_2.dark_laplace_us_2_dark_laplace_us_2_update_0_write1_to_dark_laplace_diff_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_laplace_us_2_dark_laplace_us_2_update_0_write1;
  return 0;
}

// # of bundles = 2
// dark_laplace_diff_2_update_0_read
//	dark_laplace_diff_2_rd0
//	dark_laplace_diff_2_rd1
inline hw_uint<32> dark_laplace_us_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_laplace_diff_2_rd0
    // dark_laplace_diff_2_rd1

	hw_uint<32> result;
	hw_uint<16> dark_laplace_diff_2_rd0_res = dark_laplace_diff_2_rd0_select(dark_laplace_us_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_laplace_diff_2_rd0_res);
	hw_uint<16> dark_laplace_diff_2_rd1_res = dark_laplace_diff_2_rd1_select(dark_laplace_us_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_laplace_diff_2_rd1_res);
	return result;
}

// dark_laplace_us_2_update_0_write
//	dark_laplace_us_2_dark_laplace_us_2_update_0_write0
//	dark_laplace_us_2_dark_laplace_us_2_update_0_write1
inline void dark_laplace_us_2_dark_laplace_us_2_update_0_write_bundle_write(hw_uint<32>& dark_laplace_us_2_update_0_write, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_write0_res = dark_laplace_us_2_update_0_write.extract<0, 15>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_write0_write(dark_laplace_us_2_dark_laplace_us_2_update_0_write0_res, dark_laplace_us_2, d0, d1, dynamic_address);
	hw_uint<16> dark_laplace_us_2_dark_laplace_us_2_update_0_write1_res = dark_laplace_us_2_update_0_write.extract<16, 31>();
	dark_laplace_us_2_dark_laplace_us_2_update_0_write1_write(dark_laplace_us_2_dark_laplace_us_2_update_0_write1_res, dark_laplace_us_2, d0, d1, dynamic_address);
}

struct dark_weights_dark_weights_update_0_write0_to_dark_weights_normed_rd0_cache {
	// RAM Box: {[-24, 1096], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write1_to_dark_weights_normed_rd1_cache {
	// RAM Box: {[-23, 1097], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write2_to_dark_weights_normed_rd2_cache {
	// RAM Box: {[-22, 1098], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write3_to_dark_weights_normed_rd3_cache {
	// RAM Box: {[-21, 1099], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write4_to_dark_weights_normed_rd4_cache {
	// RAM Box: {[-20, 1100], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write5_to_dark_weights_normed_rd5_cache {
	// RAM Box: {[-19, 1101], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write6_to_dark_weights_normed_rd6_cache {
	// RAM Box: {[-18, 1102], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_dark_weights_update_0_write7_to_dark_weights_normed_rd7_cache {
	// RAM Box: {[-17, 1103], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_cache {
  // Reader addrs...
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_weights_normed_update_0[d0, d1] -> dark_weights[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // # of banks: 8
  dark_weights_dark_weights_update_0_write0_to_dark_weights_normed_rd0_cache dark_weights_dark_weights_update_0_write0_to_dark_weights_normed_rd0;
  dark_weights_dark_weights_update_0_write1_to_dark_weights_normed_rd1_cache dark_weights_dark_weights_update_0_write1_to_dark_weights_normed_rd1;
  dark_weights_dark_weights_update_0_write2_to_dark_weights_normed_rd2_cache dark_weights_dark_weights_update_0_write2_to_dark_weights_normed_rd2;
  dark_weights_dark_weights_update_0_write3_to_dark_weights_normed_rd3_cache dark_weights_dark_weights_update_0_write3_to_dark_weights_normed_rd3;
  dark_weights_dark_weights_update_0_write4_to_dark_weights_normed_rd4_cache dark_weights_dark_weights_update_0_write4_to_dark_weights_normed_rd4;
  dark_weights_dark_weights_update_0_write5_to_dark_weights_normed_rd5_cache dark_weights_dark_weights_update_0_write5_to_dark_weights_normed_rd5;
  dark_weights_dark_weights_update_0_write6_to_dark_weights_normed_rd6_cache dark_weights_dark_weights_update_0_write6_to_dark_weights_normed_rd6;
  dark_weights_dark_weights_update_0_write7_to_dark_weights_normed_rd7_cache dark_weights_dark_weights_update_0_write7_to_dark_weights_normed_rd7;
};



inline void dark_weights_dark_weights_update_0_write0_write(hw_uint<16>& dark_weights_dark_weights_update_0_write0, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write0_to_dark_weights_normed_rd0.push(dark_weights_dark_weights_update_0_write0);
}

inline void dark_weights_dark_weights_update_0_write1_write(hw_uint<16>& dark_weights_dark_weights_update_0_write1, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write1_to_dark_weights_normed_rd1.push(dark_weights_dark_weights_update_0_write1);
}

inline void dark_weights_dark_weights_update_0_write2_write(hw_uint<16>& dark_weights_dark_weights_update_0_write2, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write2_to_dark_weights_normed_rd2.push(dark_weights_dark_weights_update_0_write2);
}

inline void dark_weights_dark_weights_update_0_write3_write(hw_uint<16>& dark_weights_dark_weights_update_0_write3, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write3_to_dark_weights_normed_rd3.push(dark_weights_dark_weights_update_0_write3);
}

inline void dark_weights_dark_weights_update_0_write4_write(hw_uint<16>& dark_weights_dark_weights_update_0_write4, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write4_to_dark_weights_normed_rd4.push(dark_weights_dark_weights_update_0_write4);
}

inline void dark_weights_dark_weights_update_0_write5_write(hw_uint<16>& dark_weights_dark_weights_update_0_write5, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write5_to_dark_weights_normed_rd5.push(dark_weights_dark_weights_update_0_write5);
}

inline void dark_weights_dark_weights_update_0_write6_write(hw_uint<16>& dark_weights_dark_weights_update_0_write6, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write6_to_dark_weights_normed_rd6.push(dark_weights_dark_weights_update_0_write6);
}

inline void dark_weights_dark_weights_update_0_write7_write(hw_uint<16>& dark_weights_dark_weights_update_0_write7, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  dark_weights.dark_weights_dark_weights_update_0_write7_to_dark_weights_normed_rd7.push(dark_weights_dark_weights_update_0_write7);
}

inline hw_uint<16> dark_weights_normed_rd0_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd0 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write0 = dark_weights.dark_weights_dark_weights_update_0_write0_to_dark_weights_normed_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd1_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd1 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write1 = dark_weights.dark_weights_dark_weights_update_0_write1_to_dark_weights_normed_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd2_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd2 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write2 = dark_weights.dark_weights_dark_weights_update_0_write2_to_dark_weights_normed_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd3_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd3 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write3 = dark_weights.dark_weights_dark_weights_update_0_write3_to_dark_weights_normed_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd4_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd4 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write4 = dark_weights.dark_weights_dark_weights_update_0_write4_to_dark_weights_normed_rd4.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd5_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd5 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write5 = dark_weights.dark_weights_dark_weights_update_0_write5_to_dark_weights_normed_rd5.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd6_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd6 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write6 = dark_weights.dark_weights_dark_weights_update_0_write6_to_dark_weights_normed_rd6.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_rd7_select(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_rd7 read pattern: { dark_weights_normed_update_0[d0, d1] -> dark_weights[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_dark_weights_update_0_write7 = dark_weights.dark_weights_dark_weights_update_0_write7_to_dark_weights_normed_rd7.peek(/* one reader or all rams */ 0);
  return value_dark_weights_dark_weights_update_0_write7;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_update_0_read
//	dark_weights_normed_rd0
//	dark_weights_normed_rd1
//	dark_weights_normed_rd2
//	dark_weights_normed_rd3
//	dark_weights_normed_rd4
//	dark_weights_normed_rd5
//	dark_weights_normed_rd6
//	dark_weights_normed_rd7
inline hw_uint<128> dark_weights_dark_weights_normed_update_0_read_bundle_read(dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_weights_normed_rd0
    // dark_weights_normed_rd1
    // dark_weights_normed_rd2
    // dark_weights_normed_rd3
    // dark_weights_normed_rd4
    // dark_weights_normed_rd5
    // dark_weights_normed_rd6
    // dark_weights_normed_rd7

	hw_uint<128> result;
	hw_uint<16> dark_weights_normed_rd0_res = dark_weights_normed_rd0_select(dark_weights, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_weights_normed_rd0_res);
	hw_uint<16> dark_weights_normed_rd1_res = dark_weights_normed_rd1_select(dark_weights, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_weights_normed_rd1_res);
	hw_uint<16> dark_weights_normed_rd2_res = dark_weights_normed_rd2_select(dark_weights, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_weights_normed_rd2_res);
	hw_uint<16> dark_weights_normed_rd3_res = dark_weights_normed_rd3_select(dark_weights, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_weights_normed_rd3_res);
	hw_uint<16> dark_weights_normed_rd4_res = dark_weights_normed_rd4_select(dark_weights, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_weights_normed_rd4_res);
	hw_uint<16> dark_weights_normed_rd5_res = dark_weights_normed_rd5_select(dark_weights, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_weights_normed_rd5_res);
	hw_uint<16> dark_weights_normed_rd6_res = dark_weights_normed_rd6_select(dark_weights, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_weights_normed_rd6_res);
	hw_uint<16> dark_weights_normed_rd7_res = dark_weights_normed_rd7_select(dark_weights, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_weights_normed_rd7_res);
	return result;
}

// dark_weights_update_0_write
//	dark_weights_dark_weights_update_0_write0
//	dark_weights_dark_weights_update_0_write1
//	dark_weights_dark_weights_update_0_write2
//	dark_weights_dark_weights_update_0_write3
//	dark_weights_dark_weights_update_0_write4
//	dark_weights_dark_weights_update_0_write5
//	dark_weights_dark_weights_update_0_write6
//	dark_weights_dark_weights_update_0_write7
inline void dark_weights_dark_weights_update_0_write_bundle_write(hw_uint<128>& dark_weights_update_0_write, dark_weights_cache& dark_weights, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_dark_weights_update_0_write0_res = dark_weights_update_0_write.extract<0, 15>();
	dark_weights_dark_weights_update_0_write0_write(dark_weights_dark_weights_update_0_write0_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write1_res = dark_weights_update_0_write.extract<16, 31>();
	dark_weights_dark_weights_update_0_write1_write(dark_weights_dark_weights_update_0_write1_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write2_res = dark_weights_update_0_write.extract<32, 47>();
	dark_weights_dark_weights_update_0_write2_write(dark_weights_dark_weights_update_0_write2_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write3_res = dark_weights_update_0_write.extract<48, 63>();
	dark_weights_dark_weights_update_0_write3_write(dark_weights_dark_weights_update_0_write3_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write4_res = dark_weights_update_0_write.extract<64, 79>();
	dark_weights_dark_weights_update_0_write4_write(dark_weights_dark_weights_update_0_write4_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write5_res = dark_weights_update_0_write.extract<80, 95>();
	dark_weights_dark_weights_update_0_write5_write(dark_weights_dark_weights_update_0_write5_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write6_res = dark_weights_update_0_write.extract<96, 111>();
	dark_weights_dark_weights_update_0_write6_write(dark_weights_dark_weights_update_0_write6_res, dark_weights, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_dark_weights_update_0_write7_res = dark_weights_update_0_write.extract<112, 127>();
	dark_weights_dark_weights_update_0_write7_write(dark_weights_dark_weights_update_0_write7_res, dark_weights, d0, d1, dynamic_address);
}

struct dark_weights_normed_dark_weights_normed_update_0_write0_to_fused_level_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write1_to_fused_level_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write2_to_fused_level_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write3_to_fused_level_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write4_to_fused_level_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write5_to_fused_level_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write6_to_fused_level_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write7_to_fused_level_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 143
	// # of read delays: 141
  // 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142
	fifo<hw_uint<16>, 143> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(142 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[-16, 1096], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 6
  // 0, 1, 141, 142, 282, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 139> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 139> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_140() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_141() {
		return f4;
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_281() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_282() {
		return f8;
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-15, 1089], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[-14, 1090], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[-13, 1091], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9_cache {
	// RAM Box: {[-12, 1092], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9_cache {
	// RAM Box: {[-11, 1093], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9_cache {
	// RAM Box: {[-10, 1094], [-7, 1919]}
	// Capacity: 284
	// # of read delays: 4
  // 0, 1, 142, 283
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 140> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 140> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_142() {
		return f4;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_283() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 140
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 140 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9_cache {
	// RAM Box: {[-17, 1095], [-7, 1919]}
	// Capacity: 285
	// # of read delays: 7
  // 0, 1, 2, 142, 143, 283, 284
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 139> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 139> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_141() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_142() {
		return f6;
	}

	inline hw_uint<16> peek_143() {
		return f8;
	}

	inline hw_uint<16> peek_282() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_283() {
		return f10;
	}

	inline hw_uint<16> peek_284() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 139
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 139 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { fused_level_0_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 16
  dark_weights_normed_dark_weights_normed_update_0_write0_to_fused_level_0_rd0_cache dark_weights_normed_dark_weights_normed_update_0_write0_to_fused_level_0_rd0;
  dark_weights_normed_dark_weights_normed_update_0_write1_to_fused_level_0_rd1_cache dark_weights_normed_dark_weights_normed_update_0_write1_to_fused_level_0_rd1;
  dark_weights_normed_dark_weights_normed_update_0_write2_to_fused_level_0_rd2_cache dark_weights_normed_dark_weights_normed_update_0_write2_to_fused_level_0_rd2;
  dark_weights_normed_dark_weights_normed_update_0_write3_to_fused_level_0_rd3_cache dark_weights_normed_dark_weights_normed_update_0_write3_to_fused_level_0_rd3;
  dark_weights_normed_dark_weights_normed_update_0_write4_to_fused_level_0_rd4_cache dark_weights_normed_dark_weights_normed_update_0_write4_to_fused_level_0_rd4;
  dark_weights_normed_dark_weights_normed_update_0_write5_to_fused_level_0_rd5_cache dark_weights_normed_dark_weights_normed_update_0_write5_to_fused_level_0_rd5;
  dark_weights_normed_dark_weights_normed_update_0_write6_to_fused_level_0_rd6_cache dark_weights_normed_dark_weights_normed_update_0_write6_to_fused_level_0_rd6;
  dark_weights_normed_dark_weights_normed_update_0_write7_to_fused_level_0_rd7_cache dark_weights_normed_dark_weights_normed_update_0_write7_to_fused_level_0_rd7;
  dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9;
  dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9_cache dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9;
};



inline void dark_weights_normed_dark_weights_normed_update_0_write0_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write0, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_to_fused_level_0_rd0.push(dark_weights_normed_dark_weights_normed_update_0_write0);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write0);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write1_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write1, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_to_fused_level_0_rd1.push(dark_weights_normed_dark_weights_normed_update_0_write1);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write1);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write2_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write2, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_to_fused_level_0_rd2.push(dark_weights_normed_dark_weights_normed_update_0_write2);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write2);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write3_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write3, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_to_fused_level_0_rd3.push(dark_weights_normed_dark_weights_normed_update_0_write3);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write3);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write4_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write4, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_to_fused_level_0_rd4.push(dark_weights_normed_dark_weights_normed_update_0_write4);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write4);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write5_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write5, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_to_fused_level_0_rd5.push(dark_weights_normed_dark_weights_normed_update_0_write5);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write5);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write6_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write6, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_to_fused_level_0_rd6.push(dark_weights_normed_dark_weights_normed_update_0_write6);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write6);
}

inline void dark_weights_normed_dark_weights_normed_update_0_write7_write(hw_uint<16>& dark_weights_normed_dark_weights_normed_update_0_write7, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_to_fused_level_0_rd7.push(dark_weights_normed_dark_weights_normed_update_0_write7);
  dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.push(dark_weights_normed_dark_weights_normed_update_0_write7);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd0_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd0 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[-1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_284();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd1_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd1 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[-1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_143();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd10_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd10 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd11_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd11 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd12_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd12 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd13_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd13 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd14_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd14 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd15_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd15 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd16_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd16 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd17_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd17 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd18_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd18 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd19_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd19 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd2_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd2 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[-1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_2();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd20_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd20 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd21_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd21 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd22_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd22 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd23_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd23 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd24_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd24 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd25_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd25 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd26_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd26 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd27_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd27 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd28_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd28 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd29_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd29 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd3_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd3 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd30_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd30 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd31_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd31 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd32_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd32 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd33_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd33 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd34_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd34 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd35_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd35 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd36_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd36 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd37_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd37 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd38_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd38 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd39_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd39 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd4_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd4 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd40_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd40 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd41_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd41 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd42_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd42 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd43_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd43 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd44_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd44 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd45_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd45 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd46_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd46 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd47_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd47 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd48_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd48 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd49_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd49 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd5_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd5 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd50_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd50 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd51_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd51 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd52_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd52 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd53_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd53 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd54_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd54 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd55_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd55 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd56_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd56 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd57_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd57 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd58_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd58 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd59_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd59 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd6_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd6 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd60_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd60 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd61_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd61 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd62_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd62 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd63_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd63 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd64_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd64 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd65_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd65 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd66_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd66 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd67_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd67 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd68_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd68 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd69_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd69 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_282();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd7_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd7 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_142();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd70_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd70 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 8d0, d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_141();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd71_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd71 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_0();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd8_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd8 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, 1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_1_rd9_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_1_rd9 read pattern: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> dark_weights_normed[8d0, -1 + d1] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Read schedule : { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_merged_banks_9.peek_283();
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd0_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd0 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write0 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write0_to_fused_level_0_rd0.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_0_rd1_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd1 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write1 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write1_to_fused_level_0_rd1.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_0_rd2_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd2 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write2 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write2_to_fused_level_0_rd2.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_0_rd3_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd3 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write3 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write3_to_fused_level_0_rd3.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write3;
  return 0;
}

inline hw_uint<16> fused_level_0_rd4_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd4 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write4 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write4_to_fused_level_0_rd4.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write4;
  return 0;
}

inline hw_uint<16> fused_level_0_rd5_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd5 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write5 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write5_to_fused_level_0_rd5.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write5;
  return 0;
}

inline hw_uint<16> fused_level_0_rd6_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd6 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write6 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write6_to_fused_level_0_rd6.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write6;
  return 0;
}

inline hw_uint<16> fused_level_0_rd7_select(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_0_rd7 read pattern: { fused_level_0_update_0[d0, d1] -> dark_weights_normed[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_dark_weights_normed_dark_weights_normed_update_0_write7 = dark_weights_normed.dark_weights_normed_dark_weights_normed_update_0_write7_to_fused_level_0_rd7.peek(/* one reader or all rams */ (1918 - d1 >= 0) ? (142) : (-1919 + d1 == 0) ? ((137 - d0)) : 0);
  return value_dark_weights_normed_dark_weights_normed_update_0_write7;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_blur_1_update_0_read
//	dark_weights_normed_gauss_blur_1_rd0
//	dark_weights_normed_gauss_blur_1_rd1
//	dark_weights_normed_gauss_blur_1_rd2
//	dark_weights_normed_gauss_blur_1_rd3
//	dark_weights_normed_gauss_blur_1_rd4
//	dark_weights_normed_gauss_blur_1_rd5
//	dark_weights_normed_gauss_blur_1_rd6
//	dark_weights_normed_gauss_blur_1_rd7
//	dark_weights_normed_gauss_blur_1_rd8
//	dark_weights_normed_gauss_blur_1_rd9
//	dark_weights_normed_gauss_blur_1_rd10
//	dark_weights_normed_gauss_blur_1_rd11
//	dark_weights_normed_gauss_blur_1_rd12
//	dark_weights_normed_gauss_blur_1_rd13
//	dark_weights_normed_gauss_blur_1_rd14
//	dark_weights_normed_gauss_blur_1_rd15
//	dark_weights_normed_gauss_blur_1_rd16
//	dark_weights_normed_gauss_blur_1_rd17
//	dark_weights_normed_gauss_blur_1_rd18
//	dark_weights_normed_gauss_blur_1_rd19
//	dark_weights_normed_gauss_blur_1_rd20
//	dark_weights_normed_gauss_blur_1_rd21
//	dark_weights_normed_gauss_blur_1_rd22
//	dark_weights_normed_gauss_blur_1_rd23
//	dark_weights_normed_gauss_blur_1_rd24
//	dark_weights_normed_gauss_blur_1_rd25
//	dark_weights_normed_gauss_blur_1_rd26
//	dark_weights_normed_gauss_blur_1_rd27
//	dark_weights_normed_gauss_blur_1_rd28
//	dark_weights_normed_gauss_blur_1_rd29
//	dark_weights_normed_gauss_blur_1_rd30
//	dark_weights_normed_gauss_blur_1_rd31
//	dark_weights_normed_gauss_blur_1_rd32
//	dark_weights_normed_gauss_blur_1_rd33
//	dark_weights_normed_gauss_blur_1_rd34
//	dark_weights_normed_gauss_blur_1_rd35
//	dark_weights_normed_gauss_blur_1_rd36
//	dark_weights_normed_gauss_blur_1_rd37
//	dark_weights_normed_gauss_blur_1_rd38
//	dark_weights_normed_gauss_blur_1_rd39
//	dark_weights_normed_gauss_blur_1_rd40
//	dark_weights_normed_gauss_blur_1_rd41
//	dark_weights_normed_gauss_blur_1_rd42
//	dark_weights_normed_gauss_blur_1_rd43
//	dark_weights_normed_gauss_blur_1_rd44
//	dark_weights_normed_gauss_blur_1_rd45
//	dark_weights_normed_gauss_blur_1_rd46
//	dark_weights_normed_gauss_blur_1_rd47
//	dark_weights_normed_gauss_blur_1_rd48
//	dark_weights_normed_gauss_blur_1_rd49
//	dark_weights_normed_gauss_blur_1_rd50
//	dark_weights_normed_gauss_blur_1_rd51
//	dark_weights_normed_gauss_blur_1_rd52
//	dark_weights_normed_gauss_blur_1_rd53
//	dark_weights_normed_gauss_blur_1_rd54
//	dark_weights_normed_gauss_blur_1_rd55
//	dark_weights_normed_gauss_blur_1_rd56
//	dark_weights_normed_gauss_blur_1_rd57
//	dark_weights_normed_gauss_blur_1_rd58
//	dark_weights_normed_gauss_blur_1_rd59
//	dark_weights_normed_gauss_blur_1_rd60
//	dark_weights_normed_gauss_blur_1_rd61
//	dark_weights_normed_gauss_blur_1_rd62
//	dark_weights_normed_gauss_blur_1_rd63
//	dark_weights_normed_gauss_blur_1_rd64
//	dark_weights_normed_gauss_blur_1_rd65
//	dark_weights_normed_gauss_blur_1_rd66
//	dark_weights_normed_gauss_blur_1_rd67
//	dark_weights_normed_gauss_blur_1_rd68
//	dark_weights_normed_gauss_blur_1_rd69
//	dark_weights_normed_gauss_blur_1_rd70
//	dark_weights_normed_gauss_blur_1_rd71
inline hw_uint<1152> dark_weights_normed_dark_weights_normed_gauss_blur_1_update_0_read_bundle_read(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 72
    // dark_weights_normed_gauss_blur_1_rd0
    // dark_weights_normed_gauss_blur_1_rd1
    // dark_weights_normed_gauss_blur_1_rd2
    // dark_weights_normed_gauss_blur_1_rd3
    // dark_weights_normed_gauss_blur_1_rd4
    // dark_weights_normed_gauss_blur_1_rd5
    // dark_weights_normed_gauss_blur_1_rd6
    // dark_weights_normed_gauss_blur_1_rd7
    // dark_weights_normed_gauss_blur_1_rd8
    // dark_weights_normed_gauss_blur_1_rd9
    // dark_weights_normed_gauss_blur_1_rd10
    // dark_weights_normed_gauss_blur_1_rd11
    // dark_weights_normed_gauss_blur_1_rd12
    // dark_weights_normed_gauss_blur_1_rd13
    // dark_weights_normed_gauss_blur_1_rd14
    // dark_weights_normed_gauss_blur_1_rd15
    // dark_weights_normed_gauss_blur_1_rd16
    // dark_weights_normed_gauss_blur_1_rd17
    // dark_weights_normed_gauss_blur_1_rd18
    // dark_weights_normed_gauss_blur_1_rd19
    // dark_weights_normed_gauss_blur_1_rd20
    // dark_weights_normed_gauss_blur_1_rd21
    // dark_weights_normed_gauss_blur_1_rd22
    // dark_weights_normed_gauss_blur_1_rd23
    // dark_weights_normed_gauss_blur_1_rd24
    // dark_weights_normed_gauss_blur_1_rd25
    // dark_weights_normed_gauss_blur_1_rd26
    // dark_weights_normed_gauss_blur_1_rd27
    // dark_weights_normed_gauss_blur_1_rd28
    // dark_weights_normed_gauss_blur_1_rd29
    // dark_weights_normed_gauss_blur_1_rd30
    // dark_weights_normed_gauss_blur_1_rd31
    // dark_weights_normed_gauss_blur_1_rd32
    // dark_weights_normed_gauss_blur_1_rd33
    // dark_weights_normed_gauss_blur_1_rd34
    // dark_weights_normed_gauss_blur_1_rd35
    // dark_weights_normed_gauss_blur_1_rd36
    // dark_weights_normed_gauss_blur_1_rd37
    // dark_weights_normed_gauss_blur_1_rd38
    // dark_weights_normed_gauss_blur_1_rd39
    // dark_weights_normed_gauss_blur_1_rd40
    // dark_weights_normed_gauss_blur_1_rd41
    // dark_weights_normed_gauss_blur_1_rd42
    // dark_weights_normed_gauss_blur_1_rd43
    // dark_weights_normed_gauss_blur_1_rd44
    // dark_weights_normed_gauss_blur_1_rd45
    // dark_weights_normed_gauss_blur_1_rd46
    // dark_weights_normed_gauss_blur_1_rd47
    // dark_weights_normed_gauss_blur_1_rd48
    // dark_weights_normed_gauss_blur_1_rd49
    // dark_weights_normed_gauss_blur_1_rd50
    // dark_weights_normed_gauss_blur_1_rd51
    // dark_weights_normed_gauss_blur_1_rd52
    // dark_weights_normed_gauss_blur_1_rd53
    // dark_weights_normed_gauss_blur_1_rd54
    // dark_weights_normed_gauss_blur_1_rd55
    // dark_weights_normed_gauss_blur_1_rd56
    // dark_weights_normed_gauss_blur_1_rd57
    // dark_weights_normed_gauss_blur_1_rd58
    // dark_weights_normed_gauss_blur_1_rd59
    // dark_weights_normed_gauss_blur_1_rd60
    // dark_weights_normed_gauss_blur_1_rd61
    // dark_weights_normed_gauss_blur_1_rd62
    // dark_weights_normed_gauss_blur_1_rd63
    // dark_weights_normed_gauss_blur_1_rd64
    // dark_weights_normed_gauss_blur_1_rd65
    // dark_weights_normed_gauss_blur_1_rd66
    // dark_weights_normed_gauss_blur_1_rd67
    // dark_weights_normed_gauss_blur_1_rd68
    // dark_weights_normed_gauss_blur_1_rd69
    // dark_weights_normed_gauss_blur_1_rd70
    // dark_weights_normed_gauss_blur_1_rd71

	hw_uint<1152> result;
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd0_res = dark_weights_normed_gauss_blur_1_rd0_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<0, 1152>(result, dark_weights_normed_gauss_blur_1_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd1_res = dark_weights_normed_gauss_blur_1_rd1_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<16, 1152>(result, dark_weights_normed_gauss_blur_1_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd2_res = dark_weights_normed_gauss_blur_1_rd2_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<32, 1152>(result, dark_weights_normed_gauss_blur_1_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd3_res = dark_weights_normed_gauss_blur_1_rd3_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<48, 1152>(result, dark_weights_normed_gauss_blur_1_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd4_res = dark_weights_normed_gauss_blur_1_rd4_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<64, 1152>(result, dark_weights_normed_gauss_blur_1_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd5_res = dark_weights_normed_gauss_blur_1_rd5_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<80, 1152>(result, dark_weights_normed_gauss_blur_1_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd6_res = dark_weights_normed_gauss_blur_1_rd6_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<96, 1152>(result, dark_weights_normed_gauss_blur_1_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd7_res = dark_weights_normed_gauss_blur_1_rd7_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<112, 1152>(result, dark_weights_normed_gauss_blur_1_rd7_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd8_res = dark_weights_normed_gauss_blur_1_rd8_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<128, 1152>(result, dark_weights_normed_gauss_blur_1_rd8_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd9_res = dark_weights_normed_gauss_blur_1_rd9_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<144, 1152>(result, dark_weights_normed_gauss_blur_1_rd9_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd10_res = dark_weights_normed_gauss_blur_1_rd10_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<160, 1152>(result, dark_weights_normed_gauss_blur_1_rd10_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd11_res = dark_weights_normed_gauss_blur_1_rd11_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<176, 1152>(result, dark_weights_normed_gauss_blur_1_rd11_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd12_res = dark_weights_normed_gauss_blur_1_rd12_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<192, 1152>(result, dark_weights_normed_gauss_blur_1_rd12_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd13_res = dark_weights_normed_gauss_blur_1_rd13_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<208, 1152>(result, dark_weights_normed_gauss_blur_1_rd13_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd14_res = dark_weights_normed_gauss_blur_1_rd14_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<224, 1152>(result, dark_weights_normed_gauss_blur_1_rd14_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd15_res = dark_weights_normed_gauss_blur_1_rd15_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<240, 1152>(result, dark_weights_normed_gauss_blur_1_rd15_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd16_res = dark_weights_normed_gauss_blur_1_rd16_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<256, 1152>(result, dark_weights_normed_gauss_blur_1_rd16_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd17_res = dark_weights_normed_gauss_blur_1_rd17_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<272, 1152>(result, dark_weights_normed_gauss_blur_1_rd17_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd18_res = dark_weights_normed_gauss_blur_1_rd18_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<288, 1152>(result, dark_weights_normed_gauss_blur_1_rd18_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd19_res = dark_weights_normed_gauss_blur_1_rd19_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<304, 1152>(result, dark_weights_normed_gauss_blur_1_rd19_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd20_res = dark_weights_normed_gauss_blur_1_rd20_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<320, 1152>(result, dark_weights_normed_gauss_blur_1_rd20_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd21_res = dark_weights_normed_gauss_blur_1_rd21_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<336, 1152>(result, dark_weights_normed_gauss_blur_1_rd21_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd22_res = dark_weights_normed_gauss_blur_1_rd22_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<352, 1152>(result, dark_weights_normed_gauss_blur_1_rd22_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd23_res = dark_weights_normed_gauss_blur_1_rd23_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<368, 1152>(result, dark_weights_normed_gauss_blur_1_rd23_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd24_res = dark_weights_normed_gauss_blur_1_rd24_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<384, 1152>(result, dark_weights_normed_gauss_blur_1_rd24_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd25_res = dark_weights_normed_gauss_blur_1_rd25_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<400, 1152>(result, dark_weights_normed_gauss_blur_1_rd25_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd26_res = dark_weights_normed_gauss_blur_1_rd26_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<416, 1152>(result, dark_weights_normed_gauss_blur_1_rd26_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd27_res = dark_weights_normed_gauss_blur_1_rd27_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<432, 1152>(result, dark_weights_normed_gauss_blur_1_rd27_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd28_res = dark_weights_normed_gauss_blur_1_rd28_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<448, 1152>(result, dark_weights_normed_gauss_blur_1_rd28_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd29_res = dark_weights_normed_gauss_blur_1_rd29_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<464, 1152>(result, dark_weights_normed_gauss_blur_1_rd29_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd30_res = dark_weights_normed_gauss_blur_1_rd30_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<480, 1152>(result, dark_weights_normed_gauss_blur_1_rd30_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd31_res = dark_weights_normed_gauss_blur_1_rd31_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<496, 1152>(result, dark_weights_normed_gauss_blur_1_rd31_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd32_res = dark_weights_normed_gauss_blur_1_rd32_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<512, 1152>(result, dark_weights_normed_gauss_blur_1_rd32_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd33_res = dark_weights_normed_gauss_blur_1_rd33_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<528, 1152>(result, dark_weights_normed_gauss_blur_1_rd33_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd34_res = dark_weights_normed_gauss_blur_1_rd34_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<544, 1152>(result, dark_weights_normed_gauss_blur_1_rd34_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd35_res = dark_weights_normed_gauss_blur_1_rd35_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<560, 1152>(result, dark_weights_normed_gauss_blur_1_rd35_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd36_res = dark_weights_normed_gauss_blur_1_rd36_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<576, 1152>(result, dark_weights_normed_gauss_blur_1_rd36_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd37_res = dark_weights_normed_gauss_blur_1_rd37_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<592, 1152>(result, dark_weights_normed_gauss_blur_1_rd37_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd38_res = dark_weights_normed_gauss_blur_1_rd38_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<608, 1152>(result, dark_weights_normed_gauss_blur_1_rd38_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd39_res = dark_weights_normed_gauss_blur_1_rd39_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<624, 1152>(result, dark_weights_normed_gauss_blur_1_rd39_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd40_res = dark_weights_normed_gauss_blur_1_rd40_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<640, 1152>(result, dark_weights_normed_gauss_blur_1_rd40_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd41_res = dark_weights_normed_gauss_blur_1_rd41_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<656, 1152>(result, dark_weights_normed_gauss_blur_1_rd41_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd42_res = dark_weights_normed_gauss_blur_1_rd42_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<672, 1152>(result, dark_weights_normed_gauss_blur_1_rd42_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd43_res = dark_weights_normed_gauss_blur_1_rd43_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<688, 1152>(result, dark_weights_normed_gauss_blur_1_rd43_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd44_res = dark_weights_normed_gauss_blur_1_rd44_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<704, 1152>(result, dark_weights_normed_gauss_blur_1_rd44_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd45_res = dark_weights_normed_gauss_blur_1_rd45_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<720, 1152>(result, dark_weights_normed_gauss_blur_1_rd45_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd46_res = dark_weights_normed_gauss_blur_1_rd46_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<736, 1152>(result, dark_weights_normed_gauss_blur_1_rd46_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd47_res = dark_weights_normed_gauss_blur_1_rd47_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<752, 1152>(result, dark_weights_normed_gauss_blur_1_rd47_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd48_res = dark_weights_normed_gauss_blur_1_rd48_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<768, 1152>(result, dark_weights_normed_gauss_blur_1_rd48_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd49_res = dark_weights_normed_gauss_blur_1_rd49_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<784, 1152>(result, dark_weights_normed_gauss_blur_1_rd49_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd50_res = dark_weights_normed_gauss_blur_1_rd50_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<800, 1152>(result, dark_weights_normed_gauss_blur_1_rd50_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd51_res = dark_weights_normed_gauss_blur_1_rd51_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<816, 1152>(result, dark_weights_normed_gauss_blur_1_rd51_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd52_res = dark_weights_normed_gauss_blur_1_rd52_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<832, 1152>(result, dark_weights_normed_gauss_blur_1_rd52_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd53_res = dark_weights_normed_gauss_blur_1_rd53_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<848, 1152>(result, dark_weights_normed_gauss_blur_1_rd53_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd54_res = dark_weights_normed_gauss_blur_1_rd54_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<864, 1152>(result, dark_weights_normed_gauss_blur_1_rd54_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd55_res = dark_weights_normed_gauss_blur_1_rd55_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<880, 1152>(result, dark_weights_normed_gauss_blur_1_rd55_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd56_res = dark_weights_normed_gauss_blur_1_rd56_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<896, 1152>(result, dark_weights_normed_gauss_blur_1_rd56_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd57_res = dark_weights_normed_gauss_blur_1_rd57_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<912, 1152>(result, dark_weights_normed_gauss_blur_1_rd57_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd58_res = dark_weights_normed_gauss_blur_1_rd58_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<928, 1152>(result, dark_weights_normed_gauss_blur_1_rd58_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd59_res = dark_weights_normed_gauss_blur_1_rd59_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<944, 1152>(result, dark_weights_normed_gauss_blur_1_rd59_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd60_res = dark_weights_normed_gauss_blur_1_rd60_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<960, 1152>(result, dark_weights_normed_gauss_blur_1_rd60_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd61_res = dark_weights_normed_gauss_blur_1_rd61_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<976, 1152>(result, dark_weights_normed_gauss_blur_1_rd61_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd62_res = dark_weights_normed_gauss_blur_1_rd62_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<992, 1152>(result, dark_weights_normed_gauss_blur_1_rd62_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd63_res = dark_weights_normed_gauss_blur_1_rd63_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1008, 1152>(result, dark_weights_normed_gauss_blur_1_rd63_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd64_res = dark_weights_normed_gauss_blur_1_rd64_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1024, 1152>(result, dark_weights_normed_gauss_blur_1_rd64_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd65_res = dark_weights_normed_gauss_blur_1_rd65_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1040, 1152>(result, dark_weights_normed_gauss_blur_1_rd65_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd66_res = dark_weights_normed_gauss_blur_1_rd66_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1056, 1152>(result, dark_weights_normed_gauss_blur_1_rd66_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd67_res = dark_weights_normed_gauss_blur_1_rd67_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1072, 1152>(result, dark_weights_normed_gauss_blur_1_rd67_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd68_res = dark_weights_normed_gauss_blur_1_rd68_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1088, 1152>(result, dark_weights_normed_gauss_blur_1_rd68_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd69_res = dark_weights_normed_gauss_blur_1_rd69_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1104, 1152>(result, dark_weights_normed_gauss_blur_1_rd69_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd70_res = dark_weights_normed_gauss_blur_1_rd70_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1120, 1152>(result, dark_weights_normed_gauss_blur_1_rd70_res);
	hw_uint<16> dark_weights_normed_gauss_blur_1_rd71_res = dark_weights_normed_gauss_blur_1_rd71_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<1136, 1152>(result, dark_weights_normed_gauss_blur_1_rd71_res);
	return result;
}

// dark_weights_normed_update_0_write
//	dark_weights_normed_dark_weights_normed_update_0_write0
//	dark_weights_normed_dark_weights_normed_update_0_write1
//	dark_weights_normed_dark_weights_normed_update_0_write2
//	dark_weights_normed_dark_weights_normed_update_0_write3
//	dark_weights_normed_dark_weights_normed_update_0_write4
//	dark_weights_normed_dark_weights_normed_update_0_write5
//	dark_weights_normed_dark_weights_normed_update_0_write6
//	dark_weights_normed_dark_weights_normed_update_0_write7
inline void dark_weights_normed_dark_weights_normed_update_0_write_bundle_write(hw_uint<128>& dark_weights_normed_update_0_write, dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write0_res = dark_weights_normed_update_0_write.extract<0, 15>();
	dark_weights_normed_dark_weights_normed_update_0_write0_write(dark_weights_normed_dark_weights_normed_update_0_write0_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write1_res = dark_weights_normed_update_0_write.extract<16, 31>();
	dark_weights_normed_dark_weights_normed_update_0_write1_write(dark_weights_normed_dark_weights_normed_update_0_write1_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write2_res = dark_weights_normed_update_0_write.extract<32, 47>();
	dark_weights_normed_dark_weights_normed_update_0_write2_write(dark_weights_normed_dark_weights_normed_update_0_write2_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write3_res = dark_weights_normed_update_0_write.extract<48, 63>();
	dark_weights_normed_dark_weights_normed_update_0_write3_write(dark_weights_normed_dark_weights_normed_update_0_write3_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write4_res = dark_weights_normed_update_0_write.extract<64, 79>();
	dark_weights_normed_dark_weights_normed_update_0_write4_write(dark_weights_normed_dark_weights_normed_update_0_write4_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write5_res = dark_weights_normed_update_0_write.extract<80, 95>();
	dark_weights_normed_dark_weights_normed_update_0_write5_write(dark_weights_normed_dark_weights_normed_update_0_write5_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write6_res = dark_weights_normed_update_0_write.extract<96, 111>();
	dark_weights_normed_dark_weights_normed_update_0_write6_write(dark_weights_normed_dark_weights_normed_update_0_write6_res, dark_weights_normed, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_dark_weights_normed_update_0_write7_res = dark_weights_normed_update_0_write.extract<112, 127>();
	dark_weights_normed_dark_weights_normed_update_0_write7_write(dark_weights_normed_dark_weights_normed_update_0_write7_res, dark_weights_normed, d0, d1, dynamic_address);
}

// fused_level_0_update_0_read
//	fused_level_0_rd0
//	fused_level_0_rd1
//	fused_level_0_rd2
//	fused_level_0_rd3
//	fused_level_0_rd4
//	fused_level_0_rd5
//	fused_level_0_rd6
//	fused_level_0_rd7
inline hw_uint<128> dark_weights_normed_fused_level_0_update_0_read_bundle_read(dark_weights_normed_cache& dark_weights_normed, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // fused_level_0_rd0
    // fused_level_0_rd1
    // fused_level_0_rd2
    // fused_level_0_rd3
    // fused_level_0_rd4
    // fused_level_0_rd5
    // fused_level_0_rd6
    // fused_level_0_rd7

	hw_uint<128> result;
	hw_uint<16> fused_level_0_rd0_res = fused_level_0_rd0_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<0, 128>(result, fused_level_0_rd0_res);
	hw_uint<16> fused_level_0_rd1_res = fused_level_0_rd1_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<16, 128>(result, fused_level_0_rd1_res);
	hw_uint<16> fused_level_0_rd2_res = fused_level_0_rd2_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<32, 128>(result, fused_level_0_rd2_res);
	hw_uint<16> fused_level_0_rd3_res = fused_level_0_rd3_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<48, 128>(result, fused_level_0_rd3_res);
	hw_uint<16> fused_level_0_rd4_res = fused_level_0_rd4_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<64, 128>(result, fused_level_0_rd4_res);
	hw_uint<16> fused_level_0_rd5_res = fused_level_0_rd5_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<80, 128>(result, fused_level_0_rd5_res);
	hw_uint<16> fused_level_0_rd6_res = fused_level_0_rd6_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<96, 128>(result, fused_level_0_rd6_res);
	hw_uint<16> fused_level_0_rd7_res = fused_level_0_rd7_select(dark_weights_normed, d0, d1, dynamic_address);
	set_at<112, 128>(result, fused_level_0_rd7_res);
	return result;
}

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0_cache {
	// RAM Box: {[-16, 1088], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1_cache {
	// RAM Box: {[-14, 1090], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2_cache {
	// RAM Box: {[-12, 1092], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3_cache {
	// RAM Box: {[-10, 1094], [-6, 1918]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_1_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
    // { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // # of banks: 4
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2;
  dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3_cache dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3;
};



inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3.push(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6);
}

inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_write(hw_uint<16>& dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd0_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd0 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_to_dark_weights_normed_gauss_ds_1_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd1_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd1 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[2 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_to_dark_weights_normed_gauss_ds_1_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd2_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd2 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[4 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_to_dark_weights_normed_gauss_ds_1_rd2.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_1_rd3_select(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_1_rd3 read pattern: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> dark_weights_normed_gauss_blur_1[6 + 8d0, 2d1] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Read schedule : { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
  auto value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6 = dark_weights_normed_gauss_blur_1.dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_to_dark_weights_normed_gauss_ds_1_rd3.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_1_update_0_write
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6
//	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7
inline void dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write_bundle_write(hw_uint<128>& dark_weights_normed_gauss_blur_1_update_0_write, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write0_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write1_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write2_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write3_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<64, 79>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write4_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<80, 95>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write5_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<96, 111>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write6_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_res = dark_weights_normed_gauss_blur_1_update_0_write.extract<112, 127>();
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_write(dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write7_res, dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
}

// dark_weights_normed_gauss_ds_1_update_0_read
//	dark_weights_normed_gauss_ds_1_rd0
//	dark_weights_normed_gauss_ds_1_rd1
//	dark_weights_normed_gauss_ds_1_rd2
//	dark_weights_normed_gauss_ds_1_rd3
inline hw_uint<64> dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_ds_1_update_0_read_bundle_read(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // dark_weights_normed_gauss_ds_1_rd0
    // dark_weights_normed_gauss_ds_1_rd1
    // dark_weights_normed_gauss_ds_1_rd2
    // dark_weights_normed_gauss_ds_1_rd3

	hw_uint<64> result;
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd0_res = dark_weights_normed_gauss_ds_1_rd0_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, dark_weights_normed_gauss_ds_1_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd1_res = dark_weights_normed_gauss_ds_1_rd1_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, dark_weights_normed_gauss_ds_1_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd2_res = dark_weights_normed_gauss_ds_1_rd2_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, dark_weights_normed_gauss_ds_1_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_ds_1_rd3_res = dark_weights_normed_gauss_ds_1_rd3_select(dark_weights_normed_gauss_blur_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, dark_weights_normed_gauss_ds_1_rd3_res);
	return result;
}

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0_cache {
	// RAM Box: {[-4, 540], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1_cache {
	// RAM Box: {[-2, 542], [-2, 958]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_2_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
    // { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // # of banks: 2
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0;
  dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1_cache dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1;
};



inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0);
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1.push(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2);
}

inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_rd0_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_rd0 read pattern: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_to_dark_weights_normed_gauss_ds_2_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_ds_2_rd1_select(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_2_rd1 read pattern: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> dark_weights_normed_gauss_blur_2[2 + 4d0, 2d1] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Read schedule : { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  // Write schedule: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  auto value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2 = dark_weights_normed_gauss_blur_2.dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_to_dark_weights_normed_gauss_ds_2_rd1.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_2_update_0_write
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2
//	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3
inline void dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write_bundle_write(hw_uint<64>& dark_weights_normed_gauss_blur_2_update_0_write, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write0_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write1_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write2_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_res = dark_weights_normed_gauss_blur_2_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_write(dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write3_res, dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
}

// dark_weights_normed_gauss_ds_2_update_0_read
//	dark_weights_normed_gauss_ds_2_rd0
//	dark_weights_normed_gauss_ds_2_rd1
inline hw_uint<32> dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_ds_2_update_0_read_bundle_read(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // dark_weights_normed_gauss_ds_2_rd0
    // dark_weights_normed_gauss_ds_2_rd1

	hw_uint<32> result;
	hw_uint<16> dark_weights_normed_gauss_ds_2_rd0_res = dark_weights_normed_gauss_ds_2_rd0_select(dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, dark_weights_normed_gauss_ds_2_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_ds_2_rd1_res = dark_weights_normed_gauss_ds_2_rd1_select(dark_weights_normed_gauss_blur_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, dark_weights_normed_gauss_ds_2_rd1_res);
	return result;
}

struct dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0_cache {
	// RAM Box: {[0, 268], [0, 478]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_blur_3_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> dark_weights_normed_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 1
  dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0_cache dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0;
};



inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0.push(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0);
}

inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
}

inline hw_uint<16> dark_weights_normed_gauss_ds_3_rd0_select(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_ds_3_rd0 read pattern: { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> dark_weights_normed_gauss_blur_3[2d0, 2d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 30] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  auto value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0 = dark_weights_normed_gauss_blur_3.dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_to_dark_weights_normed_gauss_ds_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_blur_3_update_0_write
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0
//	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1
inline void dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write_bundle_write(hw_uint<32>& dark_weights_normed_gauss_blur_3_update_0_write, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_res = dark_weights_normed_gauss_blur_3_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write0_res, dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_res = dark_weights_normed_gauss_blur_3_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_write(dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write1_res, dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
}

// dark_weights_normed_gauss_ds_3_update_0_read
//	dark_weights_normed_gauss_ds_3_rd0
inline hw_uint<16> dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_ds_3_update_0_read_bundle_read(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // dark_weights_normed_gauss_ds_3_rd0

	hw_uint<16> result;
	hw_uint<16> dark_weights_normed_gauss_ds_3_rd0_res = dark_weights_normed_gauss_ds_3_rd0_select(dark_weights_normed_gauss_blur_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, dark_weights_normed_gauss_ds_3_rd0_res);
	return result;
}

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 141
	// # of read delays: 140
  // 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
	fifo<hw_uint<16>, 141> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(140 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[-4, 544], [-3, 959]}
	// Capacity: 280
	// # of read delays: 6
  // 0, 1, 139, 140, 278, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 137> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 137> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_138() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_139() {
		return f4;
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_277() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_278() {
		return f8;
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-3, 541], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9_cache {
	// RAM Box: {[-2, 542], [-3, 959]}
	// Capacity: 280
	// # of read delays: 4
  // 0, 1, 140, 279
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 138> f3;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 138> f5;
	hw_uint<16> f6;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_140() {
		return f4;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_279() {
		return f6;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 138
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 138 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9_cache {
	// RAM Box: {[-5, 543], [-3, 959]}
	// Capacity: 281
	// # of read delays: 7
  // 0, 1, 2, 140, 141, 279, 280
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 137> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 137> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_139() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_140() {
		return f6;
	}

	inline hw_uint<16> peek_141() {
		return f8;
	}

	inline hw_uint<16> peek_278() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_279() {
		return f10;
	}

	inline hw_uint<16> peek_280() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 137
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 137 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_1_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
    // { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 8
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9;
  dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9_cache dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9;
};



inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0);
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1);
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2);
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2);
}

inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_write(hw_uint<16>& dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3);
  dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.push(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd0_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd0 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[-1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_280();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd1_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd1 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[-1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_141();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd10_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd10 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd11_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd11 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd12_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd12 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd13_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd13 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd14_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd14 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd15_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd15 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd16_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd16 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd17_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd17 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd18_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd18 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd19_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd19 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd2_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd2 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[-1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_2();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd20_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd20 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd21_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd21 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd22_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd22 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd23_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd23 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd24_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd24 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd25_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd25 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd26_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd26 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd27_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd27 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd28_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd28 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd29_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd29 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd3_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd3 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd30_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd30 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd31_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd31 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd32_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd32 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd33_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd33 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_278();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd34_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd34 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_139();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd35_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd35 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd4_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd4 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd5_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd5 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd6_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd6 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd7_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd7 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_140();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd8_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd8 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, 1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_2_rd9_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_2_rd9 read pattern: { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, -1 + d1] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Read schedule : { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_merged_banks_9.peek_279();
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd0_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd0 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_to_fused_level_1_rd0.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_1_rd1_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd1 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_to_fused_level_1_rd1.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1;
  return 0;
}

inline hw_uint<16> fused_level_1_rd2_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd2 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_to_fused_level_1_rd2.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2;
  return 0;
}

inline hw_uint<16> fused_level_1_rd3_select(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_1_rd3 read pattern: { fused_level_1_update_0[d0, d1] -> dark_weights_normed_gauss_ds_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
  auto value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3 = dark_weights_normed_gauss_ds_1.dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_to_fused_level_1_rd3.peek(/* one reader or all rams */ (958 - d1 >= 0) ? (140) : (-959 + d1 == 0) ? ((136 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_blur_2_update_0_read
//	dark_weights_normed_gauss_blur_2_rd0
//	dark_weights_normed_gauss_blur_2_rd1
//	dark_weights_normed_gauss_blur_2_rd2
//	dark_weights_normed_gauss_blur_2_rd3
//	dark_weights_normed_gauss_blur_2_rd4
//	dark_weights_normed_gauss_blur_2_rd5
//	dark_weights_normed_gauss_blur_2_rd6
//	dark_weights_normed_gauss_blur_2_rd7
//	dark_weights_normed_gauss_blur_2_rd8
//	dark_weights_normed_gauss_blur_2_rd9
//	dark_weights_normed_gauss_blur_2_rd10
//	dark_weights_normed_gauss_blur_2_rd11
//	dark_weights_normed_gauss_blur_2_rd12
//	dark_weights_normed_gauss_blur_2_rd13
//	dark_weights_normed_gauss_blur_2_rd14
//	dark_weights_normed_gauss_blur_2_rd15
//	dark_weights_normed_gauss_blur_2_rd16
//	dark_weights_normed_gauss_blur_2_rd17
//	dark_weights_normed_gauss_blur_2_rd18
//	dark_weights_normed_gauss_blur_2_rd19
//	dark_weights_normed_gauss_blur_2_rd20
//	dark_weights_normed_gauss_blur_2_rd21
//	dark_weights_normed_gauss_blur_2_rd22
//	dark_weights_normed_gauss_blur_2_rd23
//	dark_weights_normed_gauss_blur_2_rd24
//	dark_weights_normed_gauss_blur_2_rd25
//	dark_weights_normed_gauss_blur_2_rd26
//	dark_weights_normed_gauss_blur_2_rd27
//	dark_weights_normed_gauss_blur_2_rd28
//	dark_weights_normed_gauss_blur_2_rd29
//	dark_weights_normed_gauss_blur_2_rd30
//	dark_weights_normed_gauss_blur_2_rd31
//	dark_weights_normed_gauss_blur_2_rd32
//	dark_weights_normed_gauss_blur_2_rd33
//	dark_weights_normed_gauss_blur_2_rd34
//	dark_weights_normed_gauss_blur_2_rd35
inline hw_uint<576> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_blur_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 36
    // dark_weights_normed_gauss_blur_2_rd0
    // dark_weights_normed_gauss_blur_2_rd1
    // dark_weights_normed_gauss_blur_2_rd2
    // dark_weights_normed_gauss_blur_2_rd3
    // dark_weights_normed_gauss_blur_2_rd4
    // dark_weights_normed_gauss_blur_2_rd5
    // dark_weights_normed_gauss_blur_2_rd6
    // dark_weights_normed_gauss_blur_2_rd7
    // dark_weights_normed_gauss_blur_2_rd8
    // dark_weights_normed_gauss_blur_2_rd9
    // dark_weights_normed_gauss_blur_2_rd10
    // dark_weights_normed_gauss_blur_2_rd11
    // dark_weights_normed_gauss_blur_2_rd12
    // dark_weights_normed_gauss_blur_2_rd13
    // dark_weights_normed_gauss_blur_2_rd14
    // dark_weights_normed_gauss_blur_2_rd15
    // dark_weights_normed_gauss_blur_2_rd16
    // dark_weights_normed_gauss_blur_2_rd17
    // dark_weights_normed_gauss_blur_2_rd18
    // dark_weights_normed_gauss_blur_2_rd19
    // dark_weights_normed_gauss_blur_2_rd20
    // dark_weights_normed_gauss_blur_2_rd21
    // dark_weights_normed_gauss_blur_2_rd22
    // dark_weights_normed_gauss_blur_2_rd23
    // dark_weights_normed_gauss_blur_2_rd24
    // dark_weights_normed_gauss_blur_2_rd25
    // dark_weights_normed_gauss_blur_2_rd26
    // dark_weights_normed_gauss_blur_2_rd27
    // dark_weights_normed_gauss_blur_2_rd28
    // dark_weights_normed_gauss_blur_2_rd29
    // dark_weights_normed_gauss_blur_2_rd30
    // dark_weights_normed_gauss_blur_2_rd31
    // dark_weights_normed_gauss_blur_2_rd32
    // dark_weights_normed_gauss_blur_2_rd33
    // dark_weights_normed_gauss_blur_2_rd34
    // dark_weights_normed_gauss_blur_2_rd35

	hw_uint<576> result;
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd0_res = dark_weights_normed_gauss_blur_2_rd0_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 576>(result, dark_weights_normed_gauss_blur_2_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd1_res = dark_weights_normed_gauss_blur_2_rd1_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 576>(result, dark_weights_normed_gauss_blur_2_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd2_res = dark_weights_normed_gauss_blur_2_rd2_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 576>(result, dark_weights_normed_gauss_blur_2_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd3_res = dark_weights_normed_gauss_blur_2_rd3_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 576>(result, dark_weights_normed_gauss_blur_2_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd4_res = dark_weights_normed_gauss_blur_2_rd4_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<64, 576>(result, dark_weights_normed_gauss_blur_2_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd5_res = dark_weights_normed_gauss_blur_2_rd5_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<80, 576>(result, dark_weights_normed_gauss_blur_2_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd6_res = dark_weights_normed_gauss_blur_2_rd6_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<96, 576>(result, dark_weights_normed_gauss_blur_2_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd7_res = dark_weights_normed_gauss_blur_2_rd7_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<112, 576>(result, dark_weights_normed_gauss_blur_2_rd7_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd8_res = dark_weights_normed_gauss_blur_2_rd8_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<128, 576>(result, dark_weights_normed_gauss_blur_2_rd8_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd9_res = dark_weights_normed_gauss_blur_2_rd9_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<144, 576>(result, dark_weights_normed_gauss_blur_2_rd9_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd10_res = dark_weights_normed_gauss_blur_2_rd10_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<160, 576>(result, dark_weights_normed_gauss_blur_2_rd10_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd11_res = dark_weights_normed_gauss_blur_2_rd11_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<176, 576>(result, dark_weights_normed_gauss_blur_2_rd11_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd12_res = dark_weights_normed_gauss_blur_2_rd12_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<192, 576>(result, dark_weights_normed_gauss_blur_2_rd12_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd13_res = dark_weights_normed_gauss_blur_2_rd13_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<208, 576>(result, dark_weights_normed_gauss_blur_2_rd13_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd14_res = dark_weights_normed_gauss_blur_2_rd14_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<224, 576>(result, dark_weights_normed_gauss_blur_2_rd14_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd15_res = dark_weights_normed_gauss_blur_2_rd15_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<240, 576>(result, dark_weights_normed_gauss_blur_2_rd15_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd16_res = dark_weights_normed_gauss_blur_2_rd16_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<256, 576>(result, dark_weights_normed_gauss_blur_2_rd16_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd17_res = dark_weights_normed_gauss_blur_2_rd17_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<272, 576>(result, dark_weights_normed_gauss_blur_2_rd17_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd18_res = dark_weights_normed_gauss_blur_2_rd18_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<288, 576>(result, dark_weights_normed_gauss_blur_2_rd18_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd19_res = dark_weights_normed_gauss_blur_2_rd19_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<304, 576>(result, dark_weights_normed_gauss_blur_2_rd19_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd20_res = dark_weights_normed_gauss_blur_2_rd20_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<320, 576>(result, dark_weights_normed_gauss_blur_2_rd20_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd21_res = dark_weights_normed_gauss_blur_2_rd21_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<336, 576>(result, dark_weights_normed_gauss_blur_2_rd21_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd22_res = dark_weights_normed_gauss_blur_2_rd22_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<352, 576>(result, dark_weights_normed_gauss_blur_2_rd22_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd23_res = dark_weights_normed_gauss_blur_2_rd23_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<368, 576>(result, dark_weights_normed_gauss_blur_2_rd23_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd24_res = dark_weights_normed_gauss_blur_2_rd24_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<384, 576>(result, dark_weights_normed_gauss_blur_2_rd24_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd25_res = dark_weights_normed_gauss_blur_2_rd25_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<400, 576>(result, dark_weights_normed_gauss_blur_2_rd25_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd26_res = dark_weights_normed_gauss_blur_2_rd26_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<416, 576>(result, dark_weights_normed_gauss_blur_2_rd26_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd27_res = dark_weights_normed_gauss_blur_2_rd27_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<432, 576>(result, dark_weights_normed_gauss_blur_2_rd27_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd28_res = dark_weights_normed_gauss_blur_2_rd28_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<448, 576>(result, dark_weights_normed_gauss_blur_2_rd28_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd29_res = dark_weights_normed_gauss_blur_2_rd29_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<464, 576>(result, dark_weights_normed_gauss_blur_2_rd29_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd30_res = dark_weights_normed_gauss_blur_2_rd30_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<480, 576>(result, dark_weights_normed_gauss_blur_2_rd30_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd31_res = dark_weights_normed_gauss_blur_2_rd31_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<496, 576>(result, dark_weights_normed_gauss_blur_2_rd31_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd32_res = dark_weights_normed_gauss_blur_2_rd32_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<512, 576>(result, dark_weights_normed_gauss_blur_2_rd32_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd33_res = dark_weights_normed_gauss_blur_2_rd33_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<528, 576>(result, dark_weights_normed_gauss_blur_2_rd33_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd34_res = dark_weights_normed_gauss_blur_2_rd34_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<544, 576>(result, dark_weights_normed_gauss_blur_2_rd34_res);
	hw_uint<16> dark_weights_normed_gauss_blur_2_rd35_res = dark_weights_normed_gauss_blur_2_rd35_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<560, 576>(result, dark_weights_normed_gauss_blur_2_rd35_res);
	return result;
}

// dark_weights_normed_gauss_ds_1_update_0_write
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2
//	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3
inline void dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write_bundle_write(hw_uint<64>& dark_weights_normed_gauss_ds_1_update_0_write, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write0_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write1_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<32, 47>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write2_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_res = dark_weights_normed_gauss_ds_1_update_0_write.extract<48, 63>();
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_write(dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write3_res, dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
}

// fused_level_1_update_0_read
//	fused_level_1_rd0
//	fused_level_1_rd1
//	fused_level_1_rd2
//	fused_level_1_rd3
inline hw_uint<64> dark_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // fused_level_1_rd0
    // fused_level_1_rd1
    // fused_level_1_rd2
    // fused_level_1_rd3

	hw_uint<64> result;
	hw_uint<16> fused_level_1_rd0_res = fused_level_1_rd0_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, fused_level_1_rd0_res);
	hw_uint<16> fused_level_1_rd1_res = fused_level_1_rd1_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, fused_level_1_rd1_res);
	hw_uint<16> fused_level_1_rd2_res = fused_level_1_rd2_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, fused_level_1_rd2_res);
	hw_uint<16> fused_level_1_rd3_res = fused_level_1_rd3_select(dark_weights_normed_gauss_ds_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, fused_level_1_rd3_res);
	return result;
}

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 139
	// # of read delays: 139
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
	fifo<hw_uint<16>, 139> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(138 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache {
	// RAM Box: {[0, 270], [-1, 479]}
	// Capacity: 276
	// # of read delays: 6
  // 0, 1, 137, 138, 274, 275
	hw_uint<16> f0;
	hw_uint<16> f2;
	fifo<hw_uint<16>, 135> f3;
	hw_uint<16> f4;
	hw_uint<16> f6;
	fifo<hw_uint<16>, 135> f7;
	hw_uint<16> f8;
	hw_uint<16> f10;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_136() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f3.back();
	}

	inline hw_uint<16> peek_137() {
		return f4;
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_273() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f7.back();
	}

	inline hw_uint<16> peek_274() {
		return f8;
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f10 = f8;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f8 = f7.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f7.push(f6);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f6 = f4;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f4 = f3.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f3.push(f2);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache {
	// RAM Box: {[-1, 269], [-1, 479]}
	// Capacity: 277
	// # of read delays: 7
  // 0, 1, 2, 138, 139, 275, 276
	hw_uint<16> f0;
	hw_uint<16> f2;
	hw_uint<16> f4;
	fifo<hw_uint<16>, 135> f5;
	hw_uint<16> f6;
	hw_uint<16> f8;
	fifo<hw_uint<16>, 135> f9;
	hw_uint<16> f10;
	hw_uint<16> f12;


	inline hw_uint<16> peek_0() {
		return f0;
	}

	inline hw_uint<16> peek_1() {
		return f2;
	}

	inline hw_uint<16> peek_2() {
		return f4;
	}

	inline hw_uint<16> peek_137() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f5.back();
	}

	inline hw_uint<16> peek_138() {
		return f6;
	}

	inline hw_uint<16> peek_139() {
		return f8;
	}

	inline hw_uint<16> peek_274() {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
		return f9.back();
	}

	inline hw_uint<16> peek_275() {
		return f10;
	}

	inline hw_uint<16> peek_276() {
		return f12;
	}



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f12 = f10;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f10 = f9.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f9.push(f8);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f8 = f6;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 135
    f6 = f5.back();
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 135 reading from capacity: 1
    f5.push(f4);
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f4 = f2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    // cap: 1 reading from capacity: 1
    f2 = f0;
    // cap: 1
    f0 = value;
	}

};

struct dark_weights_normed_gauss_ds_2_cache {
  // Reader addrs...
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
    // { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 4
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9;
  dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9_cache dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9;
};



inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0);
}

inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_write(hw_uint<16>& dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1);
  dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.push(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1);
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd0_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd0 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[-1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_276();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd1_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd1 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[-1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_139();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd10_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd10 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd11_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd11 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd12_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd12 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd13_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd13 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd14_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd14 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd15_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd15 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_274();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd16_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd16 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_137();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd17_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd17 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_0();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd2_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd2 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[-1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_2();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd3_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd3 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd4_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd4 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_138();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd5_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd5 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd6_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd6 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_275();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd7_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd7 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_138();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd8_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd8 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, 1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_merged_banks_9.peek_1();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_weights_normed_gauss_blur_3_rd9_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_weights_normed_gauss_blur_3_rd9 read pattern: { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, -1 + d1] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Read schedule : { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_merged_banks_9.peek_275();
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd0_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd0 read pattern: { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_to_fused_level_2_rd0.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0;
  return 0;
}

inline hw_uint<16> fused_level_2_rd1_select(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_2_rd1 read pattern: { fused_level_2_update_0[d0, d1] -> dark_weights_normed_gauss_ds_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
  auto value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1 = dark_weights_normed_gauss_ds_2.dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_to_fused_level_2_rd1.peek(/* one reader or all rams */ (478 - d1 >= 0) ? (138) : (-479 + d1 == 0) ? ((135 - d0)) : 0);
  return value_dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1;
  return 0;
}

// # of bundles = 3
// dark_weights_normed_gauss_blur_3_update_0_read
//	dark_weights_normed_gauss_blur_3_rd0
//	dark_weights_normed_gauss_blur_3_rd1
//	dark_weights_normed_gauss_blur_3_rd2
//	dark_weights_normed_gauss_blur_3_rd3
//	dark_weights_normed_gauss_blur_3_rd4
//	dark_weights_normed_gauss_blur_3_rd5
//	dark_weights_normed_gauss_blur_3_rd6
//	dark_weights_normed_gauss_blur_3_rd7
//	dark_weights_normed_gauss_blur_3_rd8
//	dark_weights_normed_gauss_blur_3_rd9
//	dark_weights_normed_gauss_blur_3_rd10
//	dark_weights_normed_gauss_blur_3_rd11
//	dark_weights_normed_gauss_blur_3_rd12
//	dark_weights_normed_gauss_blur_3_rd13
//	dark_weights_normed_gauss_blur_3_rd14
//	dark_weights_normed_gauss_blur_3_rd15
//	dark_weights_normed_gauss_blur_3_rd16
//	dark_weights_normed_gauss_blur_3_rd17
inline hw_uint<288> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_blur_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 18
    // dark_weights_normed_gauss_blur_3_rd0
    // dark_weights_normed_gauss_blur_3_rd1
    // dark_weights_normed_gauss_blur_3_rd2
    // dark_weights_normed_gauss_blur_3_rd3
    // dark_weights_normed_gauss_blur_3_rd4
    // dark_weights_normed_gauss_blur_3_rd5
    // dark_weights_normed_gauss_blur_3_rd6
    // dark_weights_normed_gauss_blur_3_rd7
    // dark_weights_normed_gauss_blur_3_rd8
    // dark_weights_normed_gauss_blur_3_rd9
    // dark_weights_normed_gauss_blur_3_rd10
    // dark_weights_normed_gauss_blur_3_rd11
    // dark_weights_normed_gauss_blur_3_rd12
    // dark_weights_normed_gauss_blur_3_rd13
    // dark_weights_normed_gauss_blur_3_rd14
    // dark_weights_normed_gauss_blur_3_rd15
    // dark_weights_normed_gauss_blur_3_rd16
    // dark_weights_normed_gauss_blur_3_rd17

	hw_uint<288> result;
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd0_res = dark_weights_normed_gauss_blur_3_rd0_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 288>(result, dark_weights_normed_gauss_blur_3_rd0_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd1_res = dark_weights_normed_gauss_blur_3_rd1_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 288>(result, dark_weights_normed_gauss_blur_3_rd1_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd2_res = dark_weights_normed_gauss_blur_3_rd2_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<32, 288>(result, dark_weights_normed_gauss_blur_3_rd2_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd3_res = dark_weights_normed_gauss_blur_3_rd3_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<48, 288>(result, dark_weights_normed_gauss_blur_3_rd3_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd4_res = dark_weights_normed_gauss_blur_3_rd4_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<64, 288>(result, dark_weights_normed_gauss_blur_3_rd4_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd5_res = dark_weights_normed_gauss_blur_3_rd5_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<80, 288>(result, dark_weights_normed_gauss_blur_3_rd5_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd6_res = dark_weights_normed_gauss_blur_3_rd6_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<96, 288>(result, dark_weights_normed_gauss_blur_3_rd6_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd7_res = dark_weights_normed_gauss_blur_3_rd7_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<112, 288>(result, dark_weights_normed_gauss_blur_3_rd7_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd8_res = dark_weights_normed_gauss_blur_3_rd8_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<128, 288>(result, dark_weights_normed_gauss_blur_3_rd8_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd9_res = dark_weights_normed_gauss_blur_3_rd9_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<144, 288>(result, dark_weights_normed_gauss_blur_3_rd9_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd10_res = dark_weights_normed_gauss_blur_3_rd10_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<160, 288>(result, dark_weights_normed_gauss_blur_3_rd10_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd11_res = dark_weights_normed_gauss_blur_3_rd11_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<176, 288>(result, dark_weights_normed_gauss_blur_3_rd11_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd12_res = dark_weights_normed_gauss_blur_3_rd12_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<192, 288>(result, dark_weights_normed_gauss_blur_3_rd12_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd13_res = dark_weights_normed_gauss_blur_3_rd13_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<208, 288>(result, dark_weights_normed_gauss_blur_3_rd13_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd14_res = dark_weights_normed_gauss_blur_3_rd14_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<224, 288>(result, dark_weights_normed_gauss_blur_3_rd14_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd15_res = dark_weights_normed_gauss_blur_3_rd15_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<240, 288>(result, dark_weights_normed_gauss_blur_3_rd15_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd16_res = dark_weights_normed_gauss_blur_3_rd16_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<256, 288>(result, dark_weights_normed_gauss_blur_3_rd16_res);
	hw_uint<16> dark_weights_normed_gauss_blur_3_rd17_res = dark_weights_normed_gauss_blur_3_rd17_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<272, 288>(result, dark_weights_normed_gauss_blur_3_rd17_res);
	return result;
}

// dark_weights_normed_gauss_ds_2_update_0_write
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0
//	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1
inline void dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write_bundle_write(hw_uint<32>& dark_weights_normed_gauss_ds_2_update_0_write, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_res = dark_weights_normed_gauss_ds_2_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write0_res, dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	hw_uint<16> dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_res = dark_weights_normed_gauss_ds_2_update_0_write.extract<16, 31>();
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_write(dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write1_res, dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
}

// fused_level_2_update_0_read
//	fused_level_2_rd0
//	fused_level_2_rd1
inline hw_uint<32> dark_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // fused_level_2_rd0
    // fused_level_2_rd1

	hw_uint<32> result;
	hw_uint<16> fused_level_2_rd0_res = fused_level_2_rd0_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, fused_level_2_rd0_res);
	hw_uint<16> fused_level_2_rd1_res = fused_level_2_rd1_select(dark_weights_normed_gauss_ds_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, fused_level_2_rd1_res);
	return result;
}

struct dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct dark_weights_normed_gauss_ds_3_cache {
  // Reader addrs...
    // { fused_level_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // # of banks: 1
  dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0_cache dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0;
};



inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.push(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0);
}

inline hw_uint<16> fused_level_3_rd0_select(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // fused_level_3_rd0 read pattern: { fused_level_3_update_0[d0, d1] -> dark_weights_normed_gauss_ds_3[d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Read schedule : { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  // Write schedule: { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 30] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0 = dark_weights_normed_gauss_ds_3.dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_to_fused_level_3_rd0.peek(/* one reader or all rams */ 0);
  return value_dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// dark_weights_normed_gauss_ds_3_update_0_write
//	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0
inline void dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write_bundle_write(hw_uint<16>& dark_weights_normed_gauss_ds_3_update_0_write, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_res = dark_weights_normed_gauss_ds_3_update_0_write.extract<0, 15>();
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_write(dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write0_res, dark_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
}

// fused_level_3_update_0_read
//	fused_level_3_rd0
inline hw_uint<16> dark_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 1
    // fused_level_3_rd0

	hw_uint<16> result;
	hw_uint<16> fused_level_3_rd0_res = fused_level_3_rd0_select(dark_weights_normed_gauss_ds_3, d0, d1, dynamic_address);
	set_at<0, 16>(result, fused_level_3_rd0_res);
	return result;
}

struct final_merged_0_final_merged_0_update_0_write0_to_ef_8_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write1_to_ef_8_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write2_to_ef_8_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write3_to_ef_8_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write4_to_ef_8_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write5_to_ef_8_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write6_to_ef_8_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_final_merged_0_update_0_write7_to_ef_8_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_0_cache {
  // Reader addrs...
    // { ef_8_update_0[d0, d1] -> final_merged_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { ef_8_update_0[d0, d1] -> final_merged_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 8
  final_merged_0_final_merged_0_update_0_write0_to_ef_8_rd0_cache final_merged_0_final_merged_0_update_0_write0_to_ef_8_rd0;
  final_merged_0_final_merged_0_update_0_write1_to_ef_8_rd1_cache final_merged_0_final_merged_0_update_0_write1_to_ef_8_rd1;
  final_merged_0_final_merged_0_update_0_write2_to_ef_8_rd2_cache final_merged_0_final_merged_0_update_0_write2_to_ef_8_rd2;
  final_merged_0_final_merged_0_update_0_write3_to_ef_8_rd3_cache final_merged_0_final_merged_0_update_0_write3_to_ef_8_rd3;
  final_merged_0_final_merged_0_update_0_write4_to_ef_8_rd4_cache final_merged_0_final_merged_0_update_0_write4_to_ef_8_rd4;
  final_merged_0_final_merged_0_update_0_write5_to_ef_8_rd5_cache final_merged_0_final_merged_0_update_0_write5_to_ef_8_rd5;
  final_merged_0_final_merged_0_update_0_write6_to_ef_8_rd6_cache final_merged_0_final_merged_0_update_0_write6_to_ef_8_rd6;
  final_merged_0_final_merged_0_update_0_write7_to_ef_8_rd7_cache final_merged_0_final_merged_0_update_0_write7_to_ef_8_rd7;
};



inline void final_merged_0_final_merged_0_update_0_write0_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write0, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write0_to_ef_8_rd0.push(final_merged_0_final_merged_0_update_0_write0);
}

inline void final_merged_0_final_merged_0_update_0_write1_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write1, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write1_to_ef_8_rd1.push(final_merged_0_final_merged_0_update_0_write1);
}

inline void final_merged_0_final_merged_0_update_0_write2_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write2, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write2_to_ef_8_rd2.push(final_merged_0_final_merged_0_update_0_write2);
}

inline void final_merged_0_final_merged_0_update_0_write3_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write3, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write3_to_ef_8_rd3.push(final_merged_0_final_merged_0_update_0_write3);
}

inline void final_merged_0_final_merged_0_update_0_write4_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write4, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write4_to_ef_8_rd4.push(final_merged_0_final_merged_0_update_0_write4);
}

inline void final_merged_0_final_merged_0_update_0_write5_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write5, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write5_to_ef_8_rd5.push(final_merged_0_final_merged_0_update_0_write5);
}

inline void final_merged_0_final_merged_0_update_0_write6_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write6, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write6_to_ef_8_rd6.push(final_merged_0_final_merged_0_update_0_write6);
}

inline void final_merged_0_final_merged_0_update_0_write7_write(hw_uint<16>& final_merged_0_final_merged_0_update_0_write7, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  final_merged_0.final_merged_0_final_merged_0_update_0_write7_to_ef_8_rd7.push(final_merged_0_final_merged_0_update_0_write7);
}

inline hw_uint<16> ef_8_rd0_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd0 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write0 = final_merged_0.final_merged_0_final_merged_0_update_0_write0_to_ef_8_rd0.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write0;
  return 0;
}

inline hw_uint<16> ef_8_rd1_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd1 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write1 = final_merged_0.final_merged_0_final_merged_0_update_0_write1_to_ef_8_rd1.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write1;
  return 0;
}

inline hw_uint<16> ef_8_rd2_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd2 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write2 = final_merged_0.final_merged_0_final_merged_0_update_0_write2_to_ef_8_rd2.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write2;
  return 0;
}

inline hw_uint<16> ef_8_rd3_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd3 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write3 = final_merged_0.final_merged_0_final_merged_0_update_0_write3_to_ef_8_rd3.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write3;
  return 0;
}

inline hw_uint<16> ef_8_rd4_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd4 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write4 = final_merged_0.final_merged_0_final_merged_0_update_0_write4_to_ef_8_rd4.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write4;
  return 0;
}

inline hw_uint<16> ef_8_rd5_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd5 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write5 = final_merged_0.final_merged_0_final_merged_0_update_0_write5_to_ef_8_rd5.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write5;
  return 0;
}

inline hw_uint<16> ef_8_rd6_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd6 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write6 = final_merged_0.final_merged_0_final_merged_0_update_0_write6_to_ef_8_rd6.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write6;
  return 0;
}

inline hw_uint<16> ef_8_rd7_select(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // ef_8_rd7 read pattern: { ef_8_update_0[d0, d1] -> final_merged_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_final_merged_0_final_merged_0_update_0_write7 = final_merged_0.final_merged_0_final_merged_0_update_0_write7_to_ef_8_rd7.peek(/* one reader or all rams */ 0);
  return value_final_merged_0_final_merged_0_update_0_write7;
  return 0;
}

// # of bundles = 2
// ef_8_update_0_read
//	ef_8_rd0
//	ef_8_rd1
//	ef_8_rd2
//	ef_8_rd3
//	ef_8_rd4
//	ef_8_rd5
//	ef_8_rd6
//	ef_8_rd7
inline hw_uint<128> final_merged_0_ef_8_update_0_read_bundle_read(final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // ef_8_rd0
    // ef_8_rd1
    // ef_8_rd2
    // ef_8_rd3
    // ef_8_rd4
    // ef_8_rd5
    // ef_8_rd6
    // ef_8_rd7

	hw_uint<128> result;
	hw_uint<16> ef_8_rd0_res = ef_8_rd0_select(final_merged_0, d0, d1, dynamic_address);
	set_at<0, 128>(result, ef_8_rd0_res);
	hw_uint<16> ef_8_rd1_res = ef_8_rd1_select(final_merged_0, d0, d1, dynamic_address);
	set_at<16, 128>(result, ef_8_rd1_res);
	hw_uint<16> ef_8_rd2_res = ef_8_rd2_select(final_merged_0, d0, d1, dynamic_address);
	set_at<32, 128>(result, ef_8_rd2_res);
	hw_uint<16> ef_8_rd3_res = ef_8_rd3_select(final_merged_0, d0, d1, dynamic_address);
	set_at<48, 128>(result, ef_8_rd3_res);
	hw_uint<16> ef_8_rd4_res = ef_8_rd4_select(final_merged_0, d0, d1, dynamic_address);
	set_at<64, 128>(result, ef_8_rd4_res);
	hw_uint<16> ef_8_rd5_res = ef_8_rd5_select(final_merged_0, d0, d1, dynamic_address);
	set_at<80, 128>(result, ef_8_rd5_res);
	hw_uint<16> ef_8_rd6_res = ef_8_rd6_select(final_merged_0, d0, d1, dynamic_address);
	set_at<96, 128>(result, ef_8_rd6_res);
	hw_uint<16> ef_8_rd7_res = ef_8_rd7_select(final_merged_0, d0, d1, dynamic_address);
	set_at<112, 128>(result, ef_8_rd7_res);
	return result;
}

// final_merged_0_update_0_write
//	final_merged_0_final_merged_0_update_0_write0
//	final_merged_0_final_merged_0_update_0_write1
//	final_merged_0_final_merged_0_update_0_write2
//	final_merged_0_final_merged_0_update_0_write3
//	final_merged_0_final_merged_0_update_0_write4
//	final_merged_0_final_merged_0_update_0_write5
//	final_merged_0_final_merged_0_update_0_write6
//	final_merged_0_final_merged_0_update_0_write7
inline void final_merged_0_final_merged_0_update_0_write_bundle_write(hw_uint<128>& final_merged_0_update_0_write, final_merged_0_cache& final_merged_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> final_merged_0_final_merged_0_update_0_write0_res = final_merged_0_update_0_write.extract<0, 15>();
	final_merged_0_final_merged_0_update_0_write0_write(final_merged_0_final_merged_0_update_0_write0_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write1_res = final_merged_0_update_0_write.extract<16, 31>();
	final_merged_0_final_merged_0_update_0_write1_write(final_merged_0_final_merged_0_update_0_write1_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write2_res = final_merged_0_update_0_write.extract<32, 47>();
	final_merged_0_final_merged_0_update_0_write2_write(final_merged_0_final_merged_0_update_0_write2_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write3_res = final_merged_0_update_0_write.extract<48, 63>();
	final_merged_0_final_merged_0_update_0_write3_write(final_merged_0_final_merged_0_update_0_write3_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write4_res = final_merged_0_update_0_write.extract<64, 79>();
	final_merged_0_final_merged_0_update_0_write4_write(final_merged_0_final_merged_0_update_0_write4_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write5_res = final_merged_0_update_0_write.extract<80, 95>();
	final_merged_0_final_merged_0_update_0_write5_write(final_merged_0_final_merged_0_update_0_write5_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write6_res = final_merged_0_update_0_write.extract<96, 111>();
	final_merged_0_final_merged_0_update_0_write6_write(final_merged_0_final_merged_0_update_0_write6_res, final_merged_0, d0, d1, dynamic_address);
	hw_uint<16> final_merged_0_final_merged_0_update_0_write7_res = final_merged_0_update_0_write.extract<112, 127>();
	final_merged_0_final_merged_0_update_0_write7_write(final_merged_0_final_merged_0_update_0_write7_res, final_merged_0, d0, d1, dynamic_address);
}

struct final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_1_cache {
  // Reader addrs...
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_0_update_0[d0, d1] -> final_merged_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 8
  final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0_cache final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0;
  final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1_cache final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1;
  final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2_cache final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2;
  final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3_cache final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3;
  final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4_cache final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4;
  final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5_cache final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5;
  final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6_cache final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6;
  final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7_cache final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7;
};



inline void final_merged_1_final_merged_1_update_0_write0_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write0, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0.push(final_merged_1_final_merged_1_update_0_write0);
  final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1.push(final_merged_1_final_merged_1_update_0_write0);
}

inline void final_merged_1_final_merged_1_update_0_write1_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write1, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2.push(final_merged_1_final_merged_1_update_0_write1);
  final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3.push(final_merged_1_final_merged_1_update_0_write1);
}

inline void final_merged_1_final_merged_1_update_0_write2_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write2, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4.push(final_merged_1_final_merged_1_update_0_write2);
  final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5.push(final_merged_1_final_merged_1_update_0_write2);
}

inline void final_merged_1_final_merged_1_update_0_write3_write(hw_uint<16>& final_merged_1_final_merged_1_update_0_write3, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6.push(final_merged_1_final_merged_1_update_0_write3);
  final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7.push(final_merged_1_final_merged_1_update_0_write3);
}

inline hw_uint<16> final_merged_0_rd0_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd0 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write0 = final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_0_rd1_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd1 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write0 = final_merged_1.final_merged_1_final_merged_1_update_0_write0_to_final_merged_0_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_0_rd2_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd2 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write1 = final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_0_rd3_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd3 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[1 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write1 = final_merged_1.final_merged_1_final_merged_1_update_0_write1_to_final_merged_0_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_0_rd4_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd4 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write2 = final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd4.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_0_rd5_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd5 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[2 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write2 = final_merged_1.final_merged_1_final_merged_1_update_0_write2_to_final_merged_0_rd5.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_0_rd6_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd6 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write3 = final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd6.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_0_rd7_select(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd7 read pattern: { final_merged_0_update_0[d0, d1] -> final_merged_1[3 + 4d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_final_merged_1_final_merged_1_update_0_write3 = final_merged_1.final_merged_1_final_merged_1_update_0_write3_to_final_merged_0_rd7.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_1_final_merged_1_update_0_write3;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_read
//	final_merged_0_rd0
//	final_merged_0_rd1
//	final_merged_0_rd2
//	final_merged_0_rd3
//	final_merged_0_rd4
//	final_merged_0_rd5
//	final_merged_0_rd6
//	final_merged_0_rd7
inline hw_uint<128> final_merged_1_final_merged_0_update_0_read_bundle_read(final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // final_merged_0_rd0
    // final_merged_0_rd1
    // final_merged_0_rd2
    // final_merged_0_rd3
    // final_merged_0_rd4
    // final_merged_0_rd5
    // final_merged_0_rd6
    // final_merged_0_rd7

	hw_uint<128> result;
	hw_uint<16> final_merged_0_rd0_res = final_merged_0_rd0_select(final_merged_1, d0, d1, dynamic_address);
	set_at<0, 128>(result, final_merged_0_rd0_res);
	hw_uint<16> final_merged_0_rd1_res = final_merged_0_rd1_select(final_merged_1, d0, d1, dynamic_address);
	set_at<16, 128>(result, final_merged_0_rd1_res);
	hw_uint<16> final_merged_0_rd2_res = final_merged_0_rd2_select(final_merged_1, d0, d1, dynamic_address);
	set_at<32, 128>(result, final_merged_0_rd2_res);
	hw_uint<16> final_merged_0_rd3_res = final_merged_0_rd3_select(final_merged_1, d0, d1, dynamic_address);
	set_at<48, 128>(result, final_merged_0_rd3_res);
	hw_uint<16> final_merged_0_rd4_res = final_merged_0_rd4_select(final_merged_1, d0, d1, dynamic_address);
	set_at<64, 128>(result, final_merged_0_rd4_res);
	hw_uint<16> final_merged_0_rd5_res = final_merged_0_rd5_select(final_merged_1, d0, d1, dynamic_address);
	set_at<80, 128>(result, final_merged_0_rd5_res);
	hw_uint<16> final_merged_0_rd6_res = final_merged_0_rd6_select(final_merged_1, d0, d1, dynamic_address);
	set_at<96, 128>(result, final_merged_0_rd6_res);
	hw_uint<16> final_merged_0_rd7_res = final_merged_0_rd7_select(final_merged_1, d0, d1, dynamic_address);
	set_at<112, 128>(result, final_merged_0_rd7_res);
	return result;
}

// final_merged_1_update_0_write
//	final_merged_1_final_merged_1_update_0_write0
//	final_merged_1_final_merged_1_update_0_write1
//	final_merged_1_final_merged_1_update_0_write2
//	final_merged_1_final_merged_1_update_0_write3
inline void final_merged_1_final_merged_1_update_0_write_bundle_write(hw_uint<64>& final_merged_1_update_0_write, final_merged_1_cache& final_merged_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> final_merged_1_final_merged_1_update_0_write0_res = final_merged_1_update_0_write.extract<0, 15>();
	final_merged_1_final_merged_1_update_0_write0_write(final_merged_1_final_merged_1_update_0_write0_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write1_res = final_merged_1_update_0_write.extract<16, 31>();
	final_merged_1_final_merged_1_update_0_write1_write(final_merged_1_final_merged_1_update_0_write1_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write2_res = final_merged_1_update_0_write.extract<32, 47>();
	final_merged_1_final_merged_1_update_0_write2_write(final_merged_1_final_merged_1_update_0_write2_res, final_merged_1, d0, d1, dynamic_address);
	hw_uint<16> final_merged_1_final_merged_1_update_0_write3_res = final_merged_1_update_0_write.extract<48, 63>();
	final_merged_1_final_merged_1_update_0_write3_write(final_merged_1_final_merged_1_update_0_write3_res, final_merged_1, d0, d1, dynamic_address);
}

struct final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct final_merged_2_cache {
  // Reader addrs...
    // { final_merged_1_update_0[d0, d1] -> final_merged_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_1_update_0[d0, d1] -> final_merged_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_1_update_0[d0, d1] -> final_merged_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_1_update_0[d0, d1] -> final_merged_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 4
  final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0_cache final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0;
  final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1_cache final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1;
  final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2_cache final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2;
  final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3_cache final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3;
};



inline void final_merged_2_final_merged_2_update_0_write0_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_write0, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0.push(final_merged_2_final_merged_2_update_0_write0);
  final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1.push(final_merged_2_final_merged_2_update_0_write0);
}

inline void final_merged_2_final_merged_2_update_0_write1_write(hw_uint<16>& final_merged_2_final_merged_2_update_0_write1, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2.push(final_merged_2_final_merged_2_update_0_write1);
  final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3.push(final_merged_2_final_merged_2_update_0_write1);
}

inline hw_uint<16> final_merged_1_rd0_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd0 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_final_merged_2_final_merged_2_update_0_write0 = final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_1_rd1_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd1 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_final_merged_2_final_merged_2_update_0_write0 = final_merged_2.final_merged_2_final_merged_2_update_0_write0_to_final_merged_1_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_1_rd2_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd2 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_final_merged_2_final_merged_2_update_0_write1 = final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd2.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_1_rd3_select(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd3 read pattern: { final_merged_1_update_0[d0, d1] -> final_merged_2[1 + 2d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_final_merged_2_final_merged_2_update_0_write1 = final_merged_2.final_merged_2_final_merged_2_update_0_write1_to_final_merged_1_rd3.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_final_merged_2_final_merged_2_update_0_write1;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_read
//	final_merged_1_rd0
//	final_merged_1_rd1
//	final_merged_1_rd2
//	final_merged_1_rd3
inline hw_uint<64> final_merged_2_final_merged_1_update_0_read_bundle_read(final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // final_merged_1_rd0
    // final_merged_1_rd1
    // final_merged_1_rd2
    // final_merged_1_rd3

	hw_uint<64> result;
	hw_uint<16> final_merged_1_rd0_res = final_merged_1_rd0_select(final_merged_2, d0, d1, dynamic_address);
	set_at<0, 64>(result, final_merged_1_rd0_res);
	hw_uint<16> final_merged_1_rd1_res = final_merged_1_rd1_select(final_merged_2, d0, d1, dynamic_address);
	set_at<16, 64>(result, final_merged_1_rd1_res);
	hw_uint<16> final_merged_1_rd2_res = final_merged_1_rd2_select(final_merged_2, d0, d1, dynamic_address);
	set_at<32, 64>(result, final_merged_1_rd2_res);
	hw_uint<16> final_merged_1_rd3_res = final_merged_1_rd3_select(final_merged_2, d0, d1, dynamic_address);
	set_at<48, 64>(result, final_merged_1_rd3_res);
	return result;
}

// final_merged_2_update_0_write
//	final_merged_2_final_merged_2_update_0_write0
//	final_merged_2_final_merged_2_update_0_write1
inline void final_merged_2_final_merged_2_update_0_write_bundle_write(hw_uint<32>& final_merged_2_update_0_write, final_merged_2_cache& final_merged_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> final_merged_2_final_merged_2_update_0_write0_res = final_merged_2_update_0_write.extract<0, 15>();
	final_merged_2_final_merged_2_update_0_write0_write(final_merged_2_final_merged_2_update_0_write0_res, final_merged_2, d0, d1, dynamic_address);
	hw_uint<16> final_merged_2_final_merged_2_update_0_write1_res = final_merged_2_update_0_write.extract<16, 31>();
	final_merged_2_final_merged_2_update_0_write1_write(final_merged_2_final_merged_2_update_0_write1_res, final_merged_2, d0, d1, dynamic_address);
}

struct fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0_cache {
	// RAM Box: {[0, 1072], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1_cache {
	// RAM Box: {[1, 1073], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2_cache {
	// RAM Box: {[2, 1074], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3_cache {
	// RAM Box: {[3, 1075], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4_cache {
	// RAM Box: {[4, 1076], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5_cache {
	// RAM Box: {[5, 1077], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6_cache {
	// RAM Box: {[6, 1078], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7_cache {
	// RAM Box: {[7, 1079], [0, 1919]}
	// Capacity: 813
	// # of read delays: 813

	fifo<hw_uint<16>, 813> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(812 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_0_cache {
  // Reader addrs...
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
    // { final_merged_0_update_0[d0, d1] -> fused_level_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // # of banks: 8
  fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0_cache fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0;
  fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1_cache fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1;
  fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2_cache fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2;
  fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3_cache fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3;
  fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4_cache fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4;
  fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5_cache fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5;
  fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6_cache fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6;
  fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7_cache fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7;
};



inline void fused_level_0_fused_level_0_update_0_write0_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write0, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0.push(fused_level_0_fused_level_0_update_0_write0);
}

inline void fused_level_0_fused_level_0_update_0_write1_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write1, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1.push(fused_level_0_fused_level_0_update_0_write1);
}

inline void fused_level_0_fused_level_0_update_0_write2_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write2, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2.push(fused_level_0_fused_level_0_update_0_write2);
}

inline void fused_level_0_fused_level_0_update_0_write3_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write3, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3.push(fused_level_0_fused_level_0_update_0_write3);
}

inline void fused_level_0_fused_level_0_update_0_write4_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write4, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4.push(fused_level_0_fused_level_0_update_0_write4);
}

inline void fused_level_0_fused_level_0_update_0_write5_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write5, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5.push(fused_level_0_fused_level_0_update_0_write5);
}

inline void fused_level_0_fused_level_0_update_0_write6_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write6, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6.push(fused_level_0_fused_level_0_update_0_write6);
}

inline void fused_level_0_fused_level_0_update_0_write7_write(hw_uint<16>& fused_level_0_fused_level_0_update_0_write7, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  fused_level_0.fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7.push(fused_level_0_fused_level_0_update_0_write7);
}

inline hw_uint<16> final_merged_0_rd0_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd0 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write0 = fused_level_0.fused_level_0_fused_level_0_update_0_write0_to_final_merged_0_rd0.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_0_rd1_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd1 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[1 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write1 = fused_level_0.fused_level_0_fused_level_0_update_0_write1_to_final_merged_0_rd1.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_0_rd2_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd2 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[2 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write2 = fused_level_0.fused_level_0_fused_level_0_update_0_write2_to_final_merged_0_rd2.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_0_rd3_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd3 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[3 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write3 = fused_level_0.fused_level_0_fused_level_0_update_0_write3_to_final_merged_0_rd3.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write3;
  return 0;
}

inline hw_uint<16> final_merged_0_rd4_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd4 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[4 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write4 = fused_level_0.fused_level_0_fused_level_0_update_0_write4_to_final_merged_0_rd4.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write4;
  return 0;
}

inline hw_uint<16> final_merged_0_rd5_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd5 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[5 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write5 = fused_level_0.fused_level_0_fused_level_0_update_0_write5_to_final_merged_0_rd5.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write5;
  return 0;
}

inline hw_uint<16> final_merged_0_rd6_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd6 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[6 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write6 = fused_level_0.fused_level_0_fused_level_0_update_0_write6_to_final_merged_0_rd6.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write6;
  return 0;
}

inline hw_uint<16> final_merged_0_rd7_select(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_0_rd7 read pattern: { final_merged_0_update_0[d0, d1] -> fused_level_0[7 + 8d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Read schedule : { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  // Write schedule: { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
  auto value_fused_level_0_fused_level_0_update_0_write7 = fused_level_0.fused_level_0_fused_level_0_update_0_write7_to_final_merged_0_rd7.peek(/* one reader or all rams */ (-1914 + d1 == 0 && -134 + d0 == 0) ? (675) : (-134 + d0 == 0 && 1913 - d1 >= 0) ? (810) : (-133 + d0 == 0 && 1913 - d1 >= 0) ? (811) : (1913 - d1 >= 0 && 132 - d0 >= 0) ? (812) : (-1919 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-1914 + d1 == 0 && 133 - d0 >= 0) ? ((809 - d0)) : (-134 + d0 == 0 && -1915 + d1 >= 0 && 1918 - d1 >= 0) ? ((259065 - 135 * d1)) : (1918 - d1 >= 0 && 133 - d0 >= 0 && -1915 + d1 >= 0) ? (((259199 - d0) - 135 * d1)) : 0);
  return value_fused_level_0_fused_level_0_update_0_write7;
  return 0;
}

// # of bundles = 2
// final_merged_0_update_0_read
//	final_merged_0_rd0
//	final_merged_0_rd1
//	final_merged_0_rd2
//	final_merged_0_rd3
//	final_merged_0_rd4
//	final_merged_0_rd5
//	final_merged_0_rd6
//	final_merged_0_rd7
inline hw_uint<128> fused_level_0_final_merged_0_update_0_read_bundle_read(fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // final_merged_0_rd0
    // final_merged_0_rd1
    // final_merged_0_rd2
    // final_merged_0_rd3
    // final_merged_0_rd4
    // final_merged_0_rd5
    // final_merged_0_rd6
    // final_merged_0_rd7

	hw_uint<128> result;
	hw_uint<16> final_merged_0_rd0_res = final_merged_0_rd0_select(fused_level_0, d0, d1, dynamic_address);
	set_at<0, 128>(result, final_merged_0_rd0_res);
	hw_uint<16> final_merged_0_rd1_res = final_merged_0_rd1_select(fused_level_0, d0, d1, dynamic_address);
	set_at<16, 128>(result, final_merged_0_rd1_res);
	hw_uint<16> final_merged_0_rd2_res = final_merged_0_rd2_select(fused_level_0, d0, d1, dynamic_address);
	set_at<32, 128>(result, final_merged_0_rd2_res);
	hw_uint<16> final_merged_0_rd3_res = final_merged_0_rd3_select(fused_level_0, d0, d1, dynamic_address);
	set_at<48, 128>(result, final_merged_0_rd3_res);
	hw_uint<16> final_merged_0_rd4_res = final_merged_0_rd4_select(fused_level_0, d0, d1, dynamic_address);
	set_at<64, 128>(result, final_merged_0_rd4_res);
	hw_uint<16> final_merged_0_rd5_res = final_merged_0_rd5_select(fused_level_0, d0, d1, dynamic_address);
	set_at<80, 128>(result, final_merged_0_rd5_res);
	hw_uint<16> final_merged_0_rd6_res = final_merged_0_rd6_select(fused_level_0, d0, d1, dynamic_address);
	set_at<96, 128>(result, final_merged_0_rd6_res);
	hw_uint<16> final_merged_0_rd7_res = final_merged_0_rd7_select(fused_level_0, d0, d1, dynamic_address);
	set_at<112, 128>(result, final_merged_0_rd7_res);
	return result;
}

// fused_level_0_update_0_write
//	fused_level_0_fused_level_0_update_0_write0
//	fused_level_0_fused_level_0_update_0_write1
//	fused_level_0_fused_level_0_update_0_write2
//	fused_level_0_fused_level_0_update_0_write3
//	fused_level_0_fused_level_0_update_0_write4
//	fused_level_0_fused_level_0_update_0_write5
//	fused_level_0_fused_level_0_update_0_write6
//	fused_level_0_fused_level_0_update_0_write7
inline void fused_level_0_fused_level_0_update_0_write_bundle_write(hw_uint<128>& fused_level_0_update_0_write, fused_level_0_cache& fused_level_0, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_0_fused_level_0_update_0_write0_res = fused_level_0_update_0_write.extract<0, 15>();
	fused_level_0_fused_level_0_update_0_write0_write(fused_level_0_fused_level_0_update_0_write0_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write1_res = fused_level_0_update_0_write.extract<16, 31>();
	fused_level_0_fused_level_0_update_0_write1_write(fused_level_0_fused_level_0_update_0_write1_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write2_res = fused_level_0_update_0_write.extract<32, 47>();
	fused_level_0_fused_level_0_update_0_write2_write(fused_level_0_fused_level_0_update_0_write2_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write3_res = fused_level_0_update_0_write.extract<48, 63>();
	fused_level_0_fused_level_0_update_0_write3_write(fused_level_0_fused_level_0_update_0_write3_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write4_res = fused_level_0_update_0_write.extract<64, 79>();
	fused_level_0_fused_level_0_update_0_write4_write(fused_level_0_fused_level_0_update_0_write4_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write5_res = fused_level_0_update_0_write.extract<80, 95>();
	fused_level_0_fused_level_0_update_0_write5_write(fused_level_0_fused_level_0_update_0_write5_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write6_res = fused_level_0_update_0_write.extract<96, 111>();
	fused_level_0_fused_level_0_update_0_write6_write(fused_level_0_fused_level_0_update_0_write6_res, fused_level_0, d0, d1, dynamic_address);
	hw_uint<16> fused_level_0_fused_level_0_update_0_write7_res = fused_level_0_update_0_write.extract<112, 127>();
	fused_level_0_fused_level_0_update_0_write7_write(fused_level_0_fused_level_0_update_0_write7_res, fused_level_0, d0, d1, dynamic_address);
}

struct fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0_cache {
	// RAM Box: {[0, 536], [0, 959]}
	// Capacity: 272
	// # of read delays: 272
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
	fifo<hw_uint<16>, 272> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(271 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1_cache {
	// RAM Box: {[1, 537], [0, 959]}
	// Capacity: 272
	// # of read delays: 272
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
	fifo<hw_uint<16>, 272> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(271 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2_cache {
	// RAM Box: {[2, 538], [0, 959]}
	// Capacity: 272
	// # of read delays: 272
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
	fifo<hw_uint<16>, 272> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(271 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3_cache {
	// RAM Box: {[3, 539], [0, 959]}
	// Capacity: 272
	// # of read delays: 272
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
	fifo<hw_uint<16>, 272> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(271 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_1_cache {
  // Reader addrs...
    // { final_merged_1_update_0[d0, d1] -> fused_level_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { final_merged_1_update_0[d0, d1] -> fused_level_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { final_merged_1_update_0[d0, d1] -> fused_level_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
    // { final_merged_1_update_0[d0, d1] -> fused_level_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // # of banks: 4
  fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0_cache fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0;
  fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1_cache fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1;
  fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2_cache fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2;
  fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3_cache fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3;
};



inline void fused_level_1_fused_level_1_update_0_write0_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write0, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0.push(fused_level_1_fused_level_1_update_0_write0);
}

inline void fused_level_1_fused_level_1_update_0_write1_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write1, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1.push(fused_level_1_fused_level_1_update_0_write1);
}

inline void fused_level_1_fused_level_1_update_0_write2_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write2, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2.push(fused_level_1_fused_level_1_update_0_write2);
}

inline void fused_level_1_fused_level_1_update_0_write3_write(hw_uint<16>& fused_level_1_fused_level_1_update_0_write3, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  fused_level_1.fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3.push(fused_level_1_fused_level_1_update_0_write3);
}

inline hw_uint<16> final_merged_1_rd0_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd0 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_fused_level_1_fused_level_1_update_0_write0 = fused_level_1.fused_level_1_fused_level_1_update_0_write0_to_final_merged_1_rd0.peek(/* one reader or all rams */ (-958 + d1 == 0 && -134 + d0 == 0) ? (135) : (957 - d1 >= 0 && 133 - d0 >= 0) ? (271) : (-959 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-134 + d0 == 0 && 957 - d1 >= 0) ? (270) : (-958 + d1 == 0 && 133 - d0 >= 0) ? ((269 - d0)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_1_rd1_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd1 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[1 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_fused_level_1_fused_level_1_update_0_write1 = fused_level_1.fused_level_1_fused_level_1_update_0_write1_to_final_merged_1_rd1.peek(/* one reader or all rams */ (-958 + d1 == 0 && -134 + d0 == 0) ? (135) : (957 - d1 >= 0 && 133 - d0 >= 0) ? (271) : (-959 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-134 + d0 == 0 && 957 - d1 >= 0) ? (270) : (-958 + d1 == 0 && 133 - d0 >= 0) ? ((269 - d0)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write1;
  return 0;
}

inline hw_uint<16> final_merged_1_rd2_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd2 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[2 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_fused_level_1_fused_level_1_update_0_write2 = fused_level_1.fused_level_1_fused_level_1_update_0_write2_to_final_merged_1_rd2.peek(/* one reader or all rams */ (-958 + d1 == 0 && -134 + d0 == 0) ? (135) : (957 - d1 >= 0 && 133 - d0 >= 0) ? (271) : (-959 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-134 + d0 == 0 && 957 - d1 >= 0) ? (270) : (-958 + d1 == 0 && 133 - d0 >= 0) ? ((269 - d0)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write2;
  return 0;
}

inline hw_uint<16> final_merged_1_rd3_select(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_1_rd3 read pattern: { final_merged_1_update_0[d0, d1] -> fused_level_1[3 + 4d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Read schedule : { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  // Write schedule: { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
  auto value_fused_level_1_fused_level_1_update_0_write3 = fused_level_1.fused_level_1_fused_level_1_update_0_write3_to_final_merged_1_rd3.peek(/* one reader or all rams */ (-958 + d1 == 0 && -134 + d0 == 0) ? (135) : (957 - d1 >= 0 && 133 - d0 >= 0) ? (271) : (-959 + d1 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : (-134 + d0 == 0 && 957 - d1 >= 0) ? (270) : (-958 + d1 == 0 && 133 - d0 >= 0) ? ((269 - d0)) : 0);
  return value_fused_level_1_fused_level_1_update_0_write3;
  return 0;
}

// # of bundles = 2
// final_merged_1_update_0_read
//	final_merged_1_rd0
//	final_merged_1_rd1
//	final_merged_1_rd2
//	final_merged_1_rd3
inline hw_uint<64> fused_level_1_final_merged_1_update_0_read_bundle_read(fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 4
    // final_merged_1_rd0
    // final_merged_1_rd1
    // final_merged_1_rd2
    // final_merged_1_rd3

	hw_uint<64> result;
	hw_uint<16> final_merged_1_rd0_res = final_merged_1_rd0_select(fused_level_1, d0, d1, dynamic_address);
	set_at<0, 64>(result, final_merged_1_rd0_res);
	hw_uint<16> final_merged_1_rd1_res = final_merged_1_rd1_select(fused_level_1, d0, d1, dynamic_address);
	set_at<16, 64>(result, final_merged_1_rd1_res);
	hw_uint<16> final_merged_1_rd2_res = final_merged_1_rd2_select(fused_level_1, d0, d1, dynamic_address);
	set_at<32, 64>(result, final_merged_1_rd2_res);
	hw_uint<16> final_merged_1_rd3_res = final_merged_1_rd3_select(fused_level_1, d0, d1, dynamic_address);
	set_at<48, 64>(result, final_merged_1_rd3_res);
	return result;
}

// fused_level_1_update_0_write
//	fused_level_1_fused_level_1_update_0_write0
//	fused_level_1_fused_level_1_update_0_write1
//	fused_level_1_fused_level_1_update_0_write2
//	fused_level_1_fused_level_1_update_0_write3
inline void fused_level_1_fused_level_1_update_0_write_bundle_write(hw_uint<64>& fused_level_1_update_0_write, fused_level_1_cache& fused_level_1, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_1_fused_level_1_update_0_write0_res = fused_level_1_update_0_write.extract<0, 15>();
	fused_level_1_fused_level_1_update_0_write0_write(fused_level_1_fused_level_1_update_0_write0_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write1_res = fused_level_1_update_0_write.extract<16, 31>();
	fused_level_1_fused_level_1_update_0_write1_write(fused_level_1_fused_level_1_update_0_write1_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write2_res = fused_level_1_update_0_write.extract<32, 47>();
	fused_level_1_fused_level_1_update_0_write2_write(fused_level_1_fused_level_1_update_0_write2_res, fused_level_1, d0, d1, dynamic_address);
	hw_uint<16> fused_level_1_fused_level_1_update_0_write3_res = fused_level_1_update_0_write.extract<48, 63>();
	fused_level_1_fused_level_1_update_0_write3_write(fused_level_1_fused_level_1_update_0_write3_res, fused_level_1, d0, d1, dynamic_address);
}

struct fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0_cache {
	// RAM Box: {[0, 268], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1_cache {
	// RAM Box: {[1, 269], [0, 479]}
	// Capacity: 1
	// # of read delays: 2
  // 0, 0
	fifo<hw_uint<16>, 1> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(0 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_2_cache {
  // Reader addrs...
    // { final_merged_2_update_0[d0, d1] -> fused_level_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
    // { final_merged_2_update_0[d0, d1] -> fused_level_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // # of banks: 2
  fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0_cache fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0;
  fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1_cache fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1;
};



inline void fused_level_2_fused_level_2_update_0_write0_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_write0, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0.push(fused_level_2_fused_level_2_update_0_write0);
}

inline void fused_level_2_fused_level_2_update_0_write1_write(hw_uint<16>& fused_level_2_fused_level_2_update_0_write1, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  fused_level_2.fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1.push(fused_level_2_fused_level_2_update_0_write1);
}

inline hw_uint<16> final_merged_2_rd0_select(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd0 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_2[2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_fused_level_2_fused_level_2_update_0_write0 = fused_level_2.fused_level_2_fused_level_2_update_0_write0_to_final_merged_2_rd0.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_2_rd1_select(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd1 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_2[1 + 2d0, d1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  auto value_fused_level_2_fused_level_2_update_0_write1 = fused_level_2.fused_level_2_fused_level_2_update_0_write1_to_final_merged_2_rd1.peek(/* one reader or all rams */ 0);
  return value_fused_level_2_fused_level_2_update_0_write1;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_read
//	final_merged_2_rd0
//	final_merged_2_rd1
inline hw_uint<32> fused_level_2_final_merged_2_update_0_read_bundle_read(fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // final_merged_2_rd0
    // final_merged_2_rd1

	hw_uint<32> result;
	hw_uint<16> final_merged_2_rd0_res = final_merged_2_rd0_select(fused_level_2, d0, d1, dynamic_address);
	set_at<0, 32>(result, final_merged_2_rd0_res);
	hw_uint<16> final_merged_2_rd1_res = final_merged_2_rd1_select(fused_level_2, d0, d1, dynamic_address);
	set_at<16, 32>(result, final_merged_2_rd1_res);
	return result;
}

// fused_level_2_update_0_write
//	fused_level_2_fused_level_2_update_0_write0
//	fused_level_2_fused_level_2_update_0_write1
inline void fused_level_2_fused_level_2_update_0_write_bundle_write(hw_uint<32>& fused_level_2_update_0_write, fused_level_2_cache& fused_level_2, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_2_fused_level_2_update_0_write0_res = fused_level_2_update_0_write.extract<0, 15>();
	fused_level_2_fused_level_2_update_0_write0_write(fused_level_2_fused_level_2_update_0_write0_res, fused_level_2, d0, d1, dynamic_address);
	hw_uint<16> fused_level_2_fused_level_2_update_0_write1_res = fused_level_2_update_0_write.extract<16, 31>();
	fused_level_2_fused_level_2_update_0_write1_write(fused_level_2_fused_level_2_update_0_write1_res, fused_level_2, d0, d1, dynamic_address);
}

struct fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1_cache {
	// RAM Box: {[0, 134], [0, 239]}
	// Capacity: 135
	// # of read delays: 135
  // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
	fifo<hw_uint<16>, 135> f;
	inline hw_uint<16> peek(const int offset) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.peek(134 - offset);
  }



	inline void push(const hw_uint<16> value) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
    return f.push(value);
  }

};

struct fused_level_3_cache {
  // Reader addrs...
    // { final_merged_2_update_0[d0, d1] -> fused_level_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
    // { final_merged_2_update_0[d0, d1] -> fused_level_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // # of banks: 2
  fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0_cache fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0;
  fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1_cache fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1;
};



inline void fused_level_3_fused_level_3_update_0_write0_write(hw_uint<16>& fused_level_3_fused_level_3_update_0_write0, fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
  fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0.push(fused_level_3_fused_level_3_update_0_write0);
  fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1.push(fused_level_3_fused_level_3_update_0_write0);
}

inline hw_uint<16> final_merged_2_rd0_select(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd0 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_fused_level_3_fused_level_3_update_0_write0 = fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd0.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_fused_level_3_fused_level_3_update_0_write0;
  return 0;
}

inline hw_uint<16> final_merged_2_rd1_select(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // final_merged_2_rd1 read pattern: { final_merged_2_update_0[d0, d1] -> fused_level_3[d0, o1] : 0 <= d0 <= 134 and 0 <= d1 <= 479 and -1 + d1 <= 2o1 <= d1 }
  // Read schedule : { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
  // Write schedule: { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
  auto value_fused_level_3_fused_level_3_update_0_write0 = fused_level_3.fused_level_3_fused_level_3_update_0_write0_to_final_merged_2_rd1.peek(/* one reader or all rams */ ((-1 - d1) % 2 == 0 && 133 - d0 >= 0) ? ((134 - d0)) : 0);
  return value_fused_level_3_fused_level_3_update_0_write0;
  return 0;
}

// # of bundles = 2
// final_merged_2_update_0_read
//	final_merged_2_rd0
//	final_merged_2_rd1
inline hw_uint<32> fused_level_3_final_merged_2_update_0_read_bundle_read(fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 2
    // final_merged_2_rd0
    // final_merged_2_rd1

	hw_uint<32> result;
	hw_uint<16> final_merged_2_rd0_res = final_merged_2_rd0_select(fused_level_3, d0, d1, dynamic_address);
	set_at<0, 32>(result, final_merged_2_rd0_res);
	hw_uint<16> final_merged_2_rd1_res = final_merged_2_rd1_select(fused_level_3, d0, d1, dynamic_address);
	set_at<16, 32>(result, final_merged_2_rd1_res);
	return result;
}

// fused_level_3_update_0_write
//	fused_level_3_fused_level_3_update_0_write0
inline void fused_level_3_fused_level_3_update_0_write_bundle_write(hw_uint<16>& fused_level_3_update_0_write, fused_level_3_cache& fused_level_3, int d0, int d1, int dynamic_address) {
	hw_uint<16> fused_level_3_fused_level_3_update_0_write0_res = fused_level_3_update_0_write.extract<0, 15>();
	fused_level_3_fused_level_3_update_0_write0_write(fused_level_3_fused_level_3_update_0_write0_res, fused_level_3, d0, d1, dynamic_address);
}

struct in_in_update_0_write0_merged_banks_2_cache {
	// RAM Box: {[-24, 1096], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write1_merged_banks_2_cache {
	// RAM Box: {[-23, 1097], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write2_merged_banks_2_cache {
	// RAM Box: {[-22, 1098], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write3_merged_banks_2_cache {
	// RAM Box: {[-21, 1099], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write4_merged_banks_2_cache {
	// RAM Box: {[-20, 1100], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write5_merged_banks_2_cache {
	// RAM Box: {[-19, 1101], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write6_merged_banks_2_cache {
	// RAM Box: {[-18, 1102], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_in_update_0_write7_merged_banks_2_cache {
	// RAM Box: {[-17, 1103], [-7, 1919]}
	// Capacity: 1
	// # of read delays: 1
  // 0
	hw_uint<16> f1;


	inline hw_uint<16> peek_0() {
		return f1;
	}



	inline void push(const hw_uint<16> value) {
    // cap: 1
    f1 = value;
	}

};

struct in_cache {
  // Reader addrs...
    // { bright_update_0[d0, d1] -> in[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { bright_update_0[d0, d1] -> in[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
    // { dark_update_0[d0, d1] -> in[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // # of banks: 8
  in_in_update_0_write0_merged_banks_2_cache in_in_update_0_write0_merged_banks_2;
  in_in_update_0_write1_merged_banks_2_cache in_in_update_0_write1_merged_banks_2;
  in_in_update_0_write2_merged_banks_2_cache in_in_update_0_write2_merged_banks_2;
  in_in_update_0_write3_merged_banks_2_cache in_in_update_0_write3_merged_banks_2;
  in_in_update_0_write4_merged_banks_2_cache in_in_update_0_write4_merged_banks_2;
  in_in_update_0_write5_merged_banks_2_cache in_in_update_0_write5_merged_banks_2;
  in_in_update_0_write6_merged_banks_2_cache in_in_update_0_write6_merged_banks_2;
  in_in_update_0_write7_merged_banks_2_cache in_in_update_0_write7_merged_banks_2;
};



inline void in_in_update_0_write0_write(hw_uint<16>& in_in_update_0_write0, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write0_merged_banks_2.push(in_in_update_0_write0);
}

inline void in_in_update_0_write1_write(hw_uint<16>& in_in_update_0_write1, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write1_merged_banks_2.push(in_in_update_0_write1);
}

inline void in_in_update_0_write2_write(hw_uint<16>& in_in_update_0_write2, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write2_merged_banks_2.push(in_in_update_0_write2);
}

inline void in_in_update_0_write3_write(hw_uint<16>& in_in_update_0_write3, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write3_merged_banks_2.push(in_in_update_0_write3);
}

inline void in_in_update_0_write4_write(hw_uint<16>& in_in_update_0_write4, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write4_merged_banks_2.push(in_in_update_0_write4);
}

inline void in_in_update_0_write5_write(hw_uint<16>& in_in_update_0_write5, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write5_merged_banks_2.push(in_in_update_0_write5);
}

inline void in_in_update_0_write6_write(hw_uint<16>& in_in_update_0_write6, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write6_merged_banks_2.push(in_in_update_0_write6);
}

inline void in_in_update_0_write7_write(hw_uint<16>& in_in_update_0_write7, in_cache& in, int d0, int d1, int dynamic_address) {
  in.in_in_update_0_write7_merged_banks_2.push(in_in_update_0_write7);
}

inline hw_uint<16> bright_rd0_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd0 read pattern: { bright_update_0[d0, d1] -> in[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write0 = in.in_in_update_0_write0_merged_banks_2.peek_0();
  return value_in_in_update_0_write0;
  return 0;
}

inline hw_uint<16> bright_rd1_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd1 read pattern: { bright_update_0[d0, d1] -> in[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write1 = in.in_in_update_0_write1_merged_banks_2.peek_0();
  return value_in_in_update_0_write1;
  return 0;
}

inline hw_uint<16> bright_rd2_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd2 read pattern: { bright_update_0[d0, d1] -> in[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write2 = in.in_in_update_0_write2_merged_banks_2.peek_0();
  return value_in_in_update_0_write2;
  return 0;
}

inline hw_uint<16> bright_rd3_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd3 read pattern: { bright_update_0[d0, d1] -> in[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write3 = in.in_in_update_0_write3_merged_banks_2.peek_0();
  return value_in_in_update_0_write3;
  return 0;
}

inline hw_uint<16> bright_rd4_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd4 read pattern: { bright_update_0[d0, d1] -> in[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write4 = in.in_in_update_0_write4_merged_banks_2.peek_0();
  return value_in_in_update_0_write4;
  return 0;
}

inline hw_uint<16> bright_rd5_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd5 read pattern: { bright_update_0[d0, d1] -> in[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write5 = in.in_in_update_0_write5_merged_banks_2.peek_0();
  return value_in_in_update_0_write5;
  return 0;
}

inline hw_uint<16> bright_rd6_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd6 read pattern: { bright_update_0[d0, d1] -> in[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write6 = in.in_in_update_0_write6_merged_banks_2.peek_0();
  return value_in_in_update_0_write6;
  return 0;
}

inline hw_uint<16> bright_rd7_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // bright_rd7 read pattern: { bright_update_0[d0, d1] -> in[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write7 = in.in_in_update_0_write7_merged_banks_2.peek_0();
  return value_in_in_update_0_write7;
  return 0;
}

inline hw_uint<16> dark_rd0_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd0 read pattern: { dark_update_0[d0, d1] -> in[8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write0 = in.in_in_update_0_write0_merged_banks_2.peek_0();
  return value_in_in_update_0_write0;
  return 0;
}

inline hw_uint<16> dark_rd1_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd1 read pattern: { dark_update_0[d0, d1] -> in[1 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write1 = in.in_in_update_0_write1_merged_banks_2.peek_0();
  return value_in_in_update_0_write1;
  return 0;
}

inline hw_uint<16> dark_rd2_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd2 read pattern: { dark_update_0[d0, d1] -> in[2 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write2 = in.in_in_update_0_write2_merged_banks_2.peek_0();
  return value_in_in_update_0_write2;
  return 0;
}

inline hw_uint<16> dark_rd3_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd3 read pattern: { dark_update_0[d0, d1] -> in[3 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write3 = in.in_in_update_0_write3_merged_banks_2.peek_0();
  return value_in_in_update_0_write3;
  return 0;
}

inline hw_uint<16> dark_rd4_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd4 read pattern: { dark_update_0[d0, d1] -> in[4 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write4 = in.in_in_update_0_write4_merged_banks_2.peek_0();
  return value_in_in_update_0_write4;
  return 0;
}

inline hw_uint<16> dark_rd5_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd5 read pattern: { dark_update_0[d0, d1] -> in[5 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write5 = in.in_in_update_0_write5_merged_banks_2.peek_0();
  return value_in_in_update_0_write5;
  return 0;
}

inline hw_uint<16> dark_rd6_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd6 read pattern: { dark_update_0[d0, d1] -> in[6 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write6 = in.in_in_update_0_write6_merged_banks_2.peek_0();
  return value_in_in_update_0_write6;
  return 0;
}

inline hw_uint<16> dark_rd7_select(in_cache& in, int d0, int d1, int dynamic_address) {
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  // dark_rd7 read pattern: { dark_update_0[d0, d1] -> in[7 + 8d0, d1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Read schedule : { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  // Write schedule: { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
  auto value_in_in_update_0_write7 = in.in_in_update_0_write7_merged_banks_2.peek_0();
  return value_in_in_update_0_write7;
  return 0;
}

// # of bundles = 3
// bright_update_0_read
//	bright_rd0
//	bright_rd1
//	bright_rd2
//	bright_rd3
//	bright_rd4
//	bright_rd5
//	bright_rd6
//	bright_rd7
inline hw_uint<128> in_bright_update_0_read_bundle_read(in_cache& in, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // bright_rd0
    // bright_rd1
    // bright_rd2
    // bright_rd3
    // bright_rd4
    // bright_rd5
    // bright_rd6
    // bright_rd7

	hw_uint<128> result;
	hw_uint<16> bright_rd0_res = bright_rd0_select(in, d0, d1, dynamic_address);
	set_at<0, 128>(result, bright_rd0_res);
	hw_uint<16> bright_rd1_res = bright_rd1_select(in, d0, d1, dynamic_address);
	set_at<16, 128>(result, bright_rd1_res);
	hw_uint<16> bright_rd2_res = bright_rd2_select(in, d0, d1, dynamic_address);
	set_at<32, 128>(result, bright_rd2_res);
	hw_uint<16> bright_rd3_res = bright_rd3_select(in, d0, d1, dynamic_address);
	set_at<48, 128>(result, bright_rd3_res);
	hw_uint<16> bright_rd4_res = bright_rd4_select(in, d0, d1, dynamic_address);
	set_at<64, 128>(result, bright_rd4_res);
	hw_uint<16> bright_rd5_res = bright_rd5_select(in, d0, d1, dynamic_address);
	set_at<80, 128>(result, bright_rd5_res);
	hw_uint<16> bright_rd6_res = bright_rd6_select(in, d0, d1, dynamic_address);
	set_at<96, 128>(result, bright_rd6_res);
	hw_uint<16> bright_rd7_res = bright_rd7_select(in, d0, d1, dynamic_address);
	set_at<112, 128>(result, bright_rd7_res);
	return result;
}

// dark_update_0_read
//	dark_rd0
//	dark_rd1
//	dark_rd2
//	dark_rd3
//	dark_rd4
//	dark_rd5
//	dark_rd6
//	dark_rd7
inline hw_uint<128> in_dark_update_0_read_bundle_read(in_cache& in, int d0, int d1, int dynamic_address) {
  // # of ports in bundle: 8
    // dark_rd0
    // dark_rd1
    // dark_rd2
    // dark_rd3
    // dark_rd4
    // dark_rd5
    // dark_rd6
    // dark_rd7

	hw_uint<128> result;
	hw_uint<16> dark_rd0_res = dark_rd0_select(in, d0, d1, dynamic_address);
	set_at<0, 128>(result, dark_rd0_res);
	hw_uint<16> dark_rd1_res = dark_rd1_select(in, d0, d1, dynamic_address);
	set_at<16, 128>(result, dark_rd1_res);
	hw_uint<16> dark_rd2_res = dark_rd2_select(in, d0, d1, dynamic_address);
	set_at<32, 128>(result, dark_rd2_res);
	hw_uint<16> dark_rd3_res = dark_rd3_select(in, d0, d1, dynamic_address);
	set_at<48, 128>(result, dark_rd3_res);
	hw_uint<16> dark_rd4_res = dark_rd4_select(in, d0, d1, dynamic_address);
	set_at<64, 128>(result, dark_rd4_res);
	hw_uint<16> dark_rd5_res = dark_rd5_select(in, d0, d1, dynamic_address);
	set_at<80, 128>(result, dark_rd5_res);
	hw_uint<16> dark_rd6_res = dark_rd6_select(in, d0, d1, dynamic_address);
	set_at<96, 128>(result, dark_rd6_res);
	hw_uint<16> dark_rd7_res = dark_rd7_select(in, d0, d1, dynamic_address);
	set_at<112, 128>(result, dark_rd7_res);
	return result;
}

// in_update_0_write
//	in_in_update_0_write0
//	in_in_update_0_write1
//	in_in_update_0_write2
//	in_in_update_0_write3
//	in_in_update_0_write4
//	in_in_update_0_write5
//	in_in_update_0_write6
//	in_in_update_0_write7
inline void in_in_update_0_write_bundle_write(hw_uint<128>& in_update_0_write, in_cache& in, int d0, int d1, int dynamic_address) {
	hw_uint<16> in_in_update_0_write0_res = in_update_0_write.extract<0, 15>();
	in_in_update_0_write0_write(in_in_update_0_write0_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write1_res = in_update_0_write.extract<16, 31>();
	in_in_update_0_write1_write(in_in_update_0_write1_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write2_res = in_update_0_write.extract<32, 47>();
	in_in_update_0_write2_write(in_in_update_0_write2_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write3_res = in_update_0_write.extract<48, 63>();
	in_in_update_0_write3_write(in_in_update_0_write3_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write4_res = in_update_0_write.extract<64, 79>();
	in_in_update_0_write4_write(in_in_update_0_write4_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write5_res = in_update_0_write.extract<80, 95>();
	in_in_update_0_write5_write(in_in_update_0_write5_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write6_res = in_update_0_write.extract<96, 111>();
	in_in_update_0_write6_write(in_in_update_0_write6_res, in, d0, d1, dynamic_address);
	hw_uint<16> in_in_update_0_write7_res = in_update_0_write.extract<112, 127>();
	in_in_update_0_write7_write(in_in_update_0_write7_res, in, d0, d1, dynamic_address);
}

// Total re-use buffer capacity: 589888 bits


// Operation logic
inline void dark_gauss_blur_1_update_0(dark_cache& dark, dark_gauss_blur_1_cache& dark_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark
	auto dark_0_c__0_value = dark_dark_gauss_blur_1_update_0_read_bundle_read(dark/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(dark_0_c__0_value);
	// Produce: dark_gauss_blur_1
	dark_gauss_blur_1_dark_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_update_0(bright_weights_cache& bright_weights, bright_weights_normed_cache& bright_weights_normed, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights
	auto bright_weights_0_c__0_value = bright_weights_bright_weights_normed_update_0_read_bundle_read(bright_weights/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_normalize_weights_unrolled_8(bright_weights_0_c__0_value);
	// Produce: bright_weights_normed
	bright_weights_normed_bright_weights_normed_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_1_update_0(bright_cache& bright, bright_gauss_blur_1_cache& bright_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright
	auto bright_0_c__0_value = bright_bright_gauss_blur_1_update_0_read_bundle_read(bright/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(bright_0_c__0_value);
	// Produce: bright_gauss_blur_1
	bright_gauss_blur_1_bright_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_1_update_0(dark_weights_normed_cache& dark_weights_normed, dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed
	auto dark_weights_normed_0_c__0_value = dark_weights_normed_dark_weights_normed_gauss_blur_1_update_0_read_bundle_read(dark_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(dark_weights_normed_0_c__0_value);
	// Produce: dark_weights_normed_gauss_blur_1
	dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_1_update_0(dark_gauss_blur_1_cache& dark_gauss_blur_1, dark_gauss_ds_1_cache& dark_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_1
	auto dark_gauss_blur_1_0_c__0_value = dark_gauss_blur_1_dark_gauss_ds_1_update_0_read_bundle_read(dark_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(dark_gauss_blur_1_0_c__0_value);
	// Produce: dark_gauss_ds_1
	dark_gauss_ds_1_dark_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_2_update_0(dark_gauss_ds_1_cache& dark_gauss_ds_1, dark_gauss_blur_2_cache& dark_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1_0_c__0_value = dark_gauss_ds_1_dark_gauss_blur_2_update_0_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(dark_gauss_ds_1_0_c__0_value);
	// Produce: dark_gauss_blur_2
	dark_gauss_blur_2_dark_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_1_update_0(bright_weights_normed_cache& bright_weights_normed, bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed
	auto bright_weights_normed_0_c__0_value = bright_weights_normed_bright_weights_normed_gauss_blur_1_update_0_read_bundle_read(bright_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_8(bright_weights_normed_0_c__0_value);
	// Produce: bright_weights_normed_gauss_blur_1
	bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_blur_1_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_1_update_0(bright_gauss_blur_1_cache& bright_gauss_blur_1, bright_gauss_ds_1_cache& bright_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_1
	auto bright_gauss_blur_1_0_c__0_value = bright_gauss_blur_1_bright_gauss_ds_1_update_0_read_bundle_read(bright_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(bright_gauss_blur_1_0_c__0_value);
	// Produce: bright_gauss_ds_1
	bright_gauss_ds_1_bright_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_2_update_0(bright_gauss_ds_1_cache& bright_gauss_ds_1, bright_gauss_blur_2_cache& bright_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1_0_c__0_value = bright_gauss_ds_1_bright_gauss_blur_2_update_0_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(bright_gauss_ds_1_0_c__0_value);
	// Produce: bright_gauss_blur_2
	bright_gauss_blur_2_bright_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_1_update_0(dark_weights_normed_gauss_blur_1_cache& dark_weights_normed_gauss_blur_1, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_1
	auto dark_weights_normed_gauss_blur_1_0_c__0_value = dark_weights_normed_gauss_blur_1_dark_weights_normed_gauss_ds_1_update_0_read_bundle_read(dark_weights_normed_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(dark_weights_normed_gauss_blur_1_0_c__0_value);
	// Produce: dark_weights_normed_gauss_ds_1
	dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_2_update_0(dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_1
	auto dark_weights_normed_gauss_ds_1_0_c__0_value = dark_weights_normed_gauss_ds_1_dark_weights_normed_gauss_blur_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(dark_weights_normed_gauss_ds_1_0_c__0_value);
	// Produce: dark_weights_normed_gauss_blur_2
	dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_2_update_0(dark_gauss_blur_2_cache& dark_gauss_blur_2, dark_gauss_ds_2_cache& dark_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_2
	auto dark_gauss_blur_2_0_c__0_value = dark_gauss_blur_2_dark_gauss_ds_2_update_0_read_bundle_read(dark_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(dark_gauss_blur_2_0_c__0_value);
	// Produce: dark_gauss_ds_2
	dark_gauss_ds_2_dark_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_blur_3_update_0(dark_gauss_ds_2_cache& dark_gauss_ds_2, dark_gauss_blur_3_cache& dark_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2_0_c__0_value = dark_gauss_ds_2_dark_gauss_blur_3_update_0_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_2(dark_gauss_ds_2_0_c__0_value);
	// Produce: dark_gauss_blur_3
	dark_gauss_blur_3_dark_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_1_update_0(bright_weights_normed_gauss_blur_1_cache& bright_weights_normed_gauss_blur_1, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_1
	auto bright_weights_normed_gauss_blur_1_0_c__0_value = bright_weights_normed_gauss_blur_1_bright_weights_normed_gauss_ds_1_update_0_read_bundle_read(bright_weights_normed_gauss_blur_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(bright_weights_normed_gauss_blur_1_0_c__0_value);
	// Produce: bright_weights_normed_gauss_ds_1
	bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_ds_1_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_2_update_0(bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_1
	auto bright_weights_normed_gauss_ds_1_0_c__0_value = bright_weights_normed_gauss_ds_1_bright_weights_normed_gauss_blur_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_4(bright_weights_normed_gauss_ds_1_0_c__0_value);
	// Produce: bright_weights_normed_gauss_blur_2
	bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_blur_2_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_2_update_0(bright_gauss_blur_2_cache& bright_gauss_blur_2, bright_gauss_ds_2_cache& bright_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_2
	auto bright_gauss_blur_2_0_c__0_value = bright_gauss_blur_2_bright_gauss_ds_2_update_0_read_bundle_read(bright_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(bright_gauss_blur_2_0_c__0_value);
	// Produce: bright_gauss_ds_2
	bright_gauss_ds_2_bright_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_blur_3_update_0(bright_gauss_ds_2_cache& bright_gauss_ds_2, bright_gauss_blur_3_cache& bright_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2_0_c__0_value = bright_gauss_ds_2_bright_gauss_blur_3_update_0_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_2(bright_gauss_ds_2_0_c__0_value);
	// Produce: bright_gauss_blur_3
	bright_gauss_blur_3_bright_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_2_update_0(bright_gauss_ds_2_cache& bright_gauss_ds_2, bright_laplace_us_2_cache& bright_laplace_us_2, bright_laplace_diff_2_cache& bright_laplace_diff_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2_0_c__0_value = bright_gauss_ds_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_2
	auto bright_laplace_us_2_0_c__0_value = bright_laplace_us_2_bright_laplace_diff_2_update_0_read_bundle_read(bright_laplace_us_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_2(bright_gauss_ds_2_0_c__0_value, bright_laplace_us_2_0_c__0_value);
	// Produce: bright_laplace_diff_2
	bright_laplace_diff_2_bright_laplace_diff_2_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_1_update_0(bright_gauss_ds_1_cache& bright_gauss_ds_1, bright_laplace_us_1_cache& bright_laplace_us_1, bright_laplace_diff_1_cache& bright_laplace_diff_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1_0_c__0_value = bright_gauss_ds_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_1
	auto bright_laplace_us_1_0_c__0_value = bright_laplace_us_1_bright_laplace_diff_1_update_0_read_bundle_read(bright_laplace_us_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_4(bright_gauss_ds_1_0_c__0_value, bright_laplace_us_1_0_c__0_value);
	// Produce: bright_laplace_diff_1
	bright_laplace_diff_1_bright_laplace_diff_1_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_diff_0_update_0(bright_cache& bright, bright_laplace_us_0_cache& bright_laplace_us_0, bright_laplace_diff_0_cache& bright_laplace_diff_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright
	auto bright_0_c__0_value = bright_bright_laplace_diff_0_update_0_read_bundle_read(bright/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_laplace_us_0
	auto bright_laplace_us_0_0_c__0_value = bright_laplace_us_0_bright_laplace_diff_0_update_0_read_bundle_read(bright_laplace_us_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_8(bright_0_c__0_value, bright_laplace_us_0_0_c__0_value);
	// Produce: bright_laplace_diff_0
	bright_laplace_diff_0_bright_laplace_diff_0_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_diff_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_3_update_0(bright_gauss_ds_3_cache& bright_gauss_ds_3, dark_gauss_ds_3_cache& dark_gauss_ds_3, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, fused_level_3_cache& fused_level_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3
	auto bright_gauss_ds_3_0_c__0_value = bright_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_gauss_ds_3
	auto dark_gauss_ds_3_0_c__0_value = dark_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_3
	auto bright_weights_normed_gauss_ds_3_0_c__0_value = bright_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_3
	auto dark_weights_normed_gauss_ds_3_0_c__0_value = dark_weights_normed_gauss_ds_3_fused_level_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_1(bright_gauss_ds_3_0_c__0_value, dark_gauss_ds_3_0_c__0_value, bright_weights_normed_gauss_ds_3_0_c__0_value, dark_weights_normed_gauss_ds_3_0_c__0_value);
	// Produce: fused_level_3
	fused_level_3_fused_level_3_update_0_write_bundle_write(/* arg names */compute_result, fused_level_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_2_update_0(bright_laplace_diff_2_cache& bright_laplace_diff_2, dark_laplace_diff_2_cache& dark_laplace_diff_2, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, fused_level_2_cache& fused_level_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_2
	auto bright_laplace_diff_2_0_c__0_value = bright_laplace_diff_2_fused_level_2_update_0_read_bundle_read(bright_laplace_diff_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_2
	auto dark_laplace_diff_2_0_c__0_value = dark_laplace_diff_2_fused_level_2_update_0_read_bundle_read(dark_laplace_diff_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_2
	auto bright_weights_normed_gauss_ds_2_0_c__0_value = bright_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_2
	auto dark_weights_normed_gauss_ds_2_0_c__0_value = dark_weights_normed_gauss_ds_2_fused_level_2_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_2(bright_laplace_diff_2_0_c__0_value, dark_laplace_diff_2_0_c__0_value, bright_weights_normed_gauss_ds_2_0_c__0_value, dark_weights_normed_gauss_ds_2_0_c__0_value);
	// Produce: fused_level_2
	fused_level_2_fused_level_2_update_0_write_bundle_write(/* arg names */compute_result, fused_level_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_1_update_0(bright_laplace_diff_1_cache& bright_laplace_diff_1, dark_laplace_diff_1_cache& dark_laplace_diff_1, bright_weights_normed_gauss_ds_1_cache& bright_weights_normed_gauss_ds_1, dark_weights_normed_gauss_ds_1_cache& dark_weights_normed_gauss_ds_1, fused_level_1_cache& fused_level_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_1
	auto bright_laplace_diff_1_0_c__0_value = bright_laplace_diff_1_fused_level_1_update_0_read_bundle_read(bright_laplace_diff_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_1
	auto dark_laplace_diff_1_0_c__0_value = dark_laplace_diff_1_fused_level_1_update_0_read_bundle_read(dark_laplace_diff_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed_gauss_ds_1
	auto bright_weights_normed_gauss_ds_1_0_c__0_value = bright_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(bright_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed_gauss_ds_1
	auto dark_weights_normed_gauss_ds_1_0_c__0_value = dark_weights_normed_gauss_ds_1_fused_level_1_update_0_read_bundle_read(dark_weights_normed_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_4(bright_laplace_diff_1_0_c__0_value, dark_laplace_diff_1_0_c__0_value, bright_weights_normed_gauss_ds_1_0_c__0_value, dark_weights_normed_gauss_ds_1_0_c__0_value);
	// Produce: fused_level_1
	fused_level_1_fused_level_1_update_0_write_bundle_write(/* arg names */compute_result, fused_level_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void fused_level_0_update_0(bright_laplace_diff_0_cache& bright_laplace_diff_0, dark_laplace_diff_0_cache& dark_laplace_diff_0, bright_weights_normed_cache& bright_weights_normed, dark_weights_normed_cache& dark_weights_normed, fused_level_0_cache& fused_level_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_laplace_diff_0
	auto bright_laplace_diff_0_0_c__0_value = bright_laplace_diff_0_fused_level_0_update_0_read_bundle_read(bright_laplace_diff_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_diff_0
	auto dark_laplace_diff_0_0_c__0_value = dark_laplace_diff_0_fused_level_0_update_0_read_bundle_read(dark_laplace_diff_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: bright_weights_normed
	auto bright_weights_normed_0_c__0_value = bright_weights_normed_fused_level_0_update_0_read_bundle_read(bright_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_weights_normed
	auto dark_weights_normed_0_c__0_value = dark_weights_normed_fused_level_0_update_0_read_bundle_read(dark_weights_normed/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weighted_merge_unrolled_8(bright_laplace_diff_0_0_c__0_value, dark_laplace_diff_0_0_c__0_value, bright_weights_normed_0_c__0_value, dark_weights_normed_0_c__0_value);
	// Produce: fused_level_0
	fused_level_0_fused_level_0_update_0_write_bundle_write(/* arg names */compute_result, fused_level_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_2_update_0(fused_level_3_cache& fused_level_3, fused_level_2_cache& fused_level_2, final_merged_2_cache& final_merged_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: fused_level_3
	auto fused_level_3_0_c__0_value = fused_level_3_final_merged_2_update_0_read_bundle_read(fused_level_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_2
	auto fused_level_2_0_c__0_value = fused_level_2_final_merged_2_update_0_read_bundle_read(fused_level_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_2(fused_level_3_0_c__0_value, fused_level_2_0_c__0_value);
	// Produce: final_merged_2
	final_merged_2_final_merged_2_update_0_write_bundle_write(/* arg names */compute_result, final_merged_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_1_update_0(final_merged_2_cache& final_merged_2, fused_level_1_cache& fused_level_1, final_merged_1_cache& final_merged_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: final_merged_2
	auto final_merged_2_0_c__0_value = final_merged_2_final_merged_1_update_0_read_bundle_read(final_merged_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_1
	auto fused_level_1_0_c__0_value = fused_level_1_final_merged_1_update_0_read_bundle_read(fused_level_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_4(final_merged_2_0_c__0_value, fused_level_1_0_c__0_value);
	// Produce: final_merged_1
	final_merged_1_final_merged_1_update_0_write_bundle_write(/* arg names */compute_result, final_merged_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void final_merged_0_update_0(final_merged_1_cache& final_merged_1, fused_level_0_cache& fused_level_0, final_merged_0_cache& final_merged_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: final_merged_1
	auto final_merged_1_0_c__0_value = final_merged_1_final_merged_0_update_0_read_bundle_read(final_merged_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: fused_level_0
	auto fused_level_0_0_c__0_value = fused_level_0_final_merged_0_update_0_read_bundle_read(fused_level_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = add_unrolled_8(final_merged_1_0_c__0_value, fused_level_0_0_c__0_value);
	// Produce: final_merged_0
	final_merged_0_final_merged_0_update_0_write_bundle_write(/* arg names */compute_result, final_merged_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void ef_8_update_0(final_merged_0_cache& final_merged_0, HWStream<hw_uint<128> >& /* buffer_args num ports = 8 */ef_8, int d0, int d1) {
  // Dynamic address computation

	// Consume: final_merged_0
	auto final_merged_0_0_c__0_value = final_merged_0_ef_8_update_0_read_bundle_read(final_merged_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(final_merged_0_0_c__0_value);
	// Produce: ef_8
	ef_8.write(compute_result);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void in_update_0(HWStream<hw_uint<128> >& /* buffer_args num ports = 8 */in_off_chip, in_cache& in, int d0, int d1) {
  // Dynamic address computation

	// Consume: in_off_chip
	auto in_off_chip_0_c__0_value = in_off_chip.read();
	auto compute_result = id_unrolled_8(in_off_chip_0_c__0_value);
	// Produce: in
	in_in_update_0_write_bundle_write(/* arg names */compute_result, in, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_update_0(in_cache& in, dark_cache& dark, int d0, int d1) {
  // Dynamic address computation

	// Consume: in
	auto in_0_c__0_value = in_dark_update_0_read_bundle_read(in/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = scale_exposure_unrolled_8(in_0_c__0_value);
	// Produce: dark
	dark_dark_update_0_write_bundle_write(/* arg names */compute_result, dark, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_update_0(in_cache& in, bright_cache& bright, int d0, int d1) {
  // Dynamic address computation

	// Consume: in
	auto in_0_c__0_value = in_bright_update_0_read_bundle_read(in/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(in_0_c__0_value);
	// Produce: bright
	bright_bright_update_0_write_bundle_write(/* arg names */compute_result, bright, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_update_0(dark_cache& dark, dark_weights_cache& dark_weights, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark
	auto dark_0_c__0_value = dark_dark_weights_update_0_read_bundle_read(dark/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weight_unrolled_8(dark_0_c__0_value);
	// Produce: dark_weights
	dark_weights_dark_weights_update_0_write_bundle_write(/* arg names */compute_result, dark_weights, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_update_0(bright_cache& bright, bright_weights_cache& bright_weights, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright
	auto bright_0_c__0_value = bright_bright_weights_update_0_read_bundle_read(bright/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_weight_unrolled_8(bright_0_c__0_value);
	// Produce: bright_weights
	bright_weights_bright_weights_update_0_write_bundle_write(/* arg names */compute_result, bright_weights, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_update_0(dark_weights_cache& dark_weights, dark_weights_normed_cache& dark_weights_normed, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights
	auto dark_weights_0_c__0_value = dark_weights_dark_weights_normed_update_0_read_bundle_read(dark_weights/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = psef_normalize_weights_unrolled_8(dark_weights_0_c__0_value);
	// Produce: dark_weights_normed
	dark_weights_normed_dark_weights_normed_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_2_update_0(dark_weights_normed_gauss_blur_2_cache& dark_weights_normed_gauss_blur_2, dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_2
	auto dark_weights_normed_gauss_blur_2_0_c__0_value = dark_weights_normed_gauss_blur_2_dark_weights_normed_gauss_ds_2_update_0_read_bundle_read(dark_weights_normed_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(dark_weights_normed_gauss_blur_2_0_c__0_value);
	// Produce: dark_weights_normed_gauss_ds_2
	dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_blur_3_update_0(dark_weights_normed_gauss_ds_2_cache& dark_weights_normed_gauss_ds_2, dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_ds_2
	auto dark_weights_normed_gauss_ds_2_0_c__0_value = dark_weights_normed_gauss_ds_2_dark_weights_normed_gauss_blur_3_update_0_read_bundle_read(dark_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_2(dark_weights_normed_gauss_ds_2_0_c__0_value);
	// Produce: dark_weights_normed_gauss_blur_3
	dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_gauss_ds_3_update_0(dark_gauss_blur_3_cache& dark_gauss_blur_3, dark_gauss_ds_3_cache& dark_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_blur_3
	auto dark_gauss_blur_3_0_c__0_value = dark_gauss_blur_3_dark_gauss_ds_3_update_0_read_bundle_read(dark_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_gauss_blur_3_0_c__0_value);
	// Produce: dark_gauss_ds_3
	dark_gauss_ds_3_dark_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, dark_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_2_update_0(bright_weights_normed_gauss_blur_2_cache& bright_weights_normed_gauss_blur_2, bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_2
	auto bright_weights_normed_gauss_blur_2_0_c__0_value = bright_weights_normed_gauss_blur_2_bright_weights_normed_gauss_ds_2_update_0_read_bundle_read(bright_weights_normed_gauss_blur_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(bright_weights_normed_gauss_blur_2_0_c__0_value);
	// Produce: bright_weights_normed_gauss_ds_2
	bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_ds_2_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_blur_3_update_0(bright_weights_normed_gauss_ds_2_cache& bright_weights_normed_gauss_ds_2, bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_ds_2
	auto bright_weights_normed_gauss_ds_2_0_c__0_value = bright_weights_normed_gauss_ds_2_bright_weights_normed_gauss_blur_3_update_0_read_bundle_read(bright_weights_normed_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = reduce_gauss_unrolled_2(bright_weights_normed_gauss_ds_2_0_c__0_value);
	// Produce: bright_weights_normed_gauss_blur_3
	bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_blur_3_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_blur_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_gauss_ds_3_update_0(bright_gauss_blur_3_cache& bright_gauss_blur_3, bright_gauss_ds_3_cache& bright_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_blur_3
	auto bright_gauss_blur_3_0_c__0_value = bright_gauss_blur_3_bright_gauss_ds_3_update_0_read_bundle_read(bright_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_gauss_blur_3_0_c__0_value);
	// Produce: bright_gauss_ds_3
	bright_gauss_ds_3_bright_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, bright_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_weights_normed_gauss_ds_3_update_0(dark_weights_normed_gauss_blur_3_cache& dark_weights_normed_gauss_blur_3, dark_weights_normed_gauss_ds_3_cache& dark_weights_normed_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_weights_normed_gauss_blur_3
	auto dark_weights_normed_gauss_blur_3_0_c__0_value = dark_weights_normed_gauss_blur_3_dark_weights_normed_gauss_ds_3_update_0_read_bundle_read(dark_weights_normed_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(dark_weights_normed_gauss_blur_3_0_c__0_value);
	// Produce: dark_weights_normed_gauss_ds_3
	dark_weights_normed_gauss_ds_3_dark_weights_normed_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, dark_weights_normed_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_2_update_0(dark_gauss_ds_3_cache& dark_gauss_ds_3, dark_laplace_us_2_cache& dark_laplace_us_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_3
	auto dark_gauss_ds_3_0_c__0_value = dark_gauss_ds_3_dark_laplace_us_2_update_0_read_bundle_read(dark_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(dark_gauss_ds_3_0_c__0_value);
	// Produce: dark_laplace_us_2
	dark_laplace_us_2_dark_laplace_us_2_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_us_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_1_update_0(dark_gauss_ds_2_cache& dark_gauss_ds_2, dark_laplace_us_1_cache& dark_laplace_us_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2_0_c__0_value = dark_gauss_ds_2_dark_laplace_us_1_update_0_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(dark_gauss_ds_2_0_c__0_value);
	// Produce: dark_laplace_us_1
	dark_laplace_us_1_dark_laplace_us_1_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_us_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_us_0_update_0(dark_gauss_ds_1_cache& dark_gauss_ds_1, dark_laplace_us_0_cache& dark_laplace_us_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1_0_c__0_value = dark_gauss_ds_1_dark_laplace_us_0_update_0_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(dark_gauss_ds_1_0_c__0_value);
	// Produce: dark_laplace_us_0
	dark_laplace_us_0_dark_laplace_us_0_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_us_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_2_update_0(dark_gauss_ds_2_cache& dark_gauss_ds_2, dark_laplace_us_2_cache& dark_laplace_us_2, dark_laplace_diff_2_cache& dark_laplace_diff_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_2
	auto dark_gauss_ds_2_0_c__0_value = dark_gauss_ds_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_2
	auto dark_laplace_us_2_0_c__0_value = dark_laplace_us_2_dark_laplace_diff_2_update_0_read_bundle_read(dark_laplace_us_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_2(dark_gauss_ds_2_0_c__0_value, dark_laplace_us_2_0_c__0_value);
	// Produce: dark_laplace_diff_2
	dark_laplace_diff_2_dark_laplace_diff_2_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_1_update_0(dark_gauss_ds_1_cache& dark_gauss_ds_1, dark_laplace_us_1_cache& dark_laplace_us_1, dark_laplace_diff_1_cache& dark_laplace_diff_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark_gauss_ds_1
	auto dark_gauss_ds_1_0_c__0_value = dark_gauss_ds_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_1
	auto dark_laplace_us_1_0_c__0_value = dark_laplace_us_1_dark_laplace_diff_1_update_0_read_bundle_read(dark_laplace_us_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_4(dark_gauss_ds_1_0_c__0_value, dark_laplace_us_1_0_c__0_value);
	// Produce: dark_laplace_diff_1
	dark_laplace_diff_1_dark_laplace_diff_1_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void dark_laplace_diff_0_update_0(dark_cache& dark, dark_laplace_us_0_cache& dark_laplace_us_0, dark_laplace_diff_0_cache& dark_laplace_diff_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: dark
	auto dark_0_c__0_value = dark_dark_laplace_diff_0_update_0_read_bundle_read(dark/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	// Consume: dark_laplace_us_0
	auto dark_laplace_us_0_0_c__0_value = dark_laplace_us_0_dark_laplace_diff_0_update_0_read_bundle_read(dark_laplace_us_0/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = diff_unrolled_8(dark_0_c__0_value, dark_laplace_us_0_0_c__0_value);
	// Produce: dark_laplace_diff_0
	dark_laplace_diff_0_dark_laplace_diff_0_update_0_write_bundle_write(/* arg names */compute_result, dark_laplace_diff_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_weights_normed_gauss_ds_3_update_0(bright_weights_normed_gauss_blur_3_cache& bright_weights_normed_gauss_blur_3, bright_weights_normed_gauss_ds_3_cache& bright_weights_normed_gauss_ds_3, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_weights_normed_gauss_blur_3
	auto bright_weights_normed_gauss_blur_3_0_c__0_value = bright_weights_normed_gauss_blur_3_bright_weights_normed_gauss_ds_3_update_0_read_bundle_read(bright_weights_normed_gauss_blur_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_1(bright_weights_normed_gauss_blur_3_0_c__0_value);
	// Produce: bright_weights_normed_gauss_ds_3
	bright_weights_normed_gauss_ds_3_bright_weights_normed_gauss_ds_3_update_0_write_bundle_write(/* arg names */compute_result, bright_weights_normed_gauss_ds_3, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_2_update_0(bright_gauss_ds_3_cache& bright_gauss_ds_3, bright_laplace_us_2_cache& bright_laplace_us_2, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_3
	auto bright_gauss_ds_3_0_c__0_value = bright_gauss_ds_3_bright_laplace_us_2_update_0_read_bundle_read(bright_gauss_ds_3/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_2(bright_gauss_ds_3_0_c__0_value);
	// Produce: bright_laplace_us_2
	bright_laplace_us_2_bright_laplace_us_2_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_us_2, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_1_update_0(bright_gauss_ds_2_cache& bright_gauss_ds_2, bright_laplace_us_1_cache& bright_laplace_us_1, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_2
	auto bright_gauss_ds_2_0_c__0_value = bright_gauss_ds_2_bright_laplace_us_1_update_0_read_bundle_read(bright_gauss_ds_2/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_4(bright_gauss_ds_2_0_c__0_value);
	// Produce: bright_laplace_us_1
	bright_laplace_us_1_bright_laplace_us_1_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_us_1, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

inline void bright_laplace_us_0_update_0(bright_gauss_ds_1_cache& bright_gauss_ds_1, bright_laplace_us_0_cache& bright_laplace_us_0, int d0, int d1) {
  // Dynamic address computation

	// Consume: bright_gauss_ds_1
	auto bright_gauss_ds_1_0_c__0_value = bright_gauss_ds_1_bright_laplace_us_0_update_0_read_bundle_read(bright_gauss_ds_1/* source_delay */, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

	auto compute_result = id_unrolled_8(bright_gauss_ds_1_0_c__0_value);
	// Produce: bright_laplace_us_0
	bright_laplace_us_0_bright_laplace_us_0_update_0_write_bundle_write(/* arg names */compute_result, bright_laplace_us_0, d0, d1, 0);

#ifndef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__

}

// Driver function
void ef_8_opt(HWStream<hw_uint<128> >& /* get_args num ports = 8 */in_off_chip, HWStream<hw_uint<128> >& /* get_args num ports = 8 */ef_8) {

#ifndef __VIVADO_SYNTH__
  ofstream debug_file("ef_8_opt_debug.csv");
  global_debug_handle = &debug_file;
#endif //__VIVADO_SYNTH__
  bright_cache bright;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_1_cache bright_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_2_cache bright_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_blur_3_cache bright_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_1_cache bright_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_2_cache bright_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_gauss_ds_3_cache bright_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_0_cache bright_laplace_diff_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_1_cache bright_laplace_diff_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_diff_2_cache bright_laplace_diff_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_0_cache bright_laplace_us_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_1_cache bright_laplace_us_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_laplace_us_2_cache bright_laplace_us_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_cache bright_weights;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_cache bright_weights_normed;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_1_cache bright_weights_normed_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_2_cache bright_weights_normed_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_blur_3_cache bright_weights_normed_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_1_cache bright_weights_normed_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_2_cache bright_weights_normed_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  bright_weights_normed_gauss_ds_3_cache bright_weights_normed_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_cache dark;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_1_cache dark_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_2_cache dark_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_blur_3_cache dark_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_1_cache dark_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_2_cache dark_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_gauss_ds_3_cache dark_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_0_cache dark_laplace_diff_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_1_cache dark_laplace_diff_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_diff_2_cache dark_laplace_diff_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_0_cache dark_laplace_us_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_1_cache dark_laplace_us_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_laplace_us_2_cache dark_laplace_us_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_cache dark_weights;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_cache dark_weights_normed;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_1_cache dark_weights_normed_gauss_blur_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_2_cache dark_weights_normed_gauss_blur_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_blur_3_cache dark_weights_normed_gauss_blur_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_1_cache dark_weights_normed_gauss_ds_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_2_cache dark_weights_normed_gauss_ds_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  dark_weights_normed_gauss_ds_3_cache dark_weights_normed_gauss_ds_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_0_cache final_merged_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_1_cache final_merged_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  final_merged_2_cache final_merged_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_0_cache fused_level_0;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_1_cache fused_level_1;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_2_cache fused_level_2;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  fused_level_3_cache fused_level_3;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
  in_cache in;
#ifdef __VIVADO_SYNTH__
#endif //__VIVADO_SYNTH__
#ifdef __VIVADO_SYNTH__
#pragma HLS inline recursive
#endif // __VIVADO_SYNTH__

// schedule: { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959; dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959; bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958; bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959; in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; dark_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 26] : 0 <= d0 <= 134 and 0 <= d1 <= 239; dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478; bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478; bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958; bright_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 38] : 0 <= d0 <= 134 and 0 <= d1 <= 479; bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959; bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479; dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918; dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918; dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478; final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479; dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959; final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959; dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478; bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479; dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958; dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 30] : 0 <= d0 <= 134 and 0 <= d1 <= 239; bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959; bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958; bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918; dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918; bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479; bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 37] : 0 <= d0 <= 134 and 0 <= d1 <= 239; fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239; dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479; final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959; bright_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 29] : 0 <= d0 <= 134 and 0 <= d1 <= 239; dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959; ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919; fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479; bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919; dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479; fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959; bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479; dark_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 31] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
//   { dark_weights_normed_update_0[d0, d1] -> [d1, d0, 6] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for dark_weights_normed_update_0(((((-6 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 35] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
// Condition for dark_laplace_diff_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-35 + 1*i2)) == 0) && (((-2 + 1*i1)) >= 0) && (((136 + -1*i1)) >= 0) && (((-3 + 1*i0)) >= 0) && (((1921 + -1*i0)) >= 0)))
//   { dark_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 16] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
// Condition for dark_weights_normed_gauss_ds_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-16 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 15] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
// Condition for bright_gauss_blur_2_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-15 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_weights_normed_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 20] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
// Condition for bright_weights_normed_gauss_ds_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-20 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { in_update_0[d0, d1] -> [d1, d0, 1] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for in_update_0(((((-1 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 26] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
// Condition for dark_gauss_ds_3_update_0(((((-1 + -1*i0 + (8*(((1 + 1*i0)) >> 3)))) == 0) && (((-26 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 33] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for dark_laplace_us_0_update_0(((((-33 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((135 + -1*i1)) >= 0) && (((-1 + 1*i0)) >= 0) && (((1920 + -1*i0)) >= 0)))
//   { fused_level_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 47] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for fused_level_0_update_0(((((-47 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((135 + -1*i1)) >= 0) && (((-1 + 1*i0)) >= 0) && (((1920 + -1*i0)) >= 0)))
//   { bright_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 23] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
// Condition for bright_gauss_blur_3_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-23 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 28] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
// Condition for bright_weights_normed_gauss_blur_3_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-28 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 43] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for bright_laplace_diff_0_update_0(((((-43 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((135 + -1*i1)) >= 0) && (((-1 + 1*i0)) >= 0) && (((1920 + -1*i0)) >= 0)))
//   { dark_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 12] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
// Condition for dark_gauss_blur_2_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-12 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 38] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
// Condition for bright_laplace_us_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-38 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1923 + -1*i0)) >= 0)))
//   { bright_laplace_us_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 40] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for bright_laplace_us_0_update_0(((((-40 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((135 + -1*i1)) >= 0) && (((-1 + 1*i0)) >= 0) && (((1920 + -1*i0)) >= 0)))
//   { dark_laplace_diff_0_update_0[d0, d1] -> [1 + d1, 1 + d0, 36] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for dark_laplace_diff_0_update_0(((((-36 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((135 + -1*i1)) >= 0) && (((-1 + 1*i0)) >= 0) && (((1920 + -1*i0)) >= 0)))
//   { bright_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 39] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
// Condition for bright_laplace_us_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-39 + 1*i2)) == 0) && (((-2 + 1*i1)) >= 0) && (((136 + -1*i1)) >= 0) && (((-3 + 1*i0)) >= 0) && (((1921 + -1*i0)) >= 0)))
//   { bright_weights_update_0[d0, d1] -> [d1, d0, 5] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for bright_weights_update_0(((((-5 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 18] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
// Condition for dark_gauss_ds_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-18 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 10] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
// Condition for dark_weights_normed_gauss_blur_1_update_0(((((-10 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 7] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
// Condition for dark_gauss_blur_1_update_0(((((-7 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_weights_normed_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 25] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
// Condition for dark_weights_normed_gauss_blur_3_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-25 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { final_merged_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 48] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
// Condition for final_merged_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-48 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1923 + -1*i0)) >= 0)))
//   { dark_laplace_us_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 32] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
// Condition for dark_laplace_us_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-32 + 1*i2)) == 0) && (((-2 + 1*i1)) >= 0) && (((136 + -1*i1)) >= 0) && (((-3 + 1*i0)) >= 0) && (((1921 + -1*i0)) >= 0)))
//   { final_merged_1_update_0[d0, d1] -> [7 + 2d1, 3 + d0, 49] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
// Condition for final_merged_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-49 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1925 + -1*i0)) >= 0)))
//   { dark_gauss_blur_3_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 19] : 0 <= d0 <= 134 and 0 <= d1 <= 478 }
// Condition for dark_gauss_blur_3_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-19 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 27] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
// Condition for bright_weights_normed_gauss_ds_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-27 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_weights_update_0[d0, d1] -> [d1, d0, 4] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for dark_weights_update_0(((((-4 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 17] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
// Condition for dark_weights_normed_gauss_blur_2_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-17 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 30] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
// Condition for dark_weights_normed_gauss_ds_3_update_0(((((-1 + -1*i0 + (8*(((1 + 1*i0)) >> 3)))) == 0) && (((-30 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 14] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
// Condition for bright_gauss_ds_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-14 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_weights_normed_gauss_blur_2_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 21] : -1 <= d0 <= 135 and -2 <= d1 <= 958 }
// Condition for bright_weights_normed_gauss_blur_2_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-21 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_weights_normed_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 13] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
// Condition for bright_weights_normed_gauss_blur_1_update_0(((((-13 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_update_0[d0, d1] -> [d1, d0, 2] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for dark_update_0(((((-2 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_gauss_blur_1_update_0[d0, d1] -> [1 + d1, 1 + d0, 9] : -2 <= d0 <= 136 and -6 <= d1 <= 1918 }
// Condition for bright_gauss_blur_1_update_0(((((-9 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_weights_normed_update_0[d0, d1] -> [d1, d0, 8] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for bright_weights_normed_update_0(((((-8 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { bright_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 41] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
// Condition for bright_laplace_diff_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-41 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1923 + -1*i0)) >= 0)))
//   { bright_weights_normed_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 37] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
// Condition for bright_weights_normed_gauss_ds_3_update_0(((((-1 + -1*i0 + (8*(((1 + 1*i0)) >> 3)))) == 0) && (((-37 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { fused_level_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 44] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
// Condition for fused_level_3_update_0(((((-1 + -1*i0 + (8*(((1 + 1*i0)) >> 3)))) == 0) && (((-44 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_weights_normed_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 24] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
// Condition for dark_weights_normed_gauss_ds_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-24 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { final_merged_0_update_0[d0, d1] -> [7 + d1, 3 + d0, 50] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for final_merged_0_update_0(((((-50 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1926 + -1*i0)) >= 0)))
//   { bright_laplace_diff_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 42] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
// Condition for bright_laplace_diff_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-42 + 1*i2)) == 0) && (((-2 + 1*i1)) >= 0) && (((136 + -1*i1)) >= 0) && (((-3 + 1*i0)) >= 0) && (((1921 + -1*i0)) >= 0)))
//   { bright_gauss_ds_3_update_0[d0, d1] -> [7 + 8d1, 3 + d0, 29] : 0 <= d0 <= 134 and 0 <= d1 <= 239 }
// Condition for bright_gauss_ds_3_update_0(((((-1 + -1*i0 + (8*(((1 + 1*i0)) >> 3)))) == 0) && (((-29 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_gauss_ds_1_update_0[d0, d1] -> [1 + 2d1, 1 + d0, 11] : -2 <= d0 <= 136 and -3 <= d1 <= 959 }
// Condition for dark_gauss_ds_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-11 + 1*i2)) == 0) && (((1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((5 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { ef_8_update_0[d0, d1] -> [7 + d1, 3 + d0, 51] : 0 <= d0 <= 134 and 0 <= d1 <= 1919 }
// Condition for ef_8_update_0(((((-51 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1926 + -1*i0)) >= 0)))
//   { fused_level_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 45] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
// Condition for fused_level_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-45 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1923 + -1*i0)) >= 0)))
//   { bright_update_0[d0, d1] -> [d1, d0, 3] : -3 <= d0 <= 137 and -7 <= d1 <= 1919 }
// Condition for bright_update_0(((((-3 + 1*i2)) == 0) && (((3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((7 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_laplace_diff_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 34] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
// Condition for dark_laplace_diff_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-34 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1923 + -1*i0)) >= 0)))
//   { fused_level_1_update_0[d0, d1] -> [3 + 2d1, 2 + d0, 46] : 0 <= d0 <= 134 and 0 <= d1 <= 959 }
// Condition for fused_level_1_update_0(((((-1 + -1*i0 + (2*(((1 + 1*i0)) >> 1)))) == 0) && (((-46 + 1*i2)) == 0) && (((-2 + 1*i1)) >= 0) && (((136 + -1*i1)) >= 0) && (((-3 + 1*i0)) >= 0) && (((1921 + -1*i0)) >= 0)))
//   { bright_gauss_ds_2_update_0[d0, d1] -> [3 + 4d1, 2 + d0, 22] : -1 <= d0 <= 135 and -1 <= d1 <= 479 }
// Condition for bright_gauss_ds_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-22 + 1*i2)) == 0) && (((-1 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((1 + 1*i0)) >= 0) && (((1919 + -1*i0)) >= 0)))
//   { dark_laplace_us_2_update_0[d0, d1] -> [7 + 4d1, 3 + d0, 31] : 0 <= d0 <= 134 and 0 <= d1 <= 479 }
// Condition for dark_laplace_us_2_update_0(((((-1 + -1*i0 + (4*(((1 + 1*i0)) >> 2)))) == 0) && (((-31 + 1*i2)) == 0) && (((-3 + 1*i1)) >= 0) && (((137 + -1*i1)) >= 0) && (((-7 + 1*i0)) >= 0) && (((1923 + -1*i0)) >= 0)))

	  // Schedules...
	    // bright_gauss_blur_1_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*9]
	    // bright_gauss_blur_2_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*15]
	    // bright_gauss_blur_3_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*23]
	    // bright_gauss_ds_1_update_0 -> [1*d1*1*2 + 1*1,1*d0*1*1 + 1*1,1*14]
	    // bright_gauss_ds_2_update_0 -> [1*d1*1*4 + 1*3,1*d0*1*1 + 1*2,1*22]
	    // bright_gauss_ds_3_update_0 -> [1*d1*1*8 + 1*7,1*d0*1*1 + 1*3,1*29]
	    // bright_laplace_diff_0_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*43]
	    // bright_laplace_diff_1_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*42]
	    // bright_laplace_diff_2_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*41]
	    // bright_laplace_us_0_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*40]
	    // bright_laplace_us_1_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*39]
	    // bright_laplace_us_2_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*38]
	    // bright_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*3]
	    // bright_weights_normed_gauss_blur_1_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*13]
	    // bright_weights_normed_gauss_blur_2_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*21]
	    // bright_weights_normed_gauss_blur_3_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*28]
	    // bright_weights_normed_gauss_ds_1_update_0 -> [1*d1*1*2 + 1*1,1*d0*1*1 + 1*1,1*20]
	    // bright_weights_normed_gauss_ds_2_update_0 -> [1*d1*1*4 + 1*3,1*d0*1*1 + 1*2,1*27]
	    // bright_weights_normed_gauss_ds_3_update_0 -> [1*d1*1*8 + 1*7,1*d0*1*1 + 1*3,1*37]
	    // bright_weights_normed_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*8]
	    // bright_weights_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*5]
	    // dark_gauss_blur_1_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*7]
	    // dark_gauss_blur_2_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*12]
	    // dark_gauss_blur_3_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*19]
	    // dark_gauss_ds_1_update_0 -> [1*d1*1*2 + 1*1,1*d0*1*1 + 1*1,1*11]
	    // dark_gauss_ds_2_update_0 -> [1*d1*1*4 + 1*3,1*d0*1*1 + 1*2,1*18]
	    // dark_gauss_ds_3_update_0 -> [1*d1*1*8 + 1*7,1*d0*1*1 + 1*3,1*26]
	    // dark_laplace_diff_0_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*36]
	    // dark_laplace_diff_1_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*35]
	    // dark_laplace_diff_2_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*34]
	    // dark_laplace_us_0_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*33]
	    // dark_laplace_us_1_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*32]
	    // dark_laplace_us_2_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*31]
	    // dark_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*2]
	    // dark_weights_normed_gauss_blur_1_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*10]
	    // dark_weights_normed_gauss_blur_2_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*17]
	    // dark_weights_normed_gauss_blur_3_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*25]
	    // dark_weights_normed_gauss_ds_1_update_0 -> [1*d1*1*2 + 1*1,1*d0*1*1 + 1*1,1*16]
	    // dark_weights_normed_gauss_ds_2_update_0 -> [1*d1*1*4 + 1*3,1*d0*1*1 + 1*2,1*24]
	    // dark_weights_normed_gauss_ds_3_update_0 -> [1*d1*1*8 + 1*7,1*d0*1*1 + 1*3,1*30]
	    // dark_weights_normed_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*6]
	    // dark_weights_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*4]
	    // ef_8_update_0 -> [1*d1*1*1 + 1*7,1*d0*1*1 + 1*3,1*51]
	    // final_merged_0_update_0 -> [1*d1*1*1 + 1*7,1*d0*1*1 + 1*3,1*50]
	    // final_merged_1_update_0 -> [1*d1*1*2 + 1*7,1*d0*1*1 + 1*3,1*49]
	    // final_merged_2_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*48]
	    // fused_level_0_update_0 -> [1*d1*1*1 + 1*1,1*d0*1*1 + 1*1,1*47]
	    // fused_level_1_update_0 -> [1*d1*1*2 + 1*3,1*d0*1*1 + 1*2,1*46]
	    // fused_level_2_update_0 -> [1*d1*1*4 + 1*7,1*d0*1*1 + 1*3,1*45]
	    // fused_level_3_update_0 -> [1*d1*1*8 + 1*7,1*d0*1*1 + 1*3,1*44]
	    // in_off_chip_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*0]
	    // in_update_0 -> [1*d1*1*1 + 1*0,1*d0*1*1 + 1*0,1*1]
	for (int c0 = -7; c0 <= 1926; c0++) {
	  for (int c1 = -3; c1 <= 137; c1++) {
	
	#ifdef __VIVADO_SYNTH__
	#pragma HLS pipeline II=1
	#endif // __VIVADO_SYNTH__
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      in_update_0(in_off_chip /* buf name */, in, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      dark_update_0(in /* buf name */, dark, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      bright_update_0(in /* buf name */, bright, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      dark_weights_update_0(dark /* buf name */, dark_weights, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      bright_weights_update_0(bright /* buf name */, bright_weights, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      dark_weights_normed_update_0(dark_weights /* buf name */, dark_weights_normed, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 1 == 0)) {
	      dark_gauss_blur_1_update_0(dark /* buf name */, dark_gauss_blur_1, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((-3 <= c1 && c1 <= 137) && ((c1 - 0) % 1 == 0) && (-7 <= c0 && c0 <= 1919) && ((c0 - 0) % 1 == 0)) {
	      bright_weights_normed_update_0(bright_weights /* buf name */, bright_weights_normed, (c1 - 0) / 1, (c0 - 0) / 1);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 1 == 0)) {
	      bright_gauss_blur_1_update_0(bright /* buf name */, bright_gauss_blur_1, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 1 == 0)) {
	      dark_weights_normed_gauss_blur_1_update_0(dark_weights_normed /* buf name */, dark_weights_normed_gauss_blur_1, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 2 == 0)) {
	      dark_gauss_ds_1_update_0(dark_gauss_blur_1 /* buf name */, dark_gauss_ds_1, (c1 - 1) / 1, (c0 - 1) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 2 == 0)) {
	      dark_gauss_blur_2_update_0(dark_gauss_ds_1 /* buf name */, dark_gauss_blur_2, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 1 == 0)) {
	      bright_weights_normed_gauss_blur_1_update_0(bright_weights_normed /* buf name */, bright_weights_normed_gauss_blur_1, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 2 == 0)) {
	      bright_gauss_ds_1_update_0(bright_gauss_blur_1 /* buf name */, bright_gauss_ds_1, (c1 - 1) / 1, (c0 - 1) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 2 == 0)) {
	      bright_gauss_blur_2_update_0(bright_gauss_ds_1 /* buf name */, bright_gauss_blur_2, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 2 == 0)) {
	      dark_weights_normed_gauss_ds_1_update_0(dark_weights_normed_gauss_blur_1 /* buf name */, dark_weights_normed_gauss_ds_1, (c1 - 1) / 1, (c0 - 1) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 2 == 0)) {
	      dark_weights_normed_gauss_blur_2_update_0(dark_weights_normed_gauss_ds_1 /* buf name */, dark_weights_normed_gauss_blur_2, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 4 == 0)) {
	      dark_gauss_ds_2_update_0(dark_gauss_blur_2 /* buf name */, dark_gauss_ds_2, (c1 - 2) / 1, (c0 - 3) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 4 == 0)) {
	      dark_gauss_blur_3_update_0(dark_gauss_ds_2 /* buf name */, dark_gauss_blur_3, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((-1 <= c1 && c1 <= 137) && ((c1 - 1) % 1 == 0) && (-5 <= c0 && c0 <= 1919) && ((c0 - 1) % 2 == 0)) {
	      bright_weights_normed_gauss_ds_1_update_0(bright_weights_normed_gauss_blur_1 /* buf name */, bright_weights_normed_gauss_ds_1, (c1 - 1) / 1, (c0 - 1) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 2 == 0)) {
	      bright_weights_normed_gauss_blur_2_update_0(bright_weights_normed_gauss_ds_1 /* buf name */, bright_weights_normed_gauss_blur_2, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 4 == 0)) {
	      bright_gauss_ds_2_update_0(bright_gauss_blur_2 /* buf name */, bright_gauss_ds_2, (c1 - 2) / 1, (c0 - 3) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 4 == 0)) {
	      bright_gauss_blur_3_update_0(bright_gauss_ds_2 /* buf name */, bright_gauss_blur_3, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 4 == 0)) {
	      dark_weights_normed_gauss_ds_2_update_0(dark_weights_normed_gauss_blur_2 /* buf name */, dark_weights_normed_gauss_ds_2, (c1 - 2) / 1, (c0 - 3) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 4 == 0)) {
	      dark_weights_normed_gauss_blur_3_update_0(dark_weights_normed_gauss_ds_2 /* buf name */, dark_weights_normed_gauss_blur_3, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 8 == 0)) {
	      dark_gauss_ds_3_update_0(dark_gauss_blur_3 /* buf name */, dark_gauss_ds_3, (c1 - 3) / 1, (c0 - 7) / 8);
	    }
	
	    if ((1 <= c1 && c1 <= 137) && ((c1 - 2) % 1 == 0) && (-1 <= c0 && c0 <= 1919) && ((c0 - 3) % 4 == 0)) {
	      bright_weights_normed_gauss_ds_2_update_0(bright_weights_normed_gauss_blur_2 /* buf name */, bright_weights_normed_gauss_ds_2, (c1 - 2) / 1, (c0 - 3) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 4 == 0)) {
	      bright_weights_normed_gauss_blur_3_update_0(bright_weights_normed_gauss_ds_2 /* buf name */, bright_weights_normed_gauss_blur_3, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 8 == 0)) {
	      bright_gauss_ds_3_update_0(bright_gauss_blur_3 /* buf name */, bright_gauss_ds_3, (c1 - 3) / 1, (c0 - 7) / 8);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 8 == 0)) {
	      dark_weights_normed_gauss_ds_3_update_0(dark_weights_normed_gauss_blur_3 /* buf name */, dark_weights_normed_gauss_ds_3, (c1 - 3) / 1, (c0 - 7) / 8);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1923) && ((c0 - 7) % 4 == 0)) {
	      dark_laplace_us_2_update_0(dark_gauss_ds_3 /* buf name */, dark_laplace_us_2, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((2 <= c1 && c1 <= 136) && ((c1 - 2) % 1 == 0) && (3 <= c0 && c0 <= 1921) && ((c0 - 3) % 2 == 0)) {
	      dark_laplace_us_1_update_0(dark_gauss_ds_2 /* buf name */, dark_laplace_us_1, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 135) && ((c1 - 1) % 1 == 0) && (1 <= c0 && c0 <= 1920) && ((c0 - 1) % 1 == 0)) {
	      dark_laplace_us_0_update_0(dark_gauss_ds_1 /* buf name */, dark_laplace_us_0, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1923) && ((c0 - 7) % 4 == 0)) {
	      dark_laplace_diff_2_update_0(dark_gauss_ds_2 /* buf name */, dark_laplace_us_2 /* buf name */, dark_laplace_diff_2, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((2 <= c1 && c1 <= 136) && ((c1 - 2) % 1 == 0) && (3 <= c0 && c0 <= 1921) && ((c0 - 3) % 2 == 0)) {
	      dark_laplace_diff_1_update_0(dark_gauss_ds_1 /* buf name */, dark_laplace_us_1 /* buf name */, dark_laplace_diff_1, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 135) && ((c1 - 1) % 1 == 0) && (1 <= c0 && c0 <= 1920) && ((c0 - 1) % 1 == 0)) {
	      dark_laplace_diff_0_update_0(dark /* buf name */, dark_laplace_us_0 /* buf name */, dark_laplace_diff_0, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 8 == 0)) {
	      bright_weights_normed_gauss_ds_3_update_0(bright_weights_normed_gauss_blur_3 /* buf name */, bright_weights_normed_gauss_ds_3, (c1 - 3) / 1, (c0 - 7) / 8);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1923) && ((c0 - 7) % 4 == 0)) {
	      bright_laplace_us_2_update_0(bright_gauss_ds_3 /* buf name */, bright_laplace_us_2, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((2 <= c1 && c1 <= 136) && ((c1 - 2) % 1 == 0) && (3 <= c0 && c0 <= 1921) && ((c0 - 3) % 2 == 0)) {
	      bright_laplace_us_1_update_0(bright_gauss_ds_2 /* buf name */, bright_laplace_us_1, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 135) && ((c1 - 1) % 1 == 0) && (1 <= c0 && c0 <= 1920) && ((c0 - 1) % 1 == 0)) {
	      bright_laplace_us_0_update_0(bright_gauss_ds_1 /* buf name */, bright_laplace_us_0, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1923) && ((c0 - 7) % 4 == 0)) {
	      bright_laplace_diff_2_update_0(bright_gauss_ds_2 /* buf name */, bright_laplace_us_2 /* buf name */, bright_laplace_diff_2, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((2 <= c1 && c1 <= 136) && ((c1 - 2) % 1 == 0) && (3 <= c0 && c0 <= 1921) && ((c0 - 3) % 2 == 0)) {
	      bright_laplace_diff_1_update_0(bright_gauss_ds_1 /* buf name */, bright_laplace_us_1 /* buf name */, bright_laplace_diff_1, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 135) && ((c1 - 1) % 1 == 0) && (1 <= c0 && c0 <= 1920) && ((c0 - 1) % 1 == 0)) {
	      bright_laplace_diff_0_update_0(bright /* buf name */, bright_laplace_us_0 /* buf name */, bright_laplace_diff_0, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1919) && ((c0 - 7) % 8 == 0)) {
	      fused_level_3_update_0(bright_gauss_ds_3 /* buf name */, dark_gauss_ds_3 /* buf name */, bright_weights_normed_gauss_ds_3 /* buf name */, dark_weights_normed_gauss_ds_3 /* buf name */, fused_level_3, (c1 - 3) / 1, (c0 - 7) / 8);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1923) && ((c0 - 7) % 4 == 0)) {
	      fused_level_2_update_0(bright_laplace_diff_2 /* buf name */, dark_laplace_diff_2 /* buf name */, bright_weights_normed_gauss_ds_2 /* buf name */, dark_weights_normed_gauss_ds_2 /* buf name */, fused_level_2, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((2 <= c1 && c1 <= 136) && ((c1 - 2) % 1 == 0) && (3 <= c0 && c0 <= 1921) && ((c0 - 3) % 2 == 0)) {
	      fused_level_1_update_0(bright_laplace_diff_1 /* buf name */, dark_laplace_diff_1 /* buf name */, bright_weights_normed_gauss_ds_1 /* buf name */, dark_weights_normed_gauss_ds_1 /* buf name */, fused_level_1, (c1 - 2) / 1, (c0 - 3) / 2);
	    }
	
	    if ((1 <= c1 && c1 <= 135) && ((c1 - 1) % 1 == 0) && (1 <= c0 && c0 <= 1920) && ((c0 - 1) % 1 == 0)) {
	      fused_level_0_update_0(bright_laplace_diff_0 /* buf name */, dark_laplace_diff_0 /* buf name */, bright_weights_normed /* buf name */, dark_weights_normed /* buf name */, fused_level_0, (c1 - 1) / 1, (c0 - 1) / 1);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1923) && ((c0 - 7) % 4 == 0)) {
	      final_merged_2_update_0(fused_level_3 /* buf name */, fused_level_2 /* buf name */, final_merged_2, (c1 - 3) / 1, (c0 - 7) / 4);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1925) && ((c0 - 7) % 2 == 0)) {
	      final_merged_1_update_0(final_merged_2 /* buf name */, fused_level_1 /* buf name */, final_merged_1, (c1 - 3) / 1, (c0 - 7) / 2);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1926) && ((c0 - 7) % 1 == 0)) {
	      final_merged_0_update_0(final_merged_1 /* buf name */, fused_level_0 /* buf name */, final_merged_0, (c1 - 3) / 1, (c0 - 7) / 1);
	    }
	
	    if ((3 <= c1 && c1 <= 137) && ((c1 - 3) % 1 == 0) && (7 <= c0 && c0 <= 1926) && ((c0 - 7) % 1 == 0)) {
	      ef_8_update_0(final_merged_0 /* buf name */, ef_8, (c1 - 3) / 1, (c0 - 7) / 1);
	    }
	
	  }
	}
	
#ifndef __VIVADO_SYNTH__
  debug_file.close();
#endif //__VIVADO_SYNTH__
}

void ef_8_opt_wrapper(HWStream<hw_uint<128> >& /* get_args num ports = 8 */in_off_chip, HWStream<hw_uint<128> >& /* get_args num ports = 8 */ef_8, const int num_epochs) {

  for (int epoch = 0; epoch < num_epochs; epoch++) {
    ef_8_opt(in_off_chip, ef_8);
  }
}
#ifdef __VIVADO_SYNTH__
  // { ef_8_update_0[root = 0, ef_8_0, ef_8_1] -> ef_8[0, 0] : 0 <= ef_8_0 <= 134 and 0 <= ef_8_1 <= 1919 }
const int ef_8_update_0_write_pipe0_num_transfers = 259200;
  // { in_update_0[root = 0, in_0, in_1] -> in_off_chip[0, 0] : -3 <= in_0 <= 137 and -7 <= in_1 <= 1919 }
const int in_update_0_read_pipe0_num_transfers = 271707;


extern "C" {

void ef_8_opt_accel(hw_uint<128>* in_update_0_read_pipe0, hw_uint<128>* ef_8_update_0_write_pipe0, const int size) { 
#pragma HLS dataflow
#pragma HLS INTERFACE m_axi port = in_update_0_read_pipe0 offset = slave depth = 65536 bundle = gmem0
#pragma HLS INTERFACE m_axi port = ef_8_update_0_write_pipe0 offset = slave depth = 65536 bundle = gmem1

#pragma HLS INTERFACE s_axilite port = in_update_0_read_pipe0 bundle = control
#pragma HLS INTERFACE s_axilite port = ef_8_update_0_write_pipe0 bundle = control
#pragma HLS INTERFACE s_axilite port = size bundle = control
#pragma HLS INTERFACE s_axilite port = return bundle = control


  // Pipeline # 0
  static HWStream<hw_uint<128> > in_update_0_read_pipe0_channel;
  static HWStream<hw_uint<128> > ef_8_update_0_write_pipe0_channel;

  burst_read<128>(in_update_0_read_pipe0, in_update_0_read_pipe0_channel, in_update_0_read_pipe0_num_transfers*size);

  ef_8_opt_wrapper(in_update_0_read_pipe0_channel, ef_8_update_0_write_pipe0_channel, size);

  burst_write<128>(ef_8_update_0_write_pipe0, ef_8_update_0_write_pipe0_channel, ef_8_update_0_write_pipe0_num_transfers*size);
}

}
extern "C" {

void ef_8_opt_rdai(HWStream<hw_uint<128> >& in_update_0_read_pipe0, HWStream<hw_uint<128> >&  ef_8_update_0_write_pipe0) { 
#pragma HLS dataflow
#pragma HLS INTERFACE axis register port = in_update_0_read_pipe0
#pragma HLS INTERFACE axis register port = ef_8_update_0_write_pipe0

#pragma HLS INTERFACE ap_ctrl_none port = return


  // Pipeline # 0

  ef_8_opt(in_update_0_read_pipe0, ef_8_update_0_write_pipe0);

}

}
#endif //__VIVADO_SYNTH__

