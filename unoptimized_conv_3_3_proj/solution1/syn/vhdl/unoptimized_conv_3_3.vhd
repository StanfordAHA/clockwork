-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity unoptimized_conv_3_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_copy_stencil_values_V_val_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    input_copy_stencil_values_V_val_V_empty_n : IN STD_LOGIC;
    input_copy_stencil_values_V_val_V_read : OUT STD_LOGIC;
    kernel_copy_stencil_values_V_val_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_copy_stencil_values_V_val_V_empty_n : IN STD_LOGIC;
    kernel_copy_stencil_values_V_val_V_read : OUT STD_LOGIC;
    hw_output_stencil_values_V_val_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    hw_output_stencil_values_V_val_V_full_n : IN STD_LOGIC;
    hw_output_stencil_values_V_val_V_write : OUT STD_LOGIC );
end;


architecture behav of unoptimized_conv_3_3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "unoptimized_conv_3_3,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.246750,HLS_SYN_LAT=45861,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=9,HLS_SYN_FF=992,HLS_SYN_LUT=2557,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (46 downto 0) := "00000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (46 downto 0) := "00000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (46 downto 0) := "00000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (46 downto 0) := "00000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (46 downto 0) := "00000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (46 downto 0) := "00000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (46 downto 0) := "00001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (46 downto 0) := "00010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (46 downto 0) := "00100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (46 downto 0) := "01000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (46 downto 0) := "10000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_copy_stencil_values_V_val_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln1229_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_copy_stencil_values_V_val_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln1234_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hw_output_stencil_values_V_val_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal hw_input_stencil_hw_s_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_547 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal hw_input_stencil_hw_s_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal reg_552 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_stencil_conv_st_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_557 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal conv_stencil_conv_st_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal reg_562 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_567 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_fu_578_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c3_reg_2308 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln1228_fu_584_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1228_reg_2313 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1227_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_fu_594_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c5_reg_2321 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln1229_fu_600_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1229_reg_2326 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1228_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_1_fu_610_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c7_1_reg_2334 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal tmp_val_V_reg_2339 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln321_3_fu_661_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln321_3_reg_2344 : STD_LOGIC_VECTOR (10 downto 0);
    signal c3_1_fu_676_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c3_1_reg_2352 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln1232_fu_682_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1232_reg_2357 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1231_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_1_fu_692_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c5_1_reg_2365 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln592_fu_698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln592_reg_2370 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1232_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_fu_708_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c7_reg_2378 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln1234_fu_714_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1234_reg_2383 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1233_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c9_fu_724_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c9_reg_2391 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state9 : BOOLEAN;
    signal tmp_val_V_1_reg_2396 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln321_fu_774_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln321_reg_2401 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln321_1_fu_778_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln321_1_reg_2406 : STD_LOGIC_VECTOR (5 downto 0);
    signal c3_3_fu_810_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c3_3_reg_2414 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln321_fu_816_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln321_reg_2419 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1236_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_3_fu_826_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c5_3_reg_2427 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_4_cast_fu_859_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_cast_reg_2432 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1237_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_2_fu_873_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln1240_fu_893_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1240_reg_2445 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal c3_5_fu_903_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c3_5_reg_2454 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln414_1_fu_909_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln414_1_reg_2459 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1240_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln414_fu_913_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln414_reg_2464 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1241_fu_917_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1241_reg_2469 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal c5_5_fu_931_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c5_5_reg_2479 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln586_fu_937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln586_reg_2484 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1241_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln396_fu_941_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln396_reg_2489 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln405_fu_951_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln405_reg_2496 : STD_LOGIC_VECTOR (5 downto 0);
    signal c7_4_fu_961_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c7_4_reg_2506 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal zext_ln197_3_fu_989_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln197_3_reg_2511 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln1242_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1243_fu_1001_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1243_reg_2524 : STD_LOGIC_VECTOR (4 downto 0);
    signal c9_1_fu_1011_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c9_1_reg_2532 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal trunc_ln197_fu_1053_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln197_reg_2537 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1243_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln197_1_fu_1057_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_1_reg_2542 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal zext_ln197_7_fu_1083_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln197_7_reg_2552 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal hw_kernel_stencil_hw_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal hw_kernel_stencil_op_reg_2565 : STD_LOGIC_VECTOR (15 downto 0);
    signal c11_fu_1097_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c11_reg_2581 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal sub_ln79_fu_1115_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln79_reg_2586 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1244_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1245_fu_1126_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1245_reg_2596 : STD_LOGIC_VECTOR (10 downto 0);
    signal c13_fu_1140_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c13_reg_2606 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal sub_ln79_1_fu_1158_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln79_1_reg_2611 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1245_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln197_2_fu_1164_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln197_2_reg_2618 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln197_3_fu_1186_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_3_reg_2623 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_4_fu_1190_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_4_reg_2628 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_6_fu_1212_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_6_reg_2633 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_7_fu_1216_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_7_reg_2638 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln405_1_fu_1220_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln405_1_reg_2643 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln106_fu_1225_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln106_reg_2648 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1250_fu_1234_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1250_reg_2655 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_6_fu_1257_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_6_reg_2662 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal add_ln197_11_fu_1315_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_11_reg_2672 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_16_fu_1373_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_16_reg_2682 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_20_fu_1413_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_20_reg_2687 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_stencil_conv_st_2_reg_2692 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_3_reg_2697 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_4_reg_2707 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2242_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_660_reg_2713 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2249_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_673_reg_2718 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2256_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_688_reg_2723 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal c13_1_fu_1483_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c13_1_reg_2731 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal sub_ln106_fu_1501_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln106_reg_2736 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1250_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln197_11_fu_1507_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln197_11_reg_2743 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln197_12_fu_1529_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_12_reg_2748 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_13_fu_1533_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_13_reg_2753 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_15_fu_1555_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_15_reg_2758 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_16_fu_1559_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_16_reg_2763 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln432_fu_1563_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln432_reg_2768 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln133_fu_1568_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln133_reg_2773 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1255_fu_1578_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1255_reg_2780 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_21_fu_1601_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_21_reg_2787 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal add_ln197_26_fu_1659_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_26_reg_2797 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_31_fu_1717_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_31_reg_2807 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_35_fu_1757_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_35_reg_2812 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_stencil_conv_st_5_reg_2817 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_6_reg_2823 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_7_reg_2834 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2263_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_703_reg_2840 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2270_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_718_reg_2845 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2277_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_735_reg_2850 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal c13_2_fu_1827_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c13_2_reg_2858 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal sub_ln133_fu_1845_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln133_reg_2863 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1255_fu_1821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln197_20_fu_1851_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln197_20_reg_2870 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln197_21_fu_1873_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_21_reg_2875 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_22_fu_1877_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_22_reg_2880 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_24_fu_1899_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_24_reg_2885 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_25_fu_1903_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_25_reg_2890 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_27_fu_1925_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_27_reg_2895 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_28_fu_1929_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln197_28_reg_2900 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln197_36_fu_1952_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_36_reg_2905 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal add_ln197_41_fu_2010_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_41_reg_2915 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_46_fu_2068_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_46_reg_2925 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_50_fu_2086_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_50_reg_2930 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_stencil_conv_st_8_reg_2935 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_9_reg_2941 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_10_reg_2947 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2284_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_752_reg_2958 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2291_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_767_reg_2963 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2298_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_784_reg_2968 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal c3_6_fu_2152_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c3_6_reg_2976 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal zext_ln1262_fu_2158_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1262_reg_2981 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1261_fu_2146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_6_fu_2168_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c5_6_reg_2989 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal zext_ln197_fu_2174_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln197_reg_2994 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1262_fu_2162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c7_5_fu_2184_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c7_5_reg_3002 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal add_ln197_2_fu_2225_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_2_reg_3007 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1263_fu_2178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal p_800_fu_2234_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_800_reg_3017 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal conv_stencil_conv_st_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_ce0 : STD_LOGIC;
    signal conv_stencil_conv_st_we0 : STD_LOGIC;
    signal conv_stencil_conv_st_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_stencil_conv_st_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_stencil_conv_st_ce1 : STD_LOGIC;
    signal conv_stencil_conv_st_we1 : STD_LOGIC;
    signal conv_stencil_conv_st_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal hw_input_stencil_hw_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal hw_input_stencil_hw_s_ce0 : STD_LOGIC;
    signal hw_input_stencil_hw_s_we0 : STD_LOGIC;
    signal hw_input_stencil_hw_s_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal hw_input_stencil_hw_s_ce1 : STD_LOGIC;
    signal hw_kernel_stencil_hw_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal hw_kernel_stencil_hw_ce0 : STD_LOGIC;
    signal hw_kernel_stencil_hw_we0 : STD_LOGIC;
    signal hw_input_s0_y_assign_reg_315 : STD_LOGIC_VECTOR (4 downto 0);
    signal hw_input_s0_x_assign_reg_326 : STD_LOGIC_VECTOR (4 downto 0);
    signal hw_input_s0_z_assign_reg_337 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal hw_kernel_s0_y_assig_reg_348 : STD_LOGIC_VECTOR (1 downto 0);
    signal hw_kernel_s0_x_assig_reg_359 : STD_LOGIC_VECTOR (1 downto 0);
    signal hw_kernel_s0_w_assig_reg_370 : STD_LOGIC_VECTOR (2 downto 0);
    signal hw_kernel_s0_z_assig_reg_381 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal conv_s0_y_assign_reg_392 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_s0_x_assign_reg_403 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1238_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_s0_w_assign_reg_414 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_s1_r_y_assign_reg_425 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv_s1_r_x_assign_reg_436 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv_s1_r_z_assign_reg_447 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv_s1_w_assign_reg_458 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_s1_y_y_assign_reg_470 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_s1_x_x_assign_reg_481 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal conv_s1_x_x_assign_1_reg_492 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal conv_s1_x_x_assign_2_reg_503 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal hw_output_s0_w_assig_reg_514 : STD_LOGIC_VECTOR (2 downto 0);
    signal hw_output_s0_y_yi_as_reg_525 : STD_LOGIC_VECTOR (3 downto 0);
    signal hw_output_s0_x_xi_as_reg_536 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln321_4_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_12_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_8_fu_888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_11_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_14_fu_1280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_17_fu_1338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_12_fu_1430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_15_fu_1447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_20_fu_1452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_18_fu_1468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_23_fu_1624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_26_fu_1682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_21_fu_1774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_24_fu_1791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_29_fu_1796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_27_fu_1812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_32_fu_1975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_35_fu_2033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_30_fu_2103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_33_fu_2120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_36_fu_2137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_38_fu_2142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_6_fu_2230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_620_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln321_1_fu_616_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_2_fu_628_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln321_fu_632_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln321_1_fu_638_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_3_fu_643_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_647_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln321_2_fu_655_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_730_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln321_9_fu_738_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln321_6_fu_742_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_751_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_11_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_10_fu_747_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln321_1_fu_763_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln321_7_fu_769_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl2_cast_fu_782_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln321_2_fu_789_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln321_8_fu_794_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_836_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln321_6_fu_844_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln321_5_fu_832_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln321_fu_848_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln321_4_fu_854_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln321_7_fu_879_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln321_5_fu_883_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1241_1_fu_921_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln405_fu_945_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_971_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln197_1_fu_967_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln197_2_fu_979_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln197_fu_983_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_993_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln197_8_fu_1017_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln197_3_fu_1021_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_1030_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln197_10_fu_1038_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_9_fu_1026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln197_1_fu_1042_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln197_4_fu_1048_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl6_cast_fu_1061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln197_2_fu_1068_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln197_5_fu_1073_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln79_1_fu_1103_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln79_fu_1111_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1244_fu_1087_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln387_fu_1121_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_fu_1146_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln79_1_fu_1154_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1245_fu_1130_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln387_1_fu_1168_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln387_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_13_fu_1177_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_8_fu_1181_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln396_fu_1194_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln396_fu_1199_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_16_fu_1203_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_13_fu_1207_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln414_fu_1230_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln197_3_cast_fu_1241_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_fu_1238_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_1_fu_1254_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_3_fu_1248_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_cast_fu_1263_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_9_fu_1270_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_10_fu_1275_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln88_fu_1285_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_5_fu_1294_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln197_4_cast_fu_1298_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_2_fu_1290_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_3_fu_1312_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_4_fu_1306_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_cast_fu_1321_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_14_fu_1328_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_15_fu_1333_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln97_fu_1343_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_8_fu_1352_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln197_5_cast_fu_1356_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_4_fu_1348_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_5_fu_1370_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_5_fu_1364_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln405_fu_1379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_19_fu_1382_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_18_fu_1386_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln197_10_fu_1395_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl8_cast_fu_1399_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_9_fu_1391_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_19_fu_1407_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_cast_fu_1418_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_7_fu_1425_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_cast_fu_1435_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_12_fu_1442_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_cast_fu_1456_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_17_fu_1463_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1_fu_1489_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln106_fu_1497_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1250_fu_1473_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln414_1_fu_1511_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln414_fu_1516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_22_fu_1520_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_23_fu_1524_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln423_fu_1537_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln423_fu_1542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_25_fu_1546_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_28_fu_1550_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln441_fu_1573_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln197_6_cast_fu_1585_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_6_fu_1582_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_7_fu_1598_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_6_fu_1592_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_cast_fu_1607_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_24_fu_1614_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_25_fu_1619_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln115_fu_1629_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_14_fu_1638_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln197_7_cast_fu_1642_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_8_fu_1634_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_9_fu_1656_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_7_fu_1650_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl9_cast_fu_1665_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_29_fu_1672_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_30_fu_1677_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln124_fu_1687_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_17_fu_1696_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln197_8_cast_fu_1700_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_10_fu_1692_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_11_fu_1714_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_8_fu_1708_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln432_fu_1723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_28_fu_1726_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_33_fu_1730_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln197_19_fu_1739_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_cast_fu_1743_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_18_fu_1735_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_34_fu_1751_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_cast_fu_1762_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_22_fu_1769_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_33_cast_fu_1779_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_27_fu_1786_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_cast_fu_1800_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_32_fu_1807_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln2_fu_1833_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln133_fu_1841_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1255_fu_1817_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln441_1_fu_1855_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln441_fu_1860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_31_fu_1864_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_38_fu_1868_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln450_fu_1881_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln450_fu_1886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_34_fu_1890_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_43_fu_1894_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln459_fu_1907_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln459_fu_1912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln197_37_fu_1916_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln197_48_fu_1920_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln197_9_cast_fu_1936_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_12_fu_1933_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_13_fu_1949_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_9_fu_1943_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl11_cast_fu_1958_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_39_fu_1965_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_40_fu_1970_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln142_fu_1980_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_23_fu_1989_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln197_10_cast_fu_1993_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_14_fu_1985_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_15_fu_2007_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_10_fu_2001_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl12_cast_fu_2016_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_44_fu_2023_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_45_fu_2028_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln151_fu_2038_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_26_fu_2047_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln197_11_cast_fu_2051_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_16_fu_2043_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln197_17_fu_2065_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_11_fu_2059_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl13_cast_fu_2074_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_49_fu_2081_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_cast_fu_2091_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_37_fu_2098_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_45_cast_fu_2108_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_42_fu_2115_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_cast_fu_2125_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln197_47_fu_2132_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_2194_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln197_5_fu_2202_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln197_4_fu_2190_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln197_fu_2206_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln197_1_fu_2212_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_cast_fu_2217_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (46 downto 0);

    component unoptimized_conv_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component unoptimized_conv_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component unoptimized_conv_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component unoptimized_conv_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv_stencil_conv_st_U : component unoptimized_conv_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 900,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_stencil_conv_st_address0,
        ce0 => conv_stencil_conv_st_ce0,
        we0 => conv_stencil_conv_st_we0,
        d0 => conv_stencil_conv_st_d0,
        q0 => conv_stencil_conv_st_q0,
        address1 => conv_stencil_conv_st_address1,
        ce1 => conv_stencil_conv_st_ce1,
        we1 => conv_stencil_conv_st_we1,
        d1 => conv_stencil_conv_st_d1,
        q1 => conv_stencil_conv_st_q1);

    hw_input_stencil_hw_s_U : component unoptimized_conv_cud
    generic map (
        DataWidth => 16,
        AddressRange => 578,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hw_input_stencil_hw_s_address0,
        ce0 => hw_input_stencil_hw_s_ce0,
        we0 => hw_input_stencil_hw_s_we0,
        d0 => tmp_val_V_reg_2339,
        q0 => hw_input_stencil_hw_s_q0,
        address1 => hw_input_stencil_hw_s_address1,
        ce1 => hw_input_stencil_hw_s_ce1,
        q1 => hw_input_stencil_hw_s_q1);

    hw_kernel_stencil_hw_U : component unoptimized_conv_dEe
    generic map (
        DataWidth => 16,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hw_kernel_stencil_hw_address0,
        ce0 => hw_kernel_stencil_hw_ce0,
        we0 => hw_kernel_stencil_hw_we0,
        d0 => tmp_val_V_1_reg_2396,
        q0 => hw_kernel_stencil_hw_q0);

    unoptimized_conv_eOg_U1 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_547,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_557,
        ce => ap_const_logic_1,
        dout => grp_fu_2242_p3);

    unoptimized_conv_eOg_U2 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_552,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_562,
        ce => ap_const_logic_1,
        dout => grp_fu_2249_p3);

    unoptimized_conv_eOg_U3 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_567,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_557,
        ce => ap_const_logic_1,
        dout => grp_fu_2256_p3);

    unoptimized_conv_eOg_U4 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_547,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_557,
        ce => ap_const_logic_1,
        dout => grp_fu_2263_p3);

    unoptimized_conv_eOg_U5 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_552,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_562,
        ce => ap_const_logic_1,
        dout => grp_fu_2270_p3);

    unoptimized_conv_eOg_U6 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_567,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_557,
        ce => ap_const_logic_1,
        dout => grp_fu_2277_p3);

    unoptimized_conv_eOg_U7 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_547,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_557,
        ce => ap_const_logic_1,
        dout => grp_fu_2284_p3);

    unoptimized_conv_eOg_U8 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_552,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_562,
        ce => ap_const_logic_1,
        dout => grp_fu_2291_p3);

    unoptimized_conv_eOg_U9 : component unoptimized_conv_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_567,
        din1 => hw_kernel_stencil_op_reg_2565,
        din2 => reg_557,
        ce => ap_const_logic_1,
        dout => grp_fu_2298_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    conv_s0_w_assign_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1237_fu_820_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                conv_s0_w_assign_reg_414 <= ap_const_lv3_0;
            elsif (((icmp_ln1238_fu_867_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                conv_s0_w_assign_reg_414 <= c7_2_fu_873_p2;
            end if; 
        end if;
    end process;

    conv_s0_x_assign_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1238_fu_867_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                conv_s0_x_assign_reg_403 <= c5_3_reg_2427;
            elsif (((icmp_ln1236_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                conv_s0_x_assign_reg_403 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    conv_s0_y_assign_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1231_fu_670_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                conv_s0_y_assign_reg_392 <= ap_const_lv4_0;
            elsif (((icmp_ln1237_fu_820_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                conv_s0_y_assign_reg_392 <= c3_3_reg_2414;
            end if; 
        end if;
    end process;

    conv_s1_r_x_assign_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1242_fu_955_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                conv_s1_r_x_assign_reg_436 <= c5_5_reg_2479;
            elsif (((icmp_ln1240_fu_897_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                conv_s1_r_x_assign_reg_436 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    conv_s1_r_y_assign_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1236_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                conv_s1_r_y_assign_reg_425 <= ap_const_lv2_0;
            elsif (((icmp_ln1241_fu_925_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                conv_s1_r_y_assign_reg_425 <= c3_5_reg_2454;
            end if; 
        end if;
    end process;

    conv_s1_r_z_assign_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1243_fu_1005_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                conv_s1_r_z_assign_reg_447 <= c7_4_reg_2506;
            elsif (((icmp_ln1241_fu_925_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                conv_s1_r_z_assign_reg_447 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    conv_s1_w_assign_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1244_fu_1091_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                conv_s1_w_assign_reg_458 <= c9_1_reg_2532;
            elsif (((icmp_ln1242_fu_955_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                conv_s1_w_assign_reg_458 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    conv_s1_x_x_assign_1_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1245_fu_1134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                conv_s1_x_x_assign_1_reg_492 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                conv_s1_x_x_assign_1_reg_492 <= c13_1_reg_2731;
            end if; 
        end if;
    end process;

    conv_s1_x_x_assign_2_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1250_fu_1477_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                conv_s1_x_x_assign_2_reg_503 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                conv_s1_x_x_assign_2_reg_503 <= c13_2_reg_2858;
            end if; 
        end if;
    end process;

    conv_s1_x_x_assign_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1244_fu_1091_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                conv_s1_x_x_assign_reg_481 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                conv_s1_x_x_assign_reg_481 <= c13_reg_2606;
            end if; 
        end if;
    end process;

    conv_s1_y_y_assign_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1255_fu_1821_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                conv_s1_y_y_assign_reg_470 <= c11_reg_2581;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                conv_s1_y_y_assign_reg_470 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    hw_input_s0_x_assign_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1229_fu_604_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                hw_input_s0_x_assign_reg_326 <= c5_reg_2321;
            elsif (((icmp_ln1227_fu_572_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                hw_input_s0_x_assign_reg_326 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    hw_input_s0_y_assign_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1228_fu_588_p2 = ap_const_lv1_1))) then 
                hw_input_s0_y_assign_reg_315 <= c3_reg_2308;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                hw_input_s0_y_assign_reg_315 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    hw_input_s0_z_assign_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1228_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                hw_input_s0_z_assign_reg_337 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                hw_input_s0_z_assign_reg_337 <= c7_1_reg_2334;
            end if; 
        end if;
    end process;

    hw_kernel_s0_w_assig_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1234_fu_718_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                hw_kernel_s0_w_assig_reg_370 <= c7_reg_2378;
            elsif (((icmp_ln1232_fu_686_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                hw_kernel_s0_w_assig_reg_370 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    hw_kernel_s0_x_assig_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1233_fu_702_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                hw_kernel_s0_x_assig_reg_359 <= c5_1_reg_2365;
            elsif (((icmp_ln1231_fu_670_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                hw_kernel_s0_x_assig_reg_359 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    hw_kernel_s0_y_assig_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1227_fu_572_p2 = ap_const_lv1_1))) then 
                hw_kernel_s0_y_assig_reg_348 <= ap_const_lv2_0;
            elsif (((icmp_ln1232_fu_686_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                hw_kernel_s0_y_assig_reg_348 <= c3_1_reg_2352;
            end if; 
        end if;
    end process;

    hw_kernel_s0_z_assig_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1233_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                hw_kernel_s0_z_assig_reg_381 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                hw_kernel_s0_z_assig_reg_381 <= c9_reg_2391;
            end if; 
        end if;
    end process;

    hw_output_s0_w_assig_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1240_fu_897_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                hw_output_s0_w_assig_reg_514 <= ap_const_lv3_0;
            elsif (((icmp_ln1262_fu_2162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                hw_output_s0_w_assig_reg_514 <= c3_6_reg_2976;
            end if; 
        end if;
    end process;

    hw_output_s0_x_xi_as_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1262_fu_2162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                hw_output_s0_x_xi_as_reg_536 <= ap_const_lv4_0;
            elsif (((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                hw_output_s0_x_xi_as_reg_536 <= c7_5_reg_3002;
            end if; 
        end if;
    end process;

    hw_output_s0_y_yi_as_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1263_fu_2178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                hw_output_s0_y_yi_as_reg_525 <= c5_6_reg_2989;
            elsif (((icmp_ln1261_fu_2146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                hw_output_s0_y_yi_as_reg_525 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                reg_547 <= hw_input_stencil_hw_s_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                reg_547 <= hw_input_stencil_hw_s_q0;
            end if; 
        end if;
    end process;

    reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                reg_552 <= hw_input_stencil_hw_s_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                reg_552 <= hw_input_stencil_hw_s_q1;
            end if; 
        end if;
    end process;

    reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                reg_557 <= conv_stencil_conv_st_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                reg_557 <= conv_stencil_conv_st_q0;
            end if; 
        end if;
    end process;

    reg_562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                reg_562 <= conv_stencil_conv_st_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                reg_562 <= conv_stencil_conv_st_q1;
            end if; 
        end if;
    end process;

    reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                reg_567 <= hw_input_stencil_hw_s_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                reg_567 <= hw_input_stencil_hw_s_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1245_fu_1134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                add_ln106_reg_2648 <= add_ln106_fu_1225_p2;
                sext_ln1250_reg_2655 <= sext_ln1250_fu_1234_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1250_fu_1477_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                add_ln133_reg_2773 <= add_ln133_fu_1568_p2;
                sext_ln1255_reg_2780 <= sext_ln1255_fu_1578_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                add_ln197_11_reg_2672 <= add_ln197_11_fu_1315_p2;
                add_ln197_16_reg_2682 <= add_ln197_16_fu_1373_p2;
                add_ln197_20_reg_2687 <= add_ln197_20_fu_1413_p2;
                add_ln197_6_reg_2662 <= add_ln197_6_fu_1257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                add_ln197_21_reg_2787 <= add_ln197_21_fu_1601_p2;
                add_ln197_26_reg_2797 <= add_ln197_26_fu_1659_p2;
                add_ln197_31_reg_2807 <= add_ln197_31_fu_1717_p2;
                add_ln197_35_reg_2812 <= add_ln197_35_fu_1757_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1263_fu_2178_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                add_ln197_2_reg_3007 <= add_ln197_2_fu_2225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln197_36_reg_2905 <= add_ln197_36_fu_1952_p2;
                add_ln197_41_reg_2915 <= add_ln197_41_fu_2010_p2;
                add_ln197_46_reg_2925 <= add_ln197_46_fu_2068_p2;
                add_ln197_50_reg_2930 <= add_ln197_50_fu_2086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                add_ln321_3_reg_2344 <= add_ln321_3_fu_661_p2;
                tmp_val_V_reg_2339 <= input_copy_stencil_values_V_val_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1245_fu_1134_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                add_ln405_1_reg_2643 <= add_ln405_1_fu_1220_p2;
                sub_ln79_1_reg_2611 <= sub_ln79_1_fu_1158_p2;
                trunc_ln197_2_reg_2618 <= trunc_ln197_2_fu_1164_p1;
                trunc_ln197_3_reg_2623 <= trunc_ln197_3_fu_1186_p1;
                trunc_ln197_4_reg_2628 <= trunc_ln197_4_fu_1190_p1;
                trunc_ln197_6_reg_2633 <= trunc_ln197_6_fu_1212_p1;
                trunc_ln197_7_reg_2638 <= trunc_ln197_7_fu_1216_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1250_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                add_ln432_reg_2768 <= add_ln432_fu_1563_p2;
                sub_ln106_reg_2736 <= sub_ln106_fu_1501_p2;
                trunc_ln197_11_reg_2743 <= trunc_ln197_11_fu_1507_p1;
                trunc_ln197_12_reg_2748 <= trunc_ln197_12_fu_1529_p1;
                trunc_ln197_13_reg_2753 <= trunc_ln197_13_fu_1533_p1;
                trunc_ln197_15_reg_2758 <= trunc_ln197_15_fu_1555_p1;
                trunc_ln197_16_reg_2763 <= trunc_ln197_16_fu_1559_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                c11_reg_2581 <= c11_fu_1097_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                c13_1_reg_2731 <= c13_1_fu_1483_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                c13_2_reg_2858 <= c13_2_fu_1827_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                c13_reg_2606 <= c13_fu_1140_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                c3_1_reg_2352 <= c3_1_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                c3_3_reg_2414 <= c3_3_fu_810_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                c3_5_reg_2454 <= c3_5_fu_903_p2;
                    zext_ln1240_reg_2445(1 downto 0) <= zext_ln1240_fu_893_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                c3_6_reg_2976 <= c3_6_fu_2152_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                c3_reg_2308 <= c3_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                c5_1_reg_2365 <= c5_1_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                c5_3_reg_2427 <= c5_3_fu_826_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                c5_5_reg_2479 <= c5_5_fu_931_p2;
                    zext_ln1241_reg_2469(1 downto 0) <= zext_ln1241_fu_917_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                c5_6_reg_2989 <= c5_6_fu_2168_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                c5_reg_2321 <= c5_fu_594_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                c7_1_reg_2334 <= c7_1_fu_610_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                c7_4_reg_2506 <= c7_4_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                c7_5_reg_3002 <= c7_5_fu_2184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                c7_reg_2378 <= c7_fu_708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                c9_1_reg_2532 <= c9_1_fu_1011_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                c9_reg_2391 <= c9_fu_724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                conv_stencil_conv_st_10_reg_2947 <= zext_ln197_36_fu_2137_p1(10 - 1 downto 0);
                conv_stencil_conv_st_8_reg_2935 <= zext_ln197_30_fu_2103_p1(10 - 1 downto 0);
                conv_stencil_conv_st_9_reg_2941 <= zext_ln197_33_fu_2120_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                conv_stencil_conv_st_2_reg_2692 <= zext_ln197_12_fu_1430_p1(10 - 1 downto 0);
                conv_stencil_conv_st_3_reg_2697 <= zext_ln197_15_fu_1447_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                conv_stencil_conv_st_4_reg_2707 <= zext_ln197_18_fu_1468_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                conv_stencil_conv_st_5_reg_2817 <= zext_ln197_21_fu_1774_p1(10 - 1 downto 0);
                conv_stencil_conv_st_6_reg_2823 <= zext_ln197_24_fu_1791_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                conv_stencil_conv_st_7_reg_2834 <= zext_ln197_27_fu_1812_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                hw_kernel_stencil_op_reg_2565 <= hw_kernel_stencil_hw_q0;
                    zext_ln197_7_reg_2552(2 downto 0) <= zext_ln197_7_fu_1083_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                p_660_reg_2713 <= grp_fu_2242_p3;
                p_673_reg_2718 <= grp_fu_2249_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                p_688_reg_2723 <= grp_fu_2256_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                p_703_reg_2840 <= grp_fu_2263_p3;
                p_718_reg_2845 <= grp_fu_2270_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                p_735_reg_2850 <= grp_fu_2277_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                p_752_reg_2958 <= grp_fu_2284_p3;
                p_767_reg_2963 <= grp_fu_2291_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                p_784_reg_2968 <= grp_fu_2298_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                p_800_reg_3017 <= p_800_fu_2234_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1244_fu_1091_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                sext_ln1245_reg_2596 <= sext_ln1245_fu_1126_p1;
                sub_ln79_reg_2586 <= sub_ln79_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1255_fu_1821_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                sub_ln133_reg_2863 <= sub_ln133_fu_1845_p2;
                trunc_ln197_20_reg_2870 <= trunc_ln197_20_fu_1851_p1;
                trunc_ln197_21_reg_2875 <= trunc_ln197_21_fu_1873_p1;
                trunc_ln197_22_reg_2880 <= trunc_ln197_22_fu_1877_p1;
                trunc_ln197_24_reg_2885 <= trunc_ln197_24_fu_1899_p1;
                trunc_ln197_25_reg_2890 <= trunc_ln197_25_fu_1903_p1;
                trunc_ln197_27_reg_2895 <= trunc_ln197_27_fu_1925_p1;
                trunc_ln197_28_reg_2900 <= trunc_ln197_28_fu_1929_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1237_fu_820_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    tmp_4_cast_reg_2432(10 downto 2) <= tmp_4_cast_fu_859_p3(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_val_V_1_reg_2396 <= kernel_copy_stencil_values_V_val_V_dout;
                trunc_ln321_1_reg_2406 <= trunc_ln321_1_fu_778_p1;
                trunc_ln321_reg_2401 <= trunc_ln321_fu_774_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1243_fu_1005_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                trunc_ln197_1_reg_2542 <= trunc_ln197_1_fu_1057_p1;
                trunc_ln197_reg_2537 <= trunc_ln197_fu_1053_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1227_fu_572_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln1228_reg_2313(4 downto 0) <= zext_ln1228_fu_584_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1228_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    zext_ln1229_reg_2326(4 downto 0) <= zext_ln1229_fu_600_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1231_fu_670_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    zext_ln1232_reg_2357(1 downto 0) <= zext_ln1232_fu_682_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1233_fu_702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    zext_ln1234_reg_2383(2 downto 0) <= zext_ln1234_fu_714_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1242_fu_955_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    zext_ln1243_reg_2524(3 downto 2) <= zext_ln1243_fu_1001_p1(3 downto 2);
                    zext_ln197_3_reg_2511(6 downto 0) <= zext_ln197_3_fu_989_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1261_fu_2146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    zext_ln1262_reg_2981(2 downto 0) <= zext_ln1262_fu_2158_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1262_fu_2162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    zext_ln197_reg_2994(3 downto 0) <= zext_ln197_fu_2174_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1236_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    zext_ln321_reg_2419(3 downto 0) <= zext_ln321_fu_816_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1241_fu_925_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    zext_ln396_reg_2489(1 downto 0) <= zext_ln396_fu_941_p1(1 downto 0);
                    zext_ln405_reg_2496(2 downto 0) <= zext_ln405_fu_951_p1(2 downto 0);
                    zext_ln586_reg_2484(1 downto 0) <= zext_ln586_fu_937_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1240_fu_897_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    zext_ln414_1_reg_2459(1 downto 0) <= zext_ln414_1_fu_909_p1(1 downto 0);
                    zext_ln414_reg_2464(1 downto 0) <= zext_ln414_fu_913_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1232_fu_686_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    zext_ln592_reg_2370(1 downto 0) <= zext_ln592_fu_698_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln1228_reg_2313(10 downto 5) <= "000000";
    zext_ln1229_reg_2326(6 downto 5) <= "00";
    zext_ln1232_reg_2357(7 downto 2) <= "000000";
    zext_ln592_reg_2370(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln1234_reg_2383(4 downto 3) <= "00";
    zext_ln321_reg_2419(8 downto 4) <= "00000";
    tmp_4_cast_reg_2432(1 downto 0) <= "00";
    zext_ln1240_reg_2445(5 downto 2) <= "0000";
    zext_ln414_1_reg_2459(7 downto 2) <= "000000";
    zext_ln414_reg_2464(5 downto 2) <= "0000";
    zext_ln1241_reg_2469(5 downto 2) <= "0000";
    zext_ln586_reg_2484(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    zext_ln396_reg_2489(5 downto 2) <= "0000";
    zext_ln405_reg_2496(5 downto 3) <= "000";
    zext_ln197_3_reg_2511(32 downto 7) <= "00000000000000000000000000";
    zext_ln1243_reg_2524(1 downto 0) <= "00";
    zext_ln1243_reg_2524(4) <= '0';
    zext_ln197_7_reg_2552(10 downto 3) <= "00000000";
    zext_ln1262_reg_2981(10 downto 3) <= "00000000";
    zext_ln197_reg_2994(8 downto 4) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, input_copy_stencil_values_V_val_V_empty_n, kernel_copy_stencil_values_V_val_V_empty_n, hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state4, icmp_ln1229_fu_604_p2, ap_CS_fsm_state9, icmp_ln1234_fu_718_p2, ap_CS_fsm_state47, ap_CS_fsm_state2, icmp_ln1227_fu_572_p2, ap_CS_fsm_state3, icmp_ln1228_fu_588_p2, ap_CS_fsm_state6, icmp_ln1231_fu_670_p2, ap_CS_fsm_state7, icmp_ln1232_fu_686_p2, ap_CS_fsm_state8, icmp_ln1233_fu_702_p2, ap_CS_fsm_state11, icmp_ln1236_fu_804_p2, ap_CS_fsm_state12, icmp_ln1237_fu_820_p2, ap_CS_fsm_state13, ap_CS_fsm_state14, icmp_ln1240_fu_897_p2, ap_CS_fsm_state15, icmp_ln1241_fu_925_p2, ap_CS_fsm_state16, icmp_ln1242_fu_955_p2, ap_CS_fsm_state17, icmp_ln1243_fu_1005_p2, ap_CS_fsm_state20, icmp_ln1244_fu_1091_p2, ap_CS_fsm_state21, icmp_ln1245_fu_1134_p2, ap_CS_fsm_state28, icmp_ln1250_fu_1477_p2, ap_CS_fsm_state35, icmp_ln1255_fu_1821_p2, ap_CS_fsm_state42, icmp_ln1261_fu_2146_p2, ap_CS_fsm_state43, icmp_ln1262_fu_2162_p2, ap_CS_fsm_state44, icmp_ln1263_fu_2178_p2, icmp_ln1238_fu_867_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1227_fu_572_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1228_fu_588_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1229_fu_604_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln1231_fu_670_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln1232_fu_686_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln1233_fu_702_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1234_fu_718_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln1236_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln1237_fu_820_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln1238_fu_867_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln1240_fu_897_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln1241_fu_925_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln1242_fu_955_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln1243_fu_1005_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln1244_fu_1091_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln1245_fu_1134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state28 => 
                if (((icmp_ln1250_fu_1477_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln1255_fu_1821_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln1261_fu_2146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                if (((icmp_ln1262_fu_2162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                if (((icmp_ln1263_fu_2178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln106_fu_1225_p2 <= std_logic_vector(signed(sub_ln79_reg_2586) + signed(ap_const_lv6_1));
    add_ln115_fu_1629_p2 <= std_logic_vector(signed(sub_ln106_reg_2736) + signed(ap_const_lv6_1));
    add_ln124_fu_1687_p2 <= std_logic_vector(signed(sub_ln106_reg_2736) + signed(ap_const_lv6_2));
    add_ln133_fu_1568_p2 <= std_logic_vector(signed(sub_ln79_reg_2586) + signed(ap_const_lv6_2));
    add_ln142_fu_1980_p2 <= std_logic_vector(signed(sub_ln133_reg_2863) + signed(ap_const_lv6_1));
    add_ln151_fu_2038_p2 <= std_logic_vector(signed(sub_ln133_reg_2863) + signed(ap_const_lv6_2));
    add_ln197_10_fu_1275_p2 <= std_logic_vector(signed(sext_ln1245_reg_2596) + signed(add_ln197_9_fu_1270_p2));
    add_ln197_11_fu_1315_p2 <= std_logic_vector(signed(sext_ln197_3_fu_1312_p1) + signed(sub_ln197_4_fu_1306_p2));
    add_ln197_12_fu_1442_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_21_cast_fu_1435_p3));
    add_ln197_13_fu_1207_p2 <= std_logic_vector(unsigned(zext_ln197_16_fu_1203_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_14_fu_1328_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1321_p3) + unsigned(trunc_ln197_6_reg_2633));
    add_ln197_15_fu_1333_p2 <= std_logic_vector(signed(sext_ln1245_reg_2596) + signed(add_ln197_14_fu_1328_p2));
    add_ln197_16_fu_1373_p2 <= std_logic_vector(signed(sext_ln197_5_fu_1370_p1) + signed(sub_ln197_5_fu_1364_p2));
    add_ln197_17_fu_1463_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_25_cast_fu_1456_p3));
    add_ln197_18_fu_1386_p2 <= std_logic_vector(unsigned(zext_ln197_19_fu_1382_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_19_fu_1407_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_1399_p3) + unsigned(trunc_ln197_9_fu_1391_p1));
    add_ln197_1_fu_2212_p2 <= std_logic_vector(unsigned(zext_ln197_reg_2994) + unsigned(sub_ln197_fu_2206_p2));
    add_ln197_20_fu_1413_p2 <= std_logic_vector(signed(sext_ln1245_reg_2596) + signed(add_ln197_19_fu_1407_p2));
    add_ln197_21_fu_1601_p2 <= std_logic_vector(signed(sext_ln197_7_fu_1598_p1) + signed(sub_ln197_6_fu_1592_p2));
    add_ln197_22_fu_1769_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_29_cast_fu_1762_p3));
    add_ln197_23_fu_1524_p2 <= std_logic_vector(unsigned(zext_ln197_22_fu_1520_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_24_fu_1614_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1607_p3) + unsigned(trunc_ln197_12_reg_2748));
    add_ln197_25_fu_1619_p2 <= std_logic_vector(signed(sext_ln1250_reg_2655) + signed(add_ln197_24_fu_1614_p2));
    add_ln197_26_fu_1659_p2 <= std_logic_vector(signed(sext_ln197_9_fu_1656_p1) + signed(sub_ln197_7_fu_1650_p2));
    add_ln197_27_fu_1786_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_33_cast_fu_1779_p3));
    add_ln197_28_fu_1550_p2 <= std_logic_vector(unsigned(zext_ln197_25_fu_1546_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_29_fu_1672_p2 <= std_logic_vector(unsigned(p_shl9_cast_fu_1665_p3) + unsigned(trunc_ln197_15_reg_2758));
    add_ln197_2_fu_2225_p2 <= std_logic_vector(unsigned(zext_ln1262_reg_2981) + unsigned(tmp_12_cast_fu_2217_p3));
    add_ln197_30_fu_1677_p2 <= std_logic_vector(signed(sext_ln1250_reg_2655) + signed(add_ln197_29_fu_1672_p2));
    add_ln197_31_fu_1717_p2 <= std_logic_vector(signed(sext_ln197_11_fu_1714_p1) + signed(sub_ln197_8_fu_1708_p2));
    add_ln197_32_fu_1807_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_37_cast_fu_1800_p3));
    add_ln197_33_fu_1730_p2 <= std_logic_vector(unsigned(zext_ln197_28_fu_1726_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_34_fu_1751_p2 <= std_logic_vector(unsigned(p_shl10_cast_fu_1743_p3) + unsigned(trunc_ln197_18_fu_1735_p1));
    add_ln197_35_fu_1757_p2 <= std_logic_vector(signed(sext_ln1250_reg_2655) + signed(add_ln197_34_fu_1751_p2));
    add_ln197_36_fu_1952_p2 <= std_logic_vector(signed(sext_ln197_13_fu_1949_p1) + signed(sub_ln197_9_fu_1943_p2));
    add_ln197_37_fu_2098_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_41_cast_fu_2091_p3));
    add_ln197_38_fu_1868_p2 <= std_logic_vector(unsigned(zext_ln197_31_fu_1864_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_39_fu_1965_p2 <= std_logic_vector(unsigned(p_shl11_cast_fu_1958_p3) + unsigned(trunc_ln197_21_reg_2875));
    add_ln197_3_fu_1021_p2 <= std_logic_vector(unsigned(zext_ln197_8_fu_1017_p1) + unsigned(zext_ln1243_reg_2524));
    add_ln197_40_fu_1970_p2 <= std_logic_vector(signed(sext_ln1255_reg_2780) + signed(add_ln197_39_fu_1965_p2));
    add_ln197_41_fu_2010_p2 <= std_logic_vector(signed(sext_ln197_15_fu_2007_p1) + signed(sub_ln197_10_fu_2001_p2));
    add_ln197_42_fu_2115_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_45_cast_fu_2108_p3));
    add_ln197_43_fu_1894_p2 <= std_logic_vector(unsigned(zext_ln197_34_fu_1890_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_44_fu_2023_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_2016_p3) + unsigned(trunc_ln197_24_reg_2885));
    add_ln197_45_fu_2028_p2 <= std_logic_vector(signed(sext_ln1255_reg_2780) + signed(add_ln197_44_fu_2023_p2));
    add_ln197_46_fu_2068_p2 <= std_logic_vector(signed(sext_ln197_17_fu_2065_p1) + signed(sub_ln197_11_fu_2059_p2));
    add_ln197_47_fu_2132_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_49_cast_fu_2125_p3));
    add_ln197_48_fu_1920_p2 <= std_logic_vector(unsigned(zext_ln197_37_fu_1916_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_49_fu_2081_p2 <= std_logic_vector(unsigned(p_shl13_cast_fu_2074_p3) + unsigned(trunc_ln197_27_reg_2895));
    add_ln197_4_fu_1048_p2 <= std_logic_vector(unsigned(zext_ln586_reg_2484) + unsigned(sub_ln197_1_fu_1042_p2));
    add_ln197_50_fu_2086_p2 <= std_logic_vector(signed(sext_ln1255_reg_2780) + signed(add_ln197_49_fu_2081_p2));
    add_ln197_5_fu_1073_p2 <= std_logic_vector(unsigned(zext_ln414_1_reg_2459) + unsigned(sub_ln197_2_fu_1068_p2));
    add_ln197_6_fu_1257_p2 <= std_logic_vector(signed(sext_ln197_1_fu_1254_p1) + signed(sub_ln197_3_fu_1248_p2));
    add_ln197_7_fu_1425_p2 <= std_logic_vector(unsigned(zext_ln197_7_reg_2552) + unsigned(tmp_17_cast_fu_1418_p3));
    add_ln197_8_fu_1181_p2 <= std_logic_vector(unsigned(zext_ln197_13_fu_1177_p1) + unsigned(zext_ln197_3_reg_2511));
    add_ln197_9_fu_1270_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_1263_p3) + unsigned(trunc_ln197_3_reg_2623));
    add_ln197_fu_983_p2 <= std_logic_vector(unsigned(zext_ln197_1_fu_967_p1) + unsigned(zext_ln197_2_fu_979_p1));
    add_ln321_1_fu_638_p2 <= std_logic_vector(unsigned(add_ln321_fu_632_p2) + unsigned(zext_ln1229_reg_2326));
    add_ln321_2_fu_655_p2 <= std_logic_vector(unsigned(zext_ln321_3_fu_643_p1) + unsigned(p_shl_cast_fu_647_p3));
    add_ln321_3_fu_661_p2 <= std_logic_vector(unsigned(add_ln321_2_fu_655_p2) + unsigned(zext_ln1228_reg_2313));
    add_ln321_4_fu_854_p2 <= std_logic_vector(unsigned(sub_ln321_fu_848_p2) + unsigned(zext_ln321_reg_2419));
    add_ln321_5_fu_883_p2 <= std_logic_vector(unsigned(tmp_4_cast_reg_2432) + unsigned(zext_ln321_7_fu_879_p1));
    add_ln321_6_fu_742_p2 <= std_logic_vector(unsigned(zext_ln321_9_fu_738_p1) + unsigned(zext_ln1234_reg_2383));
    add_ln321_7_fu_769_p2 <= std_logic_vector(unsigned(sub_ln321_1_fu_763_p2) + unsigned(zext_ln592_reg_2370));
    add_ln321_8_fu_794_p2 <= std_logic_vector(unsigned(sub_ln321_2_fu_789_p2) + unsigned(zext_ln1232_reg_2357));
    add_ln321_fu_632_p2 <= std_logic_vector(unsigned(zext_ln321_1_fu_616_p1) + unsigned(zext_ln321_2_fu_628_p1));
    add_ln387_1_fu_1168_p2 <= std_logic_vector(signed(sub_ln79_1_fu_1158_p2) + signed(zext_ln1241_reg_2469));
    add_ln387_fu_1121_p2 <= std_logic_vector(unsigned(zext_ln1240_reg_2445) + unsigned(sub_ln79_fu_1115_p2));
    add_ln396_fu_1194_p2 <= std_logic_vector(unsigned(zext_ln396_reg_2489) + unsigned(sub_ln79_1_fu_1158_p2));
    add_ln405_1_fu_1220_p2 <= std_logic_vector(unsigned(zext_ln405_reg_2496) + unsigned(sub_ln79_1_fu_1158_p2));
    add_ln405_fu_945_p2 <= std_logic_vector(unsigned(zext_ln1241_1_fu_921_p1) + unsigned(ap_const_lv3_2));
    add_ln414_1_fu_1511_p2 <= std_logic_vector(signed(sub_ln106_fu_1501_p2) + signed(zext_ln1241_reg_2469));
    add_ln414_fu_1230_p2 <= std_logic_vector(unsigned(zext_ln414_reg_2464) + unsigned(sub_ln79_reg_2586));
    add_ln423_fu_1537_p2 <= std_logic_vector(unsigned(zext_ln396_reg_2489) + unsigned(sub_ln106_fu_1501_p2));
    add_ln432_fu_1563_p2 <= std_logic_vector(unsigned(zext_ln405_reg_2496) + unsigned(sub_ln106_fu_1501_p2));
    add_ln441_1_fu_1855_p2 <= std_logic_vector(signed(sub_ln133_fu_1845_p2) + signed(zext_ln1241_reg_2469));
    add_ln441_fu_1573_p2 <= std_logic_vector(signed(add_ln133_fu_1568_p2) + signed(zext_ln1240_reg_2445));
    add_ln450_fu_1881_p2 <= std_logic_vector(unsigned(zext_ln396_reg_2489) + unsigned(sub_ln133_fu_1845_p2));
    add_ln459_fu_1907_p2 <= std_logic_vector(unsigned(zext_ln405_reg_2496) + unsigned(sub_ln133_fu_1845_p2));
    add_ln88_fu_1285_p2 <= std_logic_vector(signed(sub_ln79_1_reg_2611) + signed(ap_const_lv6_1));
    add_ln97_fu_1343_p2 <= std_logic_vector(signed(sub_ln79_1_reg_2611) + signed(ap_const_lv6_2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state4_assign_proc : process(input_copy_stencil_values_V_val_V_empty_n, icmp_ln1229_fu_604_p2)
    begin
                ap_block_state4 <= ((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(kernel_copy_stencil_values_V_val_V_empty_n, icmp_ln1234_fu_718_p2)
    begin
                ap_block_state9 <= ((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state42, icmp_ln1261_fu_2146_p2)
    begin
        if (((icmp_ln1261_fu_2146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state42, icmp_ln1261_fu_2146_p2)
    begin
        if (((icmp_ln1261_fu_2146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c11_fu_1097_p2 <= std_logic_vector(unsigned(conv_s1_y_y_assign_reg_470) + unsigned(ap_const_lv3_1));
    c13_1_fu_1483_p2 <= std_logic_vector(unsigned(conv_s1_x_x_assign_1_reg_492) + unsigned(ap_const_lv3_1));
    c13_2_fu_1827_p2 <= std_logic_vector(unsigned(conv_s1_x_x_assign_2_reg_503) + unsigned(ap_const_lv3_1));
    c13_fu_1140_p2 <= std_logic_vector(unsigned(conv_s1_x_x_assign_reg_481) + unsigned(ap_const_lv3_1));
    c3_1_fu_676_p2 <= std_logic_vector(unsigned(hw_kernel_s0_y_assig_reg_348) + unsigned(ap_const_lv2_1));
    c3_3_fu_810_p2 <= std_logic_vector(unsigned(conv_s0_y_assign_reg_392) + unsigned(ap_const_lv4_1));
    c3_5_fu_903_p2 <= std_logic_vector(unsigned(conv_s1_r_y_assign_reg_425) + unsigned(ap_const_lv2_1));
    c3_6_fu_2152_p2 <= std_logic_vector(unsigned(hw_output_s0_w_assig_reg_514) + unsigned(ap_const_lv3_1));
    c3_fu_578_p2 <= std_logic_vector(unsigned(hw_input_s0_y_assign_reg_315) + unsigned(ap_const_lv5_1));
    c5_1_fu_692_p2 <= std_logic_vector(unsigned(hw_kernel_s0_x_assig_reg_359) + unsigned(ap_const_lv2_1));
    c5_3_fu_826_p2 <= std_logic_vector(unsigned(conv_s0_x_assign_reg_403) + unsigned(ap_const_lv4_1));
    c5_5_fu_931_p2 <= std_logic_vector(unsigned(conv_s1_r_x_assign_reg_436) + unsigned(ap_const_lv2_1));
    c5_6_fu_2168_p2 <= std_logic_vector(unsigned(hw_output_s0_y_yi_as_reg_525) + unsigned(ap_const_lv4_1));
    c5_fu_594_p2 <= std_logic_vector(unsigned(hw_input_s0_x_assign_reg_326) + unsigned(ap_const_lv5_1));
    c7_1_fu_610_p2 <= std_logic_vector(unsigned(hw_input_s0_z_assign_reg_337) + unsigned(ap_const_lv2_1));
    c7_2_fu_873_p2 <= std_logic_vector(unsigned(conv_s0_w_assign_reg_414) + unsigned(ap_const_lv3_1));
    c7_4_fu_961_p2 <= std_logic_vector(unsigned(conv_s1_r_z_assign_reg_447) + unsigned(ap_const_lv2_1));
    c7_5_fu_2184_p2 <= std_logic_vector(unsigned(hw_output_s0_x_xi_as_reg_536) + unsigned(ap_const_lv4_1));
    c7_fu_708_p2 <= std_logic_vector(unsigned(hw_kernel_s0_w_assig_reg_370) + unsigned(ap_const_lv3_1));
    c9_1_fu_1011_p2 <= std_logic_vector(unsigned(conv_s1_w_assign_reg_458) + unsigned(ap_const_lv3_1));
    c9_fu_724_p2 <= std_logic_vector(unsigned(hw_kernel_s0_z_assig_reg_381) + unsigned(ap_const_lv2_1));

    conv_stencil_conv_st_address0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state37, ap_CS_fsm_state13, conv_stencil_conv_st_2_reg_2692, conv_stencil_conv_st_4_reg_2707, ap_CS_fsm_state26, conv_stencil_conv_st_5_reg_2817, conv_stencil_conv_st_7_reg_2834, ap_CS_fsm_state33, conv_stencil_conv_st_8_reg_2935, conv_stencil_conv_st_10_reg_2947, ap_CS_fsm_state40, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state41, zext_ln321_8_fu_888_p1, zext_ln197_12_fu_1430_p1, zext_ln197_24_fu_1791_p1, zext_ln197_33_fu_2120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            conv_stencil_conv_st_address0 <= conv_stencil_conv_st_10_reg_2947;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv_stencil_conv_st_address0 <= conv_stencil_conv_st_8_reg_2935;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv_stencil_conv_st_address0 <= zext_ln197_33_fu_2120_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            conv_stencil_conv_st_address0 <= conv_stencil_conv_st_7_reg_2834;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv_stencil_conv_st_address0 <= conv_stencil_conv_st_5_reg_2817;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv_stencil_conv_st_address0 <= zext_ln197_24_fu_1791_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv_stencil_conv_st_address0 <= conv_stencil_conv_st_4_reg_2707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_stencil_conv_st_address0 <= conv_stencil_conv_st_2_reg_2692;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_stencil_conv_st_address0 <= zext_ln197_12_fu_1430_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_stencil_conv_st_address0 <= zext_ln321_8_fu_888_p1(10 - 1 downto 0);
        else 
            conv_stencil_conv_st_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_stencil_conv_st_address1_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state37, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state38, conv_stencil_conv_st_3_reg_2697, ap_CS_fsm_state26, conv_stencil_conv_st_6_reg_2823, ap_CS_fsm_state33, conv_stencil_conv_st_9_reg_2941, conv_stencil_conv_st_10_reg_2947, ap_CS_fsm_state40, ap_CS_fsm_state45, zext_ln197_15_fu_1447_p1, zext_ln197_18_fu_1468_p1, zext_ln197_21_fu_1774_p1, zext_ln197_27_fu_1812_p1, zext_ln197_30_fu_2103_p1, zext_ln197_6_fu_2230_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_stencil_conv_st_address1 <= zext_ln197_6_fu_2230_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv_stencil_conv_st_address1 <= conv_stencil_conv_st_9_reg_2941;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv_stencil_conv_st_address1 <= conv_stencil_conv_st_10_reg_2947;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv_stencil_conv_st_address1 <= zext_ln197_30_fu_2103_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv_stencil_conv_st_address1 <= conv_stencil_conv_st_6_reg_2823;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv_stencil_conv_st_address1 <= zext_ln197_27_fu_1812_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv_stencil_conv_st_address1 <= zext_ln197_21_fu_1774_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_stencil_conv_st_address1 <= conv_stencil_conv_st_3_reg_2697;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv_stencil_conv_st_address1 <= zext_ln197_18_fu_1468_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_stencil_conv_st_address1 <= zext_ln197_15_fu_1447_p1(10 - 1 downto 0);
        else 
            conv_stencil_conv_st_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_stencil_conv_st_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state37, ap_CS_fsm_state13, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state40, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            conv_stencil_conv_st_ce0 <= ap_const_logic_1;
        else 
            conv_stencil_conv_st_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_stencil_conv_st_ce1_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state37, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state38, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state40, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            conv_stencil_conv_st_ce1 <= ap_const_logic_1;
        else 
            conv_stencil_conv_st_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_stencil_conv_st_d0_assign_proc : process(ap_CS_fsm_state13, p_660_reg_2713, p_688_reg_2723, ap_CS_fsm_state26, p_703_reg_2840, p_735_reg_2850, ap_CS_fsm_state33, p_752_reg_2958, p_784_reg_2968, ap_CS_fsm_state40, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            conv_stencil_conv_st_d0 <= p_784_reg_2968;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv_stencil_conv_st_d0 <= p_752_reg_2958;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            conv_stencil_conv_st_d0 <= p_735_reg_2850;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv_stencil_conv_st_d0 <= p_703_reg_2840;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv_stencil_conv_st_d0 <= p_688_reg_2723;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_stencil_conv_st_d0 <= p_660_reg_2713;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_stencil_conv_st_d0 <= ap_const_lv16_0;
        else 
            conv_stencil_conv_st_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_stencil_conv_st_d1_assign_proc : process(p_673_reg_2718, ap_CS_fsm_state26, p_718_reg_2845, ap_CS_fsm_state33, p_767_reg_2963, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv_stencil_conv_st_d1 <= p_767_reg_2963;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv_stencil_conv_st_d1 <= p_718_reg_2845;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_stencil_conv_st_d1 <= p_673_reg_2718;
        else 
            conv_stencil_conv_st_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_stencil_conv_st_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state40, icmp_ln1238_fu_867_p2, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((icmp_ln1238_fu_867_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            conv_stencil_conv_st_we0 <= ap_const_logic_1;
        else 
            conv_stencil_conv_st_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_stencil_conv_st_we1_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            conv_stencil_conv_st_we1 <= ap_const_logic_1;
        else 
            conv_stencil_conv_st_we1 <= ap_const_logic_0;
        end if; 
    end process;


    hw_input_stencil_hw_s_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state5, zext_ln321_4_fu_666_p1, zext_ln197_14_fu_1280_p1, zext_ln197_23_fu_1624_p1, zext_ln197_29_fu_1796_p1, zext_ln197_35_fu_2033_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            hw_input_stencil_hw_s_address0 <= zext_ln197_35_fu_2033_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            hw_input_stencil_hw_s_address0 <= zext_ln197_29_fu_1796_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            hw_input_stencil_hw_s_address0 <= zext_ln197_23_fu_1624_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            hw_input_stencil_hw_s_address0 <= zext_ln197_14_fu_1280_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            hw_input_stencil_hw_s_address0 <= zext_ln321_4_fu_666_p1(10 - 1 downto 0);
        else 
            hw_input_stencil_hw_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hw_input_stencil_hw_s_address1_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state37, ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_state36, zext_ln197_17_fu_1338_p1, zext_ln197_20_fu_1452_p1, zext_ln197_26_fu_1682_p1, zext_ln197_32_fu_1975_p1, zext_ln197_38_fu_2142_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            hw_input_stencil_hw_s_address1 <= zext_ln197_38_fu_2142_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            hw_input_stencil_hw_s_address1 <= zext_ln197_32_fu_1975_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            hw_input_stencil_hw_s_address1 <= zext_ln197_26_fu_1682_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            hw_input_stencil_hw_s_address1 <= zext_ln197_20_fu_1452_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            hw_input_stencil_hw_s_address1 <= zext_ln197_17_fu_1338_p1(10 - 1 downto 0);
        else 
            hw_input_stencil_hw_s_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    hw_input_stencil_hw_s_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            hw_input_stencil_hw_s_ce0 <= ap_const_logic_1;
        else 
            hw_input_stencil_hw_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hw_input_stencil_hw_s_ce1_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state37, ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            hw_input_stencil_hw_s_ce1 <= ap_const_logic_1;
        else 
            hw_input_stencil_hw_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hw_input_stencil_hw_s_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            hw_input_stencil_hw_s_we0 <= ap_const_logic_1;
        else 
            hw_input_stencil_hw_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hw_kernel_stencil_hw_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state10, zext_ln321_12_fu_799_p1, zext_ln197_11_fu_1078_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            hw_kernel_stencil_hw_address0 <= zext_ln197_11_fu_1078_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            hw_kernel_stencil_hw_address0 <= zext_ln321_12_fu_799_p1(7 - 1 downto 0);
        else 
            hw_kernel_stencil_hw_address0 <= "XXXXXXX";
        end if; 
    end process;


    hw_kernel_stencil_hw_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            hw_kernel_stencil_hw_ce0 <= ap_const_logic_1;
        else 
            hw_kernel_stencil_hw_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hw_kernel_stencil_hw_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            hw_kernel_stencil_hw_we0 <= ap_const_logic_1;
        else 
            hw_kernel_stencil_hw_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hw_output_stencil_values_V_val_V_blk_n_assign_proc : process(hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            hw_output_stencil_values_V_val_V_blk_n <= hw_output_stencil_values_V_val_V_full_n;
        else 
            hw_output_stencil_values_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hw_output_stencil_values_V_val_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_800_reg_3017),16));

    hw_output_stencil_values_V_val_V_write_assign_proc : process(hw_output_stencil_values_V_val_V_full_n, ap_CS_fsm_state47)
    begin
        if (((hw_output_stencil_values_V_val_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            hw_output_stencil_values_V_val_V_write <= ap_const_logic_1;
        else 
            hw_output_stencil_values_V_val_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1227_fu_572_p2 <= "1" when (hw_input_s0_y_assign_reg_315 = ap_const_lv5_10) else "0";
    icmp_ln1228_fu_588_p2 <= "1" when (hw_input_s0_x_assign_reg_326 = ap_const_lv5_10) else "0";
    icmp_ln1229_fu_604_p2 <= "1" when (hw_input_s0_z_assign_reg_337 = ap_const_lv2_2) else "0";
    icmp_ln1231_fu_670_p2 <= "1" when (hw_kernel_s0_y_assig_reg_348 = ap_const_lv2_3) else "0";
    icmp_ln1232_fu_686_p2 <= "1" when (hw_kernel_s0_x_assig_reg_359 = ap_const_lv2_3) else "0";
    icmp_ln1233_fu_702_p2 <= "1" when (hw_kernel_s0_w_assig_reg_370 = ap_const_lv3_4) else "0";
    icmp_ln1234_fu_718_p2 <= "1" when (hw_kernel_s0_z_assig_reg_381 = ap_const_lv2_2) else "0";
    icmp_ln1236_fu_804_p2 <= "1" when (conv_s0_y_assign_reg_392 = ap_const_lv4_E) else "0";
    icmp_ln1237_fu_820_p2 <= "1" when (conv_s0_x_assign_reg_403 = ap_const_lv4_E) else "0";
    icmp_ln1238_fu_867_p2 <= "1" when (conv_s0_w_assign_reg_414 = ap_const_lv3_4) else "0";
    icmp_ln1240_fu_897_p2 <= "1" when (conv_s1_r_y_assign_reg_425 = ap_const_lv2_3) else "0";
    icmp_ln1241_fu_925_p2 <= "1" when (conv_s1_r_x_assign_reg_436 = ap_const_lv2_3) else "0";
    icmp_ln1242_fu_955_p2 <= "1" when (conv_s1_r_z_assign_reg_447 = ap_const_lv2_2) else "0";
    icmp_ln1243_fu_1005_p2 <= "1" when (conv_s1_w_assign_reg_458 = ap_const_lv3_4) else "0";
    icmp_ln1244_fu_1091_p2 <= "1" when (conv_s1_y_y_assign_reg_470 = ap_const_lv3_5) else "0";
    icmp_ln1245_fu_1134_p2 <= "1" when (conv_s1_x_x_assign_reg_481 = ap_const_lv3_5) else "0";
    icmp_ln1250_fu_1477_p2 <= "1" when (conv_s1_x_x_assign_1_reg_492 = ap_const_lv3_5) else "0";
    icmp_ln1255_fu_1821_p2 <= "1" when (conv_s1_x_x_assign_2_reg_503 = ap_const_lv3_5) else "0";
    icmp_ln1261_fu_2146_p2 <= "1" when (hw_output_s0_w_assig_reg_514 = ap_const_lv3_4) else "0";
    icmp_ln1262_fu_2162_p2 <= "1" when (hw_output_s0_y_yi_as_reg_525 = ap_const_lv4_E) else "0";
    icmp_ln1263_fu_2178_p2 <= "1" when (hw_output_s0_x_xi_as_reg_536 = ap_const_lv4_E) else "0";

    input_copy_stencil_values_V_val_V_blk_n_assign_proc : process(input_copy_stencil_values_V_val_V_empty_n, ap_CS_fsm_state4, icmp_ln1229_fu_604_p2)
    begin
        if (((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_copy_stencil_values_V_val_V_blk_n <= input_copy_stencil_values_V_val_V_empty_n;
        else 
            input_copy_stencil_values_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_copy_stencil_values_V_val_V_read_assign_proc : process(input_copy_stencil_values_V_val_V_empty_n, ap_CS_fsm_state4, icmp_ln1229_fu_604_p2)
    begin
        if ((not(((icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (input_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1229_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_copy_stencil_values_V_val_V_read <= ap_const_logic_1;
        else 
            input_copy_stencil_values_V_val_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_copy_stencil_values_V_val_V_blk_n_assign_proc : process(kernel_copy_stencil_values_V_val_V_empty_n, ap_CS_fsm_state9, icmp_ln1234_fu_718_p2)
    begin
        if (((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            kernel_copy_stencil_values_V_val_V_blk_n <= kernel_copy_stencil_values_V_val_V_empty_n;
        else 
            kernel_copy_stencil_values_V_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_copy_stencil_values_V_val_V_read_assign_proc : process(kernel_copy_stencil_values_V_val_V_empty_n, ap_CS_fsm_state9, icmp_ln1234_fu_718_p2)
    begin
        if ((not(((icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (kernel_copy_stencil_values_V_val_V_empty_n = ap_const_logic_0))) and (icmp_ln1234_fu_718_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            kernel_copy_stencil_values_V_val_V_read <= ap_const_logic_1;
        else 
            kernel_copy_stencil_values_V_val_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_800_fu_2234_p1 <= conv_stencil_conv_st_q1(8 - 1 downto 0);
    p_shl10_cast_fu_1743_p3 <= (trunc_ln197_19_fu_1739_p1 & ap_const_lv4_0);
    p_shl11_cast_fu_1958_p3 <= (trunc_ln197_22_reg_2880 & ap_const_lv4_0);
    p_shl12_cast_fu_2016_p3 <= (trunc_ln197_25_reg_2890 & ap_const_lv4_0);
    p_shl13_cast_fu_2074_p3 <= (trunc_ln197_28_reg_2900 & ap_const_lv4_0);
    p_shl1_cast_fu_1263_p3 <= (trunc_ln197_4_reg_2628 & ap_const_lv4_0);
    p_shl2_cast_fu_782_p3 <= (trunc_ln321_1_reg_2406 & ap_const_lv2_0);
    p_shl4_cast_fu_1321_p3 <= (trunc_ln197_7_reg_2638 & ap_const_lv4_0);
    p_shl5_cast_fu_1607_p3 <= (trunc_ln197_13_reg_2753 & ap_const_lv4_0);
    p_shl6_cast_fu_1061_p3 <= (trunc_ln197_1_reg_2542 & ap_const_lv2_0);
    p_shl8_cast_fu_1399_p3 <= (trunc_ln197_10_fu_1395_p1 & ap_const_lv4_0);
    p_shl9_cast_fu_1665_p3 <= (trunc_ln197_16_reg_2763 & ap_const_lv4_0);
    p_shl_cast_fu_647_p3 <= (add_ln321_1_fu_638_p2 & ap_const_lv4_0);
        sext_ln1245_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln387_fu_1121_p2),11));

        sext_ln1250_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln414_fu_1230_p2),11));

        sext_ln1255_fu_1578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln441_fu_1573_p2),11));

        sext_ln197_10_fu_1692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln124_fu_1687_p2),9));

        sext_ln197_11_fu_1714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln106_reg_2648),9));

        sext_ln197_12_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln133_reg_2863),9));

        sext_ln197_13_fu_1949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln133_reg_2773),9));

        sext_ln197_14_fu_1985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln142_fu_1980_p2),9));

        sext_ln197_15_fu_2007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln133_reg_2773),9));

        sext_ln197_16_fu_2043_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln151_fu_2038_p2),9));

        sext_ln197_17_fu_2065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln133_reg_2773),9));

        sext_ln197_1_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln79_reg_2586),9));

        sext_ln197_2_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln88_fu_1285_p2),9));

        sext_ln197_3_fu_1312_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln79_reg_2586),9));

        sext_ln197_4_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln97_fu_1343_p2),9));

        sext_ln197_5_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln79_reg_2586),9));

        sext_ln197_6_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln106_reg_2736),9));

        sext_ln197_7_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln106_reg_2648),9));

        sext_ln197_8_fu_1634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln115_fu_1629_p2),9));

        sext_ln197_9_fu_1656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln106_reg_2648),9));

        sext_ln197_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln79_1_reg_2611),9));

        sext_ln387_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln387_1_fu_1168_p2),32));

        sext_ln396_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln396_fu_1194_p2),32));

        sext_ln405_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln405_1_reg_2643),32));

        sext_ln414_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln414_1_fu_1511_p2),32));

        sext_ln423_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln423_fu_1537_p2),32));

        sext_ln432_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln432_reg_2768),32));

        sext_ln441_fu_1860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln441_1_fu_1855_p2),32));

        sext_ln450_fu_1886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln450_fu_1881_p2),32));

        sext_ln459_fu_1912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln459_fu_1907_p2),32));

    shl_ln1_fu_1489_p3 <= (conv_s1_x_x_assign_1_reg_492 & ap_const_lv2_0);
    shl_ln2_fu_1833_p3 <= (conv_s1_x_x_assign_2_reg_503 & ap_const_lv2_0);
    shl_ln79_1_fu_1103_p3 <= (conv_s1_y_y_assign_reg_470 & ap_const_lv2_0);
    shl_ln_fu_1146_p3 <= (conv_s1_x_x_assign_reg_481 & ap_const_lv2_0);
    sub_ln106_fu_1501_p2 <= std_logic_vector(unsigned(zext_ln106_fu_1497_p1) - unsigned(zext_ln1250_fu_1473_p1));
    sub_ln133_fu_1845_p2 <= std_logic_vector(unsigned(zext_ln133_fu_1841_p1) - unsigned(zext_ln1255_fu_1817_p1));
    sub_ln197_10_fu_2001_p2 <= std_logic_vector(unsigned(zext_ln197_10_cast_fu_1993_p3) - unsigned(sext_ln197_14_fu_1985_p1));
    sub_ln197_11_fu_2059_p2 <= std_logic_vector(unsigned(zext_ln197_11_cast_fu_2051_p3) - unsigned(sext_ln197_16_fu_2043_p1));
    sub_ln197_1_fu_1042_p2 <= std_logic_vector(unsigned(zext_ln197_10_fu_1038_p1) - unsigned(zext_ln197_9_fu_1026_p1));
    sub_ln197_2_fu_1068_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_1061_p3) - unsigned(trunc_ln197_reg_2537));
    sub_ln197_3_fu_1248_p2 <= std_logic_vector(unsigned(zext_ln197_3_cast_fu_1241_p3) - unsigned(sext_ln197_fu_1238_p1));
    sub_ln197_4_fu_1306_p2 <= std_logic_vector(unsigned(zext_ln197_4_cast_fu_1298_p3) - unsigned(sext_ln197_2_fu_1290_p1));
    sub_ln197_5_fu_1364_p2 <= std_logic_vector(unsigned(zext_ln197_5_cast_fu_1356_p3) - unsigned(sext_ln197_4_fu_1348_p1));
    sub_ln197_6_fu_1592_p2 <= std_logic_vector(unsigned(zext_ln197_6_cast_fu_1585_p3) - unsigned(sext_ln197_6_fu_1582_p1));
    sub_ln197_7_fu_1650_p2 <= std_logic_vector(unsigned(zext_ln197_7_cast_fu_1642_p3) - unsigned(sext_ln197_8_fu_1634_p1));
    sub_ln197_8_fu_1708_p2 <= std_logic_vector(unsigned(zext_ln197_8_cast_fu_1700_p3) - unsigned(sext_ln197_10_fu_1692_p1));
    sub_ln197_9_fu_1943_p2 <= std_logic_vector(unsigned(zext_ln197_9_cast_fu_1936_p3) - unsigned(sext_ln197_12_fu_1933_p1));
    sub_ln197_fu_2206_p2 <= std_logic_vector(unsigned(zext_ln197_5_fu_2202_p1) - unsigned(zext_ln197_4_fu_2190_p1));
    sub_ln321_1_fu_763_p2 <= std_logic_vector(unsigned(zext_ln321_11_fu_759_p1) - unsigned(zext_ln321_10_fu_747_p1));
    sub_ln321_2_fu_789_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_782_p3) - unsigned(trunc_ln321_reg_2401));
    sub_ln321_fu_848_p2 <= std_logic_vector(unsigned(zext_ln321_6_fu_844_p1) - unsigned(zext_ln321_5_fu_832_p1));
    sub_ln79_1_fu_1158_p2 <= std_logic_vector(unsigned(zext_ln79_1_fu_1154_p1) - unsigned(zext_ln1245_fu_1130_p1));
    sub_ln79_fu_1115_p2 <= std_logic_vector(unsigned(zext_ln79_fu_1111_p1) - unsigned(zext_ln1244_fu_1087_p1));
    tmp_12_cast_fu_2217_p3 <= (add_ln197_1_fu_2212_p2 & ap_const_lv2_0);
    tmp_17_cast_fu_1418_p3 <= (add_ln197_6_reg_2662 & ap_const_lv2_0);
    tmp_1_fu_751_p3 <= (add_ln321_6_fu_742_p2 & ap_const_lv2_0);
    tmp_21_cast_fu_1435_p3 <= (add_ln197_11_reg_2672 & ap_const_lv2_0);
    tmp_25_cast_fu_1456_p3 <= (add_ln197_16_reg_2682 & ap_const_lv2_0);
    tmp_29_cast_fu_1762_p3 <= (add_ln197_21_reg_2787 & ap_const_lv2_0);
    tmp_2_fu_836_p3 <= (conv_s0_x_assign_reg_403 & ap_const_lv4_0);
    tmp_33_cast_fu_1779_p3 <= (add_ln197_26_reg_2797 & ap_const_lv2_0);
    tmp_37_cast_fu_1800_p3 <= (add_ln197_31_reg_2807 & ap_const_lv2_0);
    tmp_3_fu_1030_p3 <= (add_ln197_3_fu_1021_p2 & ap_const_lv2_0);
    tmp_41_cast_fu_2091_p3 <= (add_ln197_36_reg_2905 & ap_const_lv2_0);
    tmp_45_cast_fu_2108_p3 <= (add_ln197_41_reg_2915 & ap_const_lv2_0);
    tmp_49_cast_fu_2125_p3 <= (add_ln197_46_reg_2925 & ap_const_lv2_0);
    tmp_4_cast_fu_859_p3 <= (add_ln321_4_fu_854_p2 & ap_const_lv2_0);
    tmp_5_fu_730_p3 <= (hw_kernel_s0_z_assig_reg_381 & ap_const_lv2_0);
    tmp_8_fu_971_p3 <= (conv_s1_r_z_assign_reg_447 & ap_const_lv4_0);
    tmp_9_fu_993_p3 <= (conv_s1_r_z_assign_reg_447 & ap_const_lv2_0);
    tmp_fu_620_p3 <= (hw_input_s0_z_assign_reg_337 & ap_const_lv4_0);
    tmp_s_fu_2194_p3 <= (hw_output_s0_x_xi_as_reg_536 & ap_const_lv4_0);
    trunc_ln197_10_fu_1395_p1 <= add_ln197_18_fu_1386_p2(7 - 1 downto 0);
    trunc_ln197_11_fu_1507_p1 <= sub_ln106_fu_1501_p2(5 - 1 downto 0);
    trunc_ln197_12_fu_1529_p1 <= add_ln197_23_fu_1524_p2(11 - 1 downto 0);
    trunc_ln197_13_fu_1533_p1 <= add_ln197_23_fu_1524_p2(7 - 1 downto 0);
    trunc_ln197_14_fu_1638_p1 <= add_ln115_fu_1629_p2(5 - 1 downto 0);
    trunc_ln197_15_fu_1555_p1 <= add_ln197_28_fu_1550_p2(11 - 1 downto 0);
    trunc_ln197_16_fu_1559_p1 <= add_ln197_28_fu_1550_p2(7 - 1 downto 0);
    trunc_ln197_17_fu_1696_p1 <= add_ln124_fu_1687_p2(5 - 1 downto 0);
    trunc_ln197_18_fu_1735_p1 <= add_ln197_33_fu_1730_p2(11 - 1 downto 0);
    trunc_ln197_19_fu_1739_p1 <= add_ln197_33_fu_1730_p2(7 - 1 downto 0);
    trunc_ln197_1_fu_1057_p1 <= add_ln197_4_fu_1048_p2(6 - 1 downto 0);
    trunc_ln197_20_fu_1851_p1 <= sub_ln133_fu_1845_p2(5 - 1 downto 0);
    trunc_ln197_21_fu_1873_p1 <= add_ln197_38_fu_1868_p2(11 - 1 downto 0);
    trunc_ln197_22_fu_1877_p1 <= add_ln197_38_fu_1868_p2(7 - 1 downto 0);
    trunc_ln197_23_fu_1989_p1 <= add_ln142_fu_1980_p2(5 - 1 downto 0);
    trunc_ln197_24_fu_1899_p1 <= add_ln197_43_fu_1894_p2(11 - 1 downto 0);
    trunc_ln197_25_fu_1903_p1 <= add_ln197_43_fu_1894_p2(7 - 1 downto 0);
    trunc_ln197_26_fu_2047_p1 <= add_ln151_fu_2038_p2(5 - 1 downto 0);
    trunc_ln197_27_fu_1925_p1 <= add_ln197_48_fu_1920_p2(11 - 1 downto 0);
    trunc_ln197_28_fu_1929_p1 <= add_ln197_48_fu_1920_p2(7 - 1 downto 0);
    trunc_ln197_2_fu_1164_p1 <= sub_ln79_1_fu_1158_p2(5 - 1 downto 0);
    trunc_ln197_3_fu_1186_p1 <= add_ln197_8_fu_1181_p2(11 - 1 downto 0);
    trunc_ln197_4_fu_1190_p1 <= add_ln197_8_fu_1181_p2(7 - 1 downto 0);
    trunc_ln197_5_fu_1294_p1 <= add_ln88_fu_1285_p2(5 - 1 downto 0);
    trunc_ln197_6_fu_1212_p1 <= add_ln197_13_fu_1207_p2(11 - 1 downto 0);
    trunc_ln197_7_fu_1216_p1 <= add_ln197_13_fu_1207_p2(7 - 1 downto 0);
    trunc_ln197_8_fu_1352_p1 <= add_ln97_fu_1343_p2(5 - 1 downto 0);
    trunc_ln197_9_fu_1391_p1 <= add_ln197_18_fu_1386_p2(11 - 1 downto 0);
    trunc_ln197_fu_1053_p1 <= add_ln197_4_fu_1048_p2(8 - 1 downto 0);
    trunc_ln321_1_fu_778_p1 <= add_ln321_7_fu_769_p2(6 - 1 downto 0);
    trunc_ln321_fu_774_p1 <= add_ln321_7_fu_769_p2(8 - 1 downto 0);
    zext_ln106_fu_1497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1489_p3),6));
    zext_ln1228_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_input_s0_y_assign_reg_315),11));
    zext_ln1229_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_input_s0_x_assign_reg_326),7));
    zext_ln1232_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_kernel_s0_y_assig_reg_348),8));
    zext_ln1234_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_kernel_s0_w_assig_reg_370),5));
    zext_ln1240_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_r_y_assign_reg_425),6));
    zext_ln1241_1_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_r_x_assign_reg_436),3));
    zext_ln1241_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_r_x_assign_reg_436),6));
    zext_ln1243_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_993_p3),5));
    zext_ln1244_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_y_y_assign_reg_470),6));
    zext_ln1245_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_x_x_assign_reg_481),6));
    zext_ln1250_fu_1473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_x_x_assign_1_reg_492),6));
    zext_ln1255_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_x_x_assign_2_reg_503),6));
    zext_ln1262_fu_2158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_output_s0_w_assig_reg_514),11));
    zext_ln133_fu_1841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1833_p3),6));
    zext_ln197_10_cast_fu_1993_p3 <= (trunc_ln197_23_fu_1989_p1 & ap_const_lv4_0);
    zext_ln197_10_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1030_p3),64));
    zext_ln197_11_cast_fu_2051_p3 <= (trunc_ln197_26_fu_2047_p1 & ap_const_lv4_0);
    zext_ln197_11_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_5_fu_1073_p2),64));
    zext_ln197_12_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_7_fu_1425_p2),64));
    zext_ln197_13_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln387_fu_1173_p1),33));
    zext_ln197_14_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_10_fu_1275_p2),64));
    zext_ln197_15_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_12_fu_1442_p2),64));
    zext_ln197_16_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln396_fu_1199_p1),33));
    zext_ln197_17_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_15_fu_1333_p2),64));
    zext_ln197_18_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_17_fu_1463_p2),64));
    zext_ln197_19_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln405_fu_1379_p1),33));
    zext_ln197_1_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_r_z_assign_reg_447),7));
    zext_ln197_20_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_20_reg_2687),64));
    zext_ln197_21_fu_1774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_22_fu_1769_p2),64));
    zext_ln197_22_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln414_fu_1516_p1),33));
    zext_ln197_23_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_25_fu_1619_p2),64));
    zext_ln197_24_fu_1791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_27_fu_1786_p2),64));
    zext_ln197_25_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln423_fu_1542_p1),33));
    zext_ln197_26_fu_1682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_30_fu_1677_p2),64));
    zext_ln197_27_fu_1812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_32_fu_1807_p2),64));
    zext_ln197_28_fu_1726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln432_fu_1723_p1),33));
    zext_ln197_29_fu_1796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_35_reg_2812),64));
    zext_ln197_2_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_971_p3),7));
    zext_ln197_30_fu_2103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_37_fu_2098_p2),64));
    zext_ln197_31_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln441_fu_1860_p1),33));
    zext_ln197_32_fu_1975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_40_fu_1970_p2),64));
    zext_ln197_33_fu_2120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_42_fu_2115_p2),64));
    zext_ln197_34_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln450_fu_1886_p1),33));
    zext_ln197_35_fu_2033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_45_fu_2028_p2),64));
    zext_ln197_36_fu_2137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_47_fu_2132_p2),64));
    zext_ln197_37_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln459_fu_1912_p1),33));
    zext_ln197_38_fu_2142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_50_reg_2930),64));
    zext_ln197_3_cast_fu_1241_p3 <= (trunc_ln197_2_reg_2618 & ap_const_lv4_0);
    zext_ln197_3_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_fu_983_p2),33));
    zext_ln197_4_cast_fu_1298_p3 <= (trunc_ln197_5_fu_1294_p1 & ap_const_lv4_0);
    zext_ln197_4_fu_2190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_output_s0_x_xi_as_reg_536),9));
    zext_ln197_5_cast_fu_1356_p3 <= (trunc_ln197_8_fu_1352_p1 & ap_const_lv4_0);
    zext_ln197_5_fu_2202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_2194_p3),9));
    zext_ln197_6_cast_fu_1585_p3 <= (trunc_ln197_11_reg_2743 & ap_const_lv4_0);
    zext_ln197_6_fu_2230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_2_reg_3007),64));
    zext_ln197_7_cast_fu_1642_p3 <= (trunc_ln197_14_fu_1638_p1 & ap_const_lv4_0);
    zext_ln197_7_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_w_assign_reg_458),11));
    zext_ln197_8_cast_fu_1700_p3 <= (trunc_ln197_17_fu_1696_p1 & ap_const_lv4_0);
    zext_ln197_8_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_w_assign_reg_458),5));
    zext_ln197_9_cast_fu_1936_p3 <= (trunc_ln197_20_reg_2870 & ap_const_lv4_0);
    zext_ln197_9_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln197_3_fu_1021_p2),64));
    zext_ln197_fu_2174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_output_s0_y_yi_as_reg_525),9));
    zext_ln321_10_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_6_fu_742_p2),64));
    zext_ln321_11_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_751_p3),64));
    zext_ln321_12_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_8_fu_794_p2),64));
    zext_ln321_1_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_input_s0_z_assign_reg_337),7));
    zext_ln321_2_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_620_p3),7));
    zext_ln321_3_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_1_fu_638_p2),11));
    zext_ln321_4_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_3_reg_2344),64));
    zext_ln321_5_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s0_x_assign_reg_403),9));
    zext_ln321_6_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_836_p3),9));
    zext_ln321_7_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s0_w_assign_reg_414),11));
    zext_ln321_8_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_5_fu_883_p2),64));
    zext_ln321_9_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_730_p3),5));
    zext_ln321_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s0_y_assign_reg_392),9));
    zext_ln396_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c5_5_fu_931_p2),6));
    zext_ln405_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln405_fu_945_p2),6));
    zext_ln414_1_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_r_y_assign_reg_425),8));
    zext_ln414_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c3_5_fu_903_p2),6));
    zext_ln586_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_s1_r_x_assign_reg_436),64));
    zext_ln592_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_kernel_s0_x_assig_reg_359),64));
    zext_ln79_1_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1146_p3),6));
    zext_ln79_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln79_1_fu_1103_p3),6));
end behav;
