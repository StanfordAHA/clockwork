{"top":"global.conv33_recipe_compute",
"namespaces":{
  "commonlib":{
    "generators":{
      "MAD":{
        "typegen":"coreir.ternary",
        "genparams":{"width":"Int"}
      },
      "abs":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "absd":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "accumulation_register":{
        "typegen":"commonlib.accumulation_register_type",
        "genparams":{"iterations":"Int", "width":"Int"}
      },
      "bitopn":{
        "typegen":"commonlib.bitopN_type",
        "genparams":{"N":"Int", "operator":"String"}
      },
      "const_array":{
        "typegen":"coreir.constArrayTG",
        "genparams":{"type":"CoreIRType", "value":"Int"},
        "defaultgenargs":{"value":["Int",0]}
      },
      "counter":{
        "typegen":"commonlib.counter_type",
        "genparams":{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"}
      },
      "deserializer":{
        "typegen":"commonlib.deserializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "div":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "lutN":{
        "typegen":"commonlib.lutNType",
        "genparams":{"N":"Int"},
        "modules":[
          [{"N":["Int",3]},{
            "type":["Record",[
              ["in",["Array",3,"BitIn"]],
              ["out","Bit"]
            ]],
            "modparams":{"init":["BitVector",8]},
            "instances":{
              "lut":{
                "genref":"cgralib.PE",
                "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","bit"], "width":["Int",16]},
                "modargs":{"bit0_mode":["String","BYPASS"], "bit0_value":["Bool",false], "bit1_mode":["String","BYPASS"], "bit1_value":["Bool",false], "bit2_mode":["String","BYPASS"], "bit2_value":["Bool",false], "flag_sel":["String","lut"], "lut_value":[["BitVector",8],"Arg","init"]}
              }
            },
            "connections":[
              ["self.in","lut.bit.in"],
              ["self.out","lut.bit.out"]
            ]
          }]
        ],
        "metadata":{"verilog":{"definition":"  assign out = init[in];","interface":["input [N-1:0] in","output out"],"parameters":["init"]}}
      },
      "muxn":{
        "typegen":"commonlib.muxN_type",
        "genparams":{"N":"Int", "width":"Int"}
      },
      "opn":{
        "typegen":"commonlib.opN_type",
        "genparams":{"N":"Int", "operator":"String", "width":"Int"}
      },
      "reg_array":{
        "typegen":"coreir.regArrayTG",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "init":"Int", "type":"CoreIRType"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false], "init":["Int",0]}
      },
      "reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "sclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "serializer":{
        "typegen":"commonlib.serializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "smax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "smin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "transpose":{
        "typegen":"commonlib.transpose_type",
        "genparams":{"input_type":"CoreIRType"}
      },
      "transpose_reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "uclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "umax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "umin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      }
    },
    "typegens":{
      "accumulation_register_type":[{"iterations":"Int", "width":"Int"},"implicit"],
      "bitopN_type":[{"N":"Int", "operator":"String"},"implicit"],
      "counter_type":[{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"},"implicit"],
      "deserializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "lutNType":[{"N":"Int"},"sparse",[
        [{"N":["Int",3]},["Record",[["in",["Array",3,"BitIn"]],["out","Bit"]]]]
      ]],
      "muxN_type":[{"N":"Int", "width":"Int"},"implicit"],
      "opN_type":[{"N":"Int", "operator":"String", "width":"Int"},"implicit"],
      "reshape_type":[{"input_type":"CoreIRType", "output_type":"CoreIRType"},"implicit"],
      "serializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "transpose_type":[{"input_type":"CoreIRType"},"implicit"]
    }
  },
  "global":{
    "modules":{
      "buf_inst_ub":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["reset","BitIn"],
          ["input_write",["Array",1,["Array",16,"BitIn"]]],
          ["output_read",["Array",9,["Array",16,"Bit"]]],
          ["output_read_extra_ctrl","Bit"]
        ]],
        "instances":{
          "d_reg__U10$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "d_reg__U11$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "d_reg__U12$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "d_reg__U13$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "d_reg__U8$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "d_reg__U9$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "ub_buf_inst_input_10_to_buf_inst_output_3":{
            "genref":"cwlib.Mem",
            "genargs":{"config":["Json",{"agg2sram":{"cycle_starting_addr":[4],"cycle_stride":[4,64,0],"dimensionality":3,"extent":[16,64,1],"read_data_starting_addr":[0],"read_data_stride":[0,0,0],"write_data_starting_addr":[0],"write_data_stride":[1,16,0]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,4,64,0],"dimensionality":4,"extent":[4,16,64,1],"write_data_starting_addr":[0],"write_data_stride":[1,0,0,0]},"sram2tb":{"cycle_starting_addr":[123],"cycle_stride":[2,4,64,0],"dimensionality":4,"extent":[2,16,62,1],"mux_write_data_starting_addr":[0],"mux_write_data_stride":[1,0,0,0],"read_data_starting_addr":[0],"read_data_stride":[16,1,16,0],"write_data_starting_addr":[0],"write_data_stride":[0,4,0,0]},"stencil_valid":{"cycle_starting_addr":[130],"cycle_stride":[1,64,0],"dimensionality":3,"extent":[62,62,1]},"tb2out_0":{"cycle_starting_addr":[128],"cycle_stride":[1,4,64,0],"dimensionality":4,"extent":[4,16,62,1],"read_data_starting_addr":[0],"read_data_stride":[1,4,0,0]},"tb2out_1":{"cycle_starting_addr":[128],"cycle_stride":[1,4,64,0],"dimensionality":4,"extent":[4,16,62,1],"read_data_starting_addr":[32],"read_data_stride":[1,4,0,0]}}], "has_flush":["Bool",false], "has_reset":["Bool",false], "has_stencil_valid":["Bool",true], "has_valid":["Bool",false], "num_input":["Int",1], "num_output":["Int",2], "width":["Int",16]},
            "modargs":{"mode":["String","lake"]}
          },
          "ub_buf_inst_input_10_to_buf_inst_output_3_clk_en_const":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          }
        },
        "connections":[
          ["self.clk","d_reg__U10$reg0.clk"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.data_out_1","d_reg__U10$reg0.in"],
          ["d_reg__U11$reg0.in","d_reg__U10$reg0.out"],
          ["self.output_read.4","d_reg__U10$reg0.out"],
          ["self.clk","d_reg__U11$reg0.clk"],
          ["self.output_read.3","d_reg__U11$reg0.out"],
          ["self.clk","d_reg__U12$reg0.clk"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.data_out_0","d_reg__U12$reg0.in"],
          ["d_reg__U13$reg0.in","d_reg__U12$reg0.out"],
          ["self.output_read.1","d_reg__U12$reg0.out"],
          ["self.clk","d_reg__U13$reg0.clk"],
          ["self.output_read.0","d_reg__U13$reg0.out"],
          ["self.clk","d_reg__U8$reg0.clk"],
          ["self.input_write.0","d_reg__U8$reg0.in"],
          ["d_reg__U9$reg0.in","d_reg__U8$reg0.out"],
          ["self.output_read.7","d_reg__U8$reg0.out"],
          ["self.clk","d_reg__U9$reg0.clk"],
          ["self.output_read.6","d_reg__U9$reg0.out"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.clk","self.clk"],
          ["self.output_read.8","self.input_write.0"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.data_in_0","self.input_write.0"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.data_out_0","self.output_read.2"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.data_out_1","self.output_read.5"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.stencil_valid","self.output_read_extra_ctrl"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3.rst_n","self.reset"],
          ["ub_buf_inst_input_10_to_buf_inst_output_3_clk_en_const.out","ub_buf_inst_input_10_to_buf_inst_output_3.clk_en"]
        ]
      },
      "conv33_recipe_compute":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["reset","BitIn"],
          ["in_inst_input_read_valid","Bit"],
          ["in_inst_input_read",["Array",1,["Array",16,"BitIn"]]],
          ["out_inst_output_write_en","Bit"],
          ["out_inst_output_write",["Array",1,["Array",16,"Bit"]]]
        ]],
        "instances":{
          "_U14$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$d_reg__U10$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$d_reg__U11$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$d_reg__U12$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$d_reg__U13$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$d_reg__U8$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$d_reg__U9$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3":{
            "genref":"cwlib.Mem",
            "genargs":{"config":["Json",{"agg2sram":{"cycle_starting_addr":[4],"cycle_stride":[4,64,0],"dimensionality":3,"extent":[16,64,1],"read_data_starting_addr":[0],"read_data_stride":[0,0,0],"write_data_starting_addr":[0],"write_data_stride":[1,16,0]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,4,64,0],"dimensionality":4,"extent":[4,16,64,1],"write_data_starting_addr":[0],"write_data_stride":[1,0,0,0]},"sram2tb":{"cycle_starting_addr":[123],"cycle_stride":[2,4,64,0],"dimensionality":4,"extent":[2,16,62,1],"mux_write_data_starting_addr":[0],"mux_write_data_stride":[1,0,0,0],"read_data_starting_addr":[0],"read_data_stride":[16,1,16,0],"write_data_starting_addr":[0],"write_data_stride":[0,4,0,0]},"stencil_valid":{"cycle_starting_addr":[130],"cycle_stride":[1,64,0],"dimensionality":3,"extent":[62,62,1]},"tb2out_0":{"cycle_starting_addr":[128],"cycle_stride":[1,4,64,0],"dimensionality":4,"extent":[4,16,62,1],"read_data_starting_addr":[0],"read_data_stride":[1,4,0,0]},"tb2out_1":{"cycle_starting_addr":[128],"cycle_stride":[1,4,64,0],"dimensionality":4,"extent":[4,16,62,1],"read_data_starting_addr":[32],"read_data_stride":[1,4,0,0]}}], "has_flush":["Bool",false], "has_reset":["Bool",false], "has_stencil_valid":["Bool",true], "has_valid":["Bool",false], "num_input":["Int",1], "num_output":["Int",2], "width":["Int",16]},
            "modargs":{"mode":["String","lake"]}
          },
          "buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3_clk_en_const":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "io16_out_inst_output_write_0":{
            "genref":"cgralib.IO",
            "genargs":{"width":["Int",16]},
            "modargs":{"mode":["String","out"]}
          },
          "io16in_in_inst_input_read_0":{
            "genref":"cgralib.IO",
            "genargs":{"width":["Int",16]},
            "modargs":{"mode":["String","in"]}
          },
          "io1_out_inst_output_write_en":{
            "modref":"cgralib.BitIO",
            "modargs":{"mode":["String","out"]}
          },
          "io1in_reset":{
            "modref":"cgralib.BitIO",
            "modargs":{"mode":["String","in"]}
          },
          "output$add_all__U0$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U1$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U2$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U3$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U4$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U5$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U6$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "output$add_all__U7$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          }
        },
        "connections":[
          ["io16in_in_inst_input_read_0.out","_U14$reg0.in"],
          ["buf_inst$d_reg__U8$reg0.in","_U14$reg0.out"],
          ["buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.data_in_0","_U14$reg0.out"],
          ["output$add_all__U7$binop.data.in.1","_U14$reg0.out"],
          ["buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.data_out_1","buf_inst$d_reg__U10$reg0.in"],
          ["buf_inst$d_reg__U11$reg0.in","buf_inst$d_reg__U10$reg0.out"],
          ["output$add_all__U3$binop.data.in.1","buf_inst$d_reg__U10$reg0.out"],
          ["output$add_all__U2$binop.data.in.1","buf_inst$d_reg__U11$reg0.out"],
          ["buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.data_out_0","buf_inst$d_reg__U12$reg0.in"],
          ["buf_inst$d_reg__U13$reg0.in","buf_inst$d_reg__U12$reg0.out"],
          ["output$add_all__U0$binop.data.in.1","buf_inst$d_reg__U12$reg0.out"],
          ["output$add_all__U0$binop.data.in.0","buf_inst$d_reg__U13$reg0.out"],
          ["buf_inst$d_reg__U9$reg0.in","buf_inst$d_reg__U8$reg0.out"],
          ["output$add_all__U6$binop.data.in.1","buf_inst$d_reg__U8$reg0.out"],
          ["output$add_all__U5$binop.data.in.1","buf_inst$d_reg__U9$reg0.out"],
          ["buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3_clk_en_const.out","buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.clk_en"],
          ["output$add_all__U1$binop.data.in.1","buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.data_out_0"],
          ["output$add_all__U4$binop.data.in.1","buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.data_out_1"],
          ["io1in_reset.out","buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.rst_n"],
          ["io1_out_inst_output_write_en.in","buf_inst$ub_buf_inst_input_10_to_buf_inst_output_3.stencil_valid"],
          ["output$add_all__U7$binop.data.out","io16_out_inst_output_write_0.in"],
          ["output$add_all__U1$binop.data.in.0","output$add_all__U0$binop.data.out"],
          ["output$add_all__U2$binop.data.in.0","output$add_all__U1$binop.data.out"],
          ["output$add_all__U3$binop.data.in.0","output$add_all__U2$binop.data.out"],
          ["output$add_all__U4$binop.data.in.0","output$add_all__U3$binop.data.out"],
          ["output$add_all__U5$binop.data.in.0","output$add_all__U4$binop.data.out"],
          ["output$add_all__U6$binop.data.in.0","output$add_all__U5$binop.data.out"],
          ["output$add_all__U7$binop.data.in.0","output$add_all__U6$binop.data.out"]
        ]
      },
      "cu_input":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["valid_pass_in","BitIn"],
          ["valid_pass_out","Bit"],
          ["in_inst_input_read",["Array",1,["Array",16,"BitIn"]]],
          ["buf_inst_input_write",["Array",1,["Array",16,"Bit"]]]
        ]],
        "connections":[
          ["self.in_inst_input_read.0","self.buf_inst_input_write.0"],
          ["self.valid_pass_out","self.valid_pass_in"]
        ]
      },
      "cu_output":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["valid_pass_in","BitIn"],
          ["valid_pass_out","Bit"],
          ["buf_inst_output_read",["Array",9,["Array",16,"BitIn"]]],
          ["out_inst_output_write",["Array",1,["Array",16,"Bit"]]]
        ]],
        "instances":{
          "add_all__U0$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U1$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U2$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U3$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U4$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U5$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U6$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          },
          "add_all__U7$binop":{
            "genref":"cgralib.PE",
            "genargs":{"numbitports":["Int",3], "numdataports":["Int",2], "op_kind":["String","alu"], "width":["Int",16]},
            "modargs":{"alu_op":["String","add"], "data0_mode":["String","BYPASS"], "data0_value":[["BitVector",16],"16'h0000"], "data1_mode":["String","BYPASS"], "data1_value":[["BitVector",16],"16'h0000"], "signed":["Bool",false]}
          }
        },
        "connections":[
          ["self.buf_inst_output_read.0","add_all__U0$binop.data.in.0"],
          ["self.buf_inst_output_read.1","add_all__U0$binop.data.in.1"],
          ["add_all__U1$binop.data.in.0","add_all__U0$binop.data.out"],
          ["self.buf_inst_output_read.2","add_all__U1$binop.data.in.1"],
          ["add_all__U2$binop.data.in.0","add_all__U1$binop.data.out"],
          ["self.buf_inst_output_read.3","add_all__U2$binop.data.in.1"],
          ["add_all__U3$binop.data.in.0","add_all__U2$binop.data.out"],
          ["self.buf_inst_output_read.4","add_all__U3$binop.data.in.1"],
          ["add_all__U4$binop.data.in.0","add_all__U3$binop.data.out"],
          ["self.buf_inst_output_read.5","add_all__U4$binop.data.in.1"],
          ["add_all__U5$binop.data.in.0","add_all__U4$binop.data.out"],
          ["self.buf_inst_output_read.6","add_all__U5$binop.data.in.1"],
          ["add_all__U6$binop.data.in.0","add_all__U5$binop.data.out"],
          ["self.buf_inst_output_read.7","add_all__U6$binop.data.in.1"],
          ["add_all__U7$binop.data.in.0","add_all__U6$binop.data.out"],
          ["self.buf_inst_output_read.8","add_all__U7$binop.data.in.1"],
          ["self.out_inst_output_write.0","add_all__U7$binop.data.out"],
          ["self.valid_pass_out","self.valid_pass_in"]
        ]
      }
    },
    "generators":{
      "delay_tile":{
        "typegen":"global.delay_tile_TG",
        "genparams":{"delay":"Int"}
      },
      "raw_dual_port_sram_tile":{
        "typegen":"global.raw_dual_port_sram_TG",
        "genparams":{"depth":"Int"}
      },
      "raw_quad_port_memtile":{
        "typegen":"global.raw_quad_port_memtile_TG",
        "genparams":{"depth":"Int"}
      },
      "tahoe":{
        "typegen":"global.tahoe_TG",
        "genparams":{"depth":"Int"}
      }
    },
    "typegens":{
      "delay_tile_TG":[{"delay":"Int"},"implicit"],
      "raw_dual_port_sram_TG":[{"depth":"Int"},"implicit"],
      "raw_quad_port_memtile_TG":[{"depth":"Int"},"implicit"],
      "tahoe_TG":[{"depth":"Int"},"implicit"]
    }
  },
  "mantle":{
    "generators":{
      "add":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "counter":{
        "typegen":"mantle.counter_type",
        "genparams":{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_en":["Bool",false], "has_max":["Bool",false], "has_srst":["Bool",false]}
      },
      "reg":{
        "typegen":"mantle.regType",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},
        "modules":[
          [{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false], "width":["Int",16]},{
            "type":["Record",[
              ["in",["Array",16,"BitIn"]],
              ["clk",["Named","coreir.clkIn"]],
              ["out",["Array",16,"Bit"]]
            ]],
            "modparams":{"init":["BitVector",16]},
            "defaultmodargs":{"init":[["BitVector",16],"16'h0000"]},
            "instances":{
              "reg0":{
                "genref":"coreir.reg",
                "genargs":{"width":["Int",16]},
                "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"Arg","init"]}
              }
            },
            "connections":[
              ["self.clk","reg0.clk"],
              ["self.in","reg0.in"],
              ["self.out","reg0.out"]
            ]
          }]
        ],
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false]}
      },
      "regCE":{
        "typegen":"mantle.regCEType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk) begin\n    if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk"]}}
      },
      "regCE_arst":{
        "typegen":"mantle.regCEArstType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk, posedge arst) begin\n    if (arst) begin\n      value <= init;\n    end\n    else if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk","input arst"],"parameters":["init"]}}
      },
      "sub":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "wire":{
        "typegen":"mantle.wire",
        "genparams":{"type":"CoreIRType"}
      }
    },
    "typegens":{
      "addType":[{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},"implicit"],
      "counter_type":[{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},"implicit"],
      "regCEArstType":[{"width":"Int"},"implicit"],
      "regCEType":[{"width":"Int"},"implicit"],
      "regType":[{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},"sparse",[
        [{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false], "width":["Int",16]},["Record",[["in",["Array",16,"BitIn"]],["clk",["Named","coreir.clkIn"]],["out",["Array",16,"Bit"]]]]]
      ]],
      "wire":[{"type":"CoreIRType"},"implicit"]
    }
  }
}
}
